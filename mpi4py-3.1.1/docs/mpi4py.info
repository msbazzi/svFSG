This is mpi4py.info, produced by makeinfo version 6.7 from mpi4py.texi.

     MPI for Python 3.1.1, Aug 14, 2021

     Lisandro Dalcin

     Copyright © 2021, Lisandro Dalcin

INFO-DIR-SECTION Miscellaneous
START-INFO-DIR-ENTRY
* mpi4py: (mpi4py.info). MPI for Python.
END-INFO-DIR-ENTRY


   Generated by Sphinx 4.1.2.


File: mpi4py.info,  Node: Top,  Next: Introduction,  Up: (dir)

MPI for Python
**************

     MPI for Python 3.1.1, Aug 14, 2021

     Lisandro Dalcin

     Copyright © 2021, Lisandro Dalcin

Abstract
========

This document describes the `MPI for Python' package.  `MPI for Python'
provides Python bindings for the `Message Passing Interface' (MPI)
standard, allowing Python applications to exploit multiple processors on
workstations, clusters and supercomputers.

This package builds on the MPI specification and provides an object
oriented interface resembling the MPI-2 C++ bindings.  It supports
point-to-point (sends, receives) and collective (broadcasts, scatters,
gathers) communication of any `picklable' Python object, as well as
efficient communication of Python objects exposing the Python buffer
interface (e.g.  NumPy arrays and builtin bytes/array/memoryview
objects).

* Menu:

* Introduction::
* Overview::
* Tutorial::
* mpi4py::
* mpi4py.MPI: mpi4py MPI.
* mpi4py.futures: mpi4py futures.
* mpi4py.util: mpi4py util.
* mpi4py.run: mpi4py run.
* Reference::
* Citation::
* Installation::
* Appendix::
* Python Module Index::
* Index::

 — The Detailed Node Listing —

Introduction

* What is MPI?::
* What is Python?::
* Related Projects::

Overview

* Communicating Python Objects and Array Data::
* Communicators::
* Point-to-Point Communications::
* Collective Communications::
* Support for GPU-aware MPI::
* Dynamic Process Management::
* One-Sided Communications::
* Parallel Input/Output::
* Environmental Management::

Point-to-Point Communications

* Blocking Communications::
* Nonblocking Communications::
* Persistent Communications::

Environmental Management

* Initialization and Exit::
* Implementation Information::
* Timers::
* Error Handling::

Tutorial

* Running Python scripts with MPI::
* Point-to-Point Communication::
* Collective Communication::
* MPI-IO::
* Dynamic Process Management: Dynamic Process Management<2>.
* CUDA-aware MPI + Python GPU arrays::
* One-Sided Communications: One-Sided Communications<2>.
* Wrapping with SWIG::
* Wrapping with F2Py::

mpi4py

* Runtime configuration options::
* Environment variables::
* Miscellaneous functions::

mpi4py.MPI

* Classes::
* Functions::
* Attributes::

mpi4py.futures

* concurrent.futures: concurrent futures.
* MPIPoolExecutor::
* MPICommExecutor::
* Command line::
* Examples::

mpi4py.util

* mpi4py.util.pkl5: mpi4py util pkl5.
* mpi4py.util.dtlib: mpi4py util dtlib.

mpi4py.util.pkl5

* Examples: Examples<2>.

mpi4py.run

* Interface options::

Reference

* mpi4py.MPI: mpi4py MPI<2>.

mpi4py.MPI

* mpi4py.MPI.Cartcomm: mpi4py MPI Cartcomm.
* mpi4py.MPI.Comm: mpi4py MPI Comm.
* mpi4py.MPI.Datatype: mpi4py MPI Datatype.
* mpi4py.MPI.Distgraphcomm: mpi4py MPI Distgraphcomm.
* mpi4py.MPI.Errhandler: mpi4py MPI Errhandler.
* mpi4py.MPI.File: mpi4py MPI File.
* mpi4py.MPI.Graphcomm: mpi4py MPI Graphcomm.
* mpi4py.MPI.Grequest: mpi4py MPI Grequest.
* mpi4py.MPI.Group: mpi4py MPI Group.
* mpi4py.MPI.Info: mpi4py MPI Info.
* mpi4py.MPI.Intercomm: mpi4py MPI Intercomm.
* mpi4py.MPI.Intracomm: mpi4py MPI Intracomm.
* mpi4py.MPI.Message: mpi4py MPI Message.
* mpi4py.MPI.Op: mpi4py MPI Op.
* mpi4py.MPI.Pickle: mpi4py MPI Pickle.
* mpi4py.MPI.Prequest: mpi4py MPI Prequest.
* mpi4py.MPI.Request: mpi4py MPI Request.
* mpi4py.MPI.Status: mpi4py MPI Status.
* mpi4py.MPI.Topocomm: mpi4py MPI Topocomm.
* mpi4py.MPI.Win: mpi4py MPI Win.
* mpi4py.MPI.memory: mpi4py MPI memory.
* mpi4py.MPI.Exception: mpi4py MPI Exception.
* mpi4py.MPI.Add_error_class: mpi4py MPI Add_error_class.
* mpi4py.MPI.Add_error_code: mpi4py MPI Add_error_code.
* mpi4py.MPI.Add_error_string: mpi4py MPI Add_error_string.
* mpi4py.MPI.Aint_add: mpi4py MPI Aint_add.
* mpi4py.MPI.Aint_diff: mpi4py MPI Aint_diff.
* mpi4py.MPI.Alloc_mem: mpi4py MPI Alloc_mem.
* mpi4py.MPI.Attach_buffer: mpi4py MPI Attach_buffer.
* mpi4py.MPI.Close_port: mpi4py MPI Close_port.
* mpi4py.MPI.Compute_dims: mpi4py MPI Compute_dims.
* mpi4py.MPI.Detach_buffer: mpi4py MPI Detach_buffer.
* mpi4py.MPI.Finalize: mpi4py MPI Finalize.
* mpi4py.MPI.Free_mem: mpi4py MPI Free_mem.
* mpi4py.MPI.Get_address: mpi4py MPI Get_address.
* mpi4py.MPI.Get_error_class: mpi4py MPI Get_error_class.
* mpi4py.MPI.Get_error_string: mpi4py MPI Get_error_string.
* mpi4py.MPI.Get_library_version: mpi4py MPI Get_library_version.
* mpi4py.MPI.Get_processor_name: mpi4py MPI Get_processor_name.
* mpi4py.MPI.Get_version: mpi4py MPI Get_version.
* mpi4py.MPI.Init: mpi4py MPI Init.
* mpi4py.MPI.Init_thread: mpi4py MPI Init_thread.
* mpi4py.MPI.Is_finalized: mpi4py MPI Is_finalized.
* mpi4py.MPI.Is_initialized: mpi4py MPI Is_initialized.
* mpi4py.MPI.Is_thread_main: mpi4py MPI Is_thread_main.
* mpi4py.MPI.Lookup_name: mpi4py MPI Lookup_name.
* mpi4py.MPI.Open_port: mpi4py MPI Open_port.
* mpi4py.MPI.Pcontrol: mpi4py MPI Pcontrol.
* mpi4py.MPI.Publish_name: mpi4py MPI Publish_name.
* mpi4py.MPI.Query_thread: mpi4py MPI Query_thread.
* mpi4py.MPI.Register_datarep: mpi4py MPI Register_datarep.
* mpi4py.MPI.Unpublish_name: mpi4py MPI Unpublish_name.
* mpi4py.MPI.Wtick: mpi4py MPI Wtick.
* mpi4py.MPI.Wtime: mpi4py MPI Wtime.
* mpi4py.MPI.get_vendor: mpi4py MPI get_vendor.
* mpi4py.MPI.UNDEFINED: mpi4py MPI UNDEFINED.
* mpi4py.MPI.ANY_SOURCE: mpi4py MPI ANY_SOURCE.
* mpi4py.MPI.ANY_TAG: mpi4py MPI ANY_TAG.
* mpi4py.MPI.PROC_NULL: mpi4py MPI PROC_NULL.
* mpi4py.MPI.ROOT: mpi4py MPI ROOT.
* mpi4py.MPI.BOTTOM: mpi4py MPI BOTTOM.
* mpi4py.MPI.IN_PLACE: mpi4py MPI IN_PLACE.
* mpi4py.MPI.KEYVAL_INVALID: mpi4py MPI KEYVAL_INVALID.
* mpi4py.MPI.TAG_UB: mpi4py MPI TAG_UB.
* mpi4py.MPI.HOST: mpi4py MPI HOST.
* mpi4py.MPI.IO: mpi4py MPI IO.
* mpi4py.MPI.WTIME_IS_GLOBAL: mpi4py MPI WTIME_IS_GLOBAL.
* mpi4py.MPI.UNIVERSE_SIZE: mpi4py MPI UNIVERSE_SIZE.
* mpi4py.MPI.APPNUM: mpi4py MPI APPNUM.
* mpi4py.MPI.LASTUSEDCODE: mpi4py MPI LASTUSEDCODE.
* mpi4py.MPI.WIN_BASE: mpi4py MPI WIN_BASE.
* mpi4py.MPI.WIN_SIZE: mpi4py MPI WIN_SIZE.
* mpi4py.MPI.WIN_DISP_UNIT: mpi4py MPI WIN_DISP_UNIT.
* mpi4py.MPI.WIN_CREATE_FLAVOR: mpi4py MPI WIN_CREATE_FLAVOR.
* mpi4py.MPI.WIN_FLAVOR: mpi4py MPI WIN_FLAVOR.
* mpi4py.MPI.WIN_MODEL: mpi4py MPI WIN_MODEL.
* mpi4py.MPI.SUCCESS: mpi4py MPI SUCCESS.
* mpi4py.MPI.ERR_LASTCODE: mpi4py MPI ERR_LASTCODE.
* mpi4py.MPI.ERR_COMM: mpi4py MPI ERR_COMM.
* mpi4py.MPI.ERR_GROUP: mpi4py MPI ERR_GROUP.
* mpi4py.MPI.ERR_TYPE: mpi4py MPI ERR_TYPE.
* mpi4py.MPI.ERR_REQUEST: mpi4py MPI ERR_REQUEST.
* mpi4py.MPI.ERR_OP: mpi4py MPI ERR_OP.
* mpi4py.MPI.ERR_BUFFER: mpi4py MPI ERR_BUFFER.
* mpi4py.MPI.ERR_COUNT: mpi4py MPI ERR_COUNT.
* mpi4py.MPI.ERR_TAG: mpi4py MPI ERR_TAG.
* mpi4py.MPI.ERR_RANK: mpi4py MPI ERR_RANK.
* mpi4py.MPI.ERR_ROOT: mpi4py MPI ERR_ROOT.
* mpi4py.MPI.ERR_TRUNCATE: mpi4py MPI ERR_TRUNCATE.
* mpi4py.MPI.ERR_IN_STATUS: mpi4py MPI ERR_IN_STATUS.
* mpi4py.MPI.ERR_PENDING: mpi4py MPI ERR_PENDING.
* mpi4py.MPI.ERR_TOPOLOGY: mpi4py MPI ERR_TOPOLOGY.
* mpi4py.MPI.ERR_DIMS: mpi4py MPI ERR_DIMS.
* mpi4py.MPI.ERR_ARG: mpi4py MPI ERR_ARG.
* mpi4py.MPI.ERR_OTHER: mpi4py MPI ERR_OTHER.
* mpi4py.MPI.ERR_UNKNOWN: mpi4py MPI ERR_UNKNOWN.
* mpi4py.MPI.ERR_INTERN: mpi4py MPI ERR_INTERN.
* mpi4py.MPI.ERR_INFO: mpi4py MPI ERR_INFO.
* mpi4py.MPI.ERR_FILE: mpi4py MPI ERR_FILE.
* mpi4py.MPI.ERR_WIN: mpi4py MPI ERR_WIN.
* mpi4py.MPI.ERR_KEYVAL: mpi4py MPI ERR_KEYVAL.
* mpi4py.MPI.ERR_INFO_KEY: mpi4py MPI ERR_INFO_KEY.
* mpi4py.MPI.ERR_INFO_VALUE: mpi4py MPI ERR_INFO_VALUE.
* mpi4py.MPI.ERR_INFO_NOKEY: mpi4py MPI ERR_INFO_NOKEY.
* mpi4py.MPI.ERR_ACCESS: mpi4py MPI ERR_ACCESS.
* mpi4py.MPI.ERR_AMODE: mpi4py MPI ERR_AMODE.
* mpi4py.MPI.ERR_BAD_FILE: mpi4py MPI ERR_BAD_FILE.
* mpi4py.MPI.ERR_FILE_EXISTS: mpi4py MPI ERR_FILE_EXISTS.
* mpi4py.MPI.ERR_FILE_IN_USE: mpi4py MPI ERR_FILE_IN_USE.
* mpi4py.MPI.ERR_NO_SPACE: mpi4py MPI ERR_NO_SPACE.
* mpi4py.MPI.ERR_NO_SUCH_FILE: mpi4py MPI ERR_NO_SUCH_FILE.
* mpi4py.MPI.ERR_IO: mpi4py MPI ERR_IO.
* mpi4py.MPI.ERR_READ_ONLY: mpi4py MPI ERR_READ_ONLY.
* mpi4py.MPI.ERR_CONVERSION: mpi4py MPI ERR_CONVERSION.
* mpi4py.MPI.ERR_DUP_DATAREP: mpi4py MPI ERR_DUP_DATAREP.
* mpi4py.MPI.ERR_UNSUPPORTED_DATAREP: mpi4py MPI ERR_UNSUPPORTED_DATAREP.
* mpi4py.MPI.ERR_UNSUPPORTED_OPERATION: mpi4py MPI ERR_UNSUPPORTED_OPERATION.
* mpi4py.MPI.ERR_NAME: mpi4py MPI ERR_NAME.
* mpi4py.MPI.ERR_NO_MEM: mpi4py MPI ERR_NO_MEM.
* mpi4py.MPI.ERR_NOT_SAME: mpi4py MPI ERR_NOT_SAME.
* mpi4py.MPI.ERR_PORT: mpi4py MPI ERR_PORT.
* mpi4py.MPI.ERR_QUOTA: mpi4py MPI ERR_QUOTA.
* mpi4py.MPI.ERR_SERVICE: mpi4py MPI ERR_SERVICE.
* mpi4py.MPI.ERR_SPAWN: mpi4py MPI ERR_SPAWN.
* mpi4py.MPI.ERR_BASE: mpi4py MPI ERR_BASE.
* mpi4py.MPI.ERR_SIZE: mpi4py MPI ERR_SIZE.
* mpi4py.MPI.ERR_DISP: mpi4py MPI ERR_DISP.
* mpi4py.MPI.ERR_ASSERT: mpi4py MPI ERR_ASSERT.
* mpi4py.MPI.ERR_LOCKTYPE: mpi4py MPI ERR_LOCKTYPE.
* mpi4py.MPI.ERR_RMA_CONFLICT: mpi4py MPI ERR_RMA_CONFLICT.
* mpi4py.MPI.ERR_RMA_SYNC: mpi4py MPI ERR_RMA_SYNC.
* mpi4py.MPI.ERR_RMA_RANGE: mpi4py MPI ERR_RMA_RANGE.
* mpi4py.MPI.ERR_RMA_ATTACH: mpi4py MPI ERR_RMA_ATTACH.
* mpi4py.MPI.ERR_RMA_SHARED: mpi4py MPI ERR_RMA_SHARED.
* mpi4py.MPI.ERR_RMA_FLAVOR: mpi4py MPI ERR_RMA_FLAVOR.
* mpi4py.MPI.ORDER_C: mpi4py MPI ORDER_C.
* mpi4py.MPI.ORDER_FORTRAN: mpi4py MPI ORDER_FORTRAN.
* mpi4py.MPI.ORDER_F: mpi4py MPI ORDER_F.
* mpi4py.MPI.TYPECLASS_INTEGER: mpi4py MPI TYPECLASS_INTEGER.
* mpi4py.MPI.TYPECLASS_REAL: mpi4py MPI TYPECLASS_REAL.
* mpi4py.MPI.TYPECLASS_COMPLEX: mpi4py MPI TYPECLASS_COMPLEX.
* mpi4py.MPI.DISTRIBUTE_NONE: mpi4py MPI DISTRIBUTE_NONE.
* mpi4py.MPI.DISTRIBUTE_BLOCK: mpi4py MPI DISTRIBUTE_BLOCK.
* mpi4py.MPI.DISTRIBUTE_CYCLIC: mpi4py MPI DISTRIBUTE_CYCLIC.
* mpi4py.MPI.DISTRIBUTE_DFLT_DARG: mpi4py MPI DISTRIBUTE_DFLT_DARG.
* mpi4py.MPI.COMBINER_NAMED: mpi4py MPI COMBINER_NAMED.
* mpi4py.MPI.COMBINER_DUP: mpi4py MPI COMBINER_DUP.
* mpi4py.MPI.COMBINER_CONTIGUOUS: mpi4py MPI COMBINER_CONTIGUOUS.
* mpi4py.MPI.COMBINER_VECTOR: mpi4py MPI COMBINER_VECTOR.
* mpi4py.MPI.COMBINER_HVECTOR: mpi4py MPI COMBINER_HVECTOR.
* mpi4py.MPI.COMBINER_INDEXED: mpi4py MPI COMBINER_INDEXED.
* mpi4py.MPI.COMBINER_HINDEXED: mpi4py MPI COMBINER_HINDEXED.
* mpi4py.MPI.COMBINER_INDEXED_BLOCK: mpi4py MPI COMBINER_INDEXED_BLOCK.
* mpi4py.MPI.COMBINER_HINDEXED_BLOCK: mpi4py MPI COMBINER_HINDEXED_BLOCK.
* mpi4py.MPI.COMBINER_STRUCT: mpi4py MPI COMBINER_STRUCT.
* mpi4py.MPI.COMBINER_SUBARRAY: mpi4py MPI COMBINER_SUBARRAY.
* mpi4py.MPI.COMBINER_DARRAY: mpi4py MPI COMBINER_DARRAY.
* mpi4py.MPI.COMBINER_RESIZED: mpi4py MPI COMBINER_RESIZED.
* mpi4py.MPI.COMBINER_F90_REAL: mpi4py MPI COMBINER_F90_REAL.
* mpi4py.MPI.COMBINER_F90_COMPLEX: mpi4py MPI COMBINER_F90_COMPLEX.
* mpi4py.MPI.COMBINER_F90_INTEGER: mpi4py MPI COMBINER_F90_INTEGER.
* mpi4py.MPI.IDENT: mpi4py MPI IDENT.
* mpi4py.MPI.CONGRUENT: mpi4py MPI CONGRUENT.
* mpi4py.MPI.SIMILAR: mpi4py MPI SIMILAR.
* mpi4py.MPI.UNEQUAL: mpi4py MPI UNEQUAL.
* mpi4py.MPI.CART: mpi4py MPI CART.
* mpi4py.MPI.GRAPH: mpi4py MPI GRAPH.
* mpi4py.MPI.DIST_GRAPH: mpi4py MPI DIST_GRAPH.
* mpi4py.MPI.UNWEIGHTED: mpi4py MPI UNWEIGHTED.
* mpi4py.MPI.WEIGHTS_EMPTY: mpi4py MPI WEIGHTS_EMPTY.
* mpi4py.MPI.COMM_TYPE_SHARED: mpi4py MPI COMM_TYPE_SHARED.
* mpi4py.MPI.BSEND_OVERHEAD: mpi4py MPI BSEND_OVERHEAD.
* mpi4py.MPI.WIN_FLAVOR_CREATE: mpi4py MPI WIN_FLAVOR_CREATE.
* mpi4py.MPI.WIN_FLAVOR_ALLOCATE: mpi4py MPI WIN_FLAVOR_ALLOCATE.
* mpi4py.MPI.WIN_FLAVOR_DYNAMIC: mpi4py MPI WIN_FLAVOR_DYNAMIC.
* mpi4py.MPI.WIN_FLAVOR_SHARED: mpi4py MPI WIN_FLAVOR_SHARED.
* mpi4py.MPI.WIN_SEPARATE: mpi4py MPI WIN_SEPARATE.
* mpi4py.MPI.WIN_UNIFIED: mpi4py MPI WIN_UNIFIED.
* mpi4py.MPI.MODE_NOCHECK: mpi4py MPI MODE_NOCHECK.
* mpi4py.MPI.MODE_NOSTORE: mpi4py MPI MODE_NOSTORE.
* mpi4py.MPI.MODE_NOPUT: mpi4py MPI MODE_NOPUT.
* mpi4py.MPI.MODE_NOPRECEDE: mpi4py MPI MODE_NOPRECEDE.
* mpi4py.MPI.MODE_NOSUCCEED: mpi4py MPI MODE_NOSUCCEED.
* mpi4py.MPI.LOCK_EXCLUSIVE: mpi4py MPI LOCK_EXCLUSIVE.
* mpi4py.MPI.LOCK_SHARED: mpi4py MPI LOCK_SHARED.
* mpi4py.MPI.MODE_RDONLY: mpi4py MPI MODE_RDONLY.
* mpi4py.MPI.MODE_WRONLY: mpi4py MPI MODE_WRONLY.
* mpi4py.MPI.MODE_RDWR: mpi4py MPI MODE_RDWR.
* mpi4py.MPI.MODE_CREATE: mpi4py MPI MODE_CREATE.
* mpi4py.MPI.MODE_EXCL: mpi4py MPI MODE_EXCL.
* mpi4py.MPI.MODE_DELETE_ON_CLOSE: mpi4py MPI MODE_DELETE_ON_CLOSE.
* mpi4py.MPI.MODE_UNIQUE_OPEN: mpi4py MPI MODE_UNIQUE_OPEN.
* mpi4py.MPI.MODE_SEQUENTIAL: mpi4py MPI MODE_SEQUENTIAL.
* mpi4py.MPI.MODE_APPEND: mpi4py MPI MODE_APPEND.
* mpi4py.MPI.SEEK_SET: mpi4py MPI SEEK_SET.
* mpi4py.MPI.SEEK_CUR: mpi4py MPI SEEK_CUR.
* mpi4py.MPI.SEEK_END: mpi4py MPI SEEK_END.
* mpi4py.MPI.DISPLACEMENT_CURRENT: mpi4py MPI DISPLACEMENT_CURRENT.
* mpi4py.MPI.DISP_CUR: mpi4py MPI DISP_CUR.
* mpi4py.MPI.THREAD_SINGLE: mpi4py MPI THREAD_SINGLE.
* mpi4py.MPI.THREAD_FUNNELED: mpi4py MPI THREAD_FUNNELED.
* mpi4py.MPI.THREAD_SERIALIZED: mpi4py MPI THREAD_SERIALIZED.
* mpi4py.MPI.THREAD_MULTIPLE: mpi4py MPI THREAD_MULTIPLE.
* mpi4py.MPI.VERSION: mpi4py MPI VERSION.
* mpi4py.MPI.SUBVERSION: mpi4py MPI SUBVERSION.
* mpi4py.MPI.MAX_PROCESSOR_NAME: mpi4py MPI MAX_PROCESSOR_NAME.
* mpi4py.MPI.MAX_ERROR_STRING: mpi4py MPI MAX_ERROR_STRING.
* mpi4py.MPI.MAX_PORT_NAME: mpi4py MPI MAX_PORT_NAME.
* mpi4py.MPI.MAX_INFO_KEY: mpi4py MPI MAX_INFO_KEY.
* mpi4py.MPI.MAX_INFO_VAL: mpi4py MPI MAX_INFO_VAL.
* mpi4py.MPI.MAX_OBJECT_NAME: mpi4py MPI MAX_OBJECT_NAME.
* mpi4py.MPI.MAX_DATAREP_STRING: mpi4py MPI MAX_DATAREP_STRING.
* mpi4py.MPI.MAX_LIBRARY_VERSION_STRING: mpi4py MPI MAX_LIBRARY_VERSION_STRING.
* mpi4py.MPI.DATATYPE_NULL: mpi4py MPI DATATYPE_NULL.
* mpi4py.MPI.UB: mpi4py MPI UB.
* mpi4py.MPI.LB: mpi4py MPI LB.
* mpi4py.MPI.PACKED: mpi4py MPI PACKED.
* mpi4py.MPI.BYTE: mpi4py MPI BYTE.
* mpi4py.MPI.AINT: mpi4py MPI AINT.
* mpi4py.MPI.OFFSET: mpi4py MPI OFFSET.
* mpi4py.MPI.COUNT: mpi4py MPI COUNT.
* mpi4py.MPI.CHAR: mpi4py MPI CHAR.
* mpi4py.MPI.WCHAR: mpi4py MPI WCHAR.
* mpi4py.MPI.SIGNED_CHAR: mpi4py MPI SIGNED_CHAR.
* mpi4py.MPI.SHORT: mpi4py MPI SHORT.
* mpi4py.MPI.INT: mpi4py MPI INT.
* mpi4py.MPI.LONG: mpi4py MPI LONG.
* mpi4py.MPI.LONG_LONG: mpi4py MPI LONG_LONG.
* mpi4py.MPI.UNSIGNED_CHAR: mpi4py MPI UNSIGNED_CHAR.
* mpi4py.MPI.UNSIGNED_SHORT: mpi4py MPI UNSIGNED_SHORT.
* mpi4py.MPI.UNSIGNED: mpi4py MPI UNSIGNED.
* mpi4py.MPI.UNSIGNED_LONG: mpi4py MPI UNSIGNED_LONG.
* mpi4py.MPI.UNSIGNED_LONG_LONG: mpi4py MPI UNSIGNED_LONG_LONG.
* mpi4py.MPI.FLOAT: mpi4py MPI FLOAT.
* mpi4py.MPI.DOUBLE: mpi4py MPI DOUBLE.
* mpi4py.MPI.LONG_DOUBLE: mpi4py MPI LONG_DOUBLE.
* mpi4py.MPI.C_BOOL: mpi4py MPI C_BOOL.
* mpi4py.MPI.INT8_T: mpi4py MPI INT8_T.
* mpi4py.MPI.INT16_T: mpi4py MPI INT16_T.
* mpi4py.MPI.INT32_T: mpi4py MPI INT32_T.
* mpi4py.MPI.INT64_T: mpi4py MPI INT64_T.
* mpi4py.MPI.UINT8_T: mpi4py MPI UINT8_T.
* mpi4py.MPI.UINT16_T: mpi4py MPI UINT16_T.
* mpi4py.MPI.UINT32_T: mpi4py MPI UINT32_T.
* mpi4py.MPI.UINT64_T: mpi4py MPI UINT64_T.
* mpi4py.MPI.C_COMPLEX: mpi4py MPI C_COMPLEX.
* mpi4py.MPI.C_FLOAT_COMPLEX: mpi4py MPI C_FLOAT_COMPLEX.
* mpi4py.MPI.C_DOUBLE_COMPLEX: mpi4py MPI C_DOUBLE_COMPLEX.
* mpi4py.MPI.C_LONG_DOUBLE_COMPLEX: mpi4py MPI C_LONG_DOUBLE_COMPLEX.
* mpi4py.MPI.CXX_BOOL: mpi4py MPI CXX_BOOL.
* mpi4py.MPI.CXX_FLOAT_COMPLEX: mpi4py MPI CXX_FLOAT_COMPLEX.
* mpi4py.MPI.CXX_DOUBLE_COMPLEX: mpi4py MPI CXX_DOUBLE_COMPLEX.
* mpi4py.MPI.CXX_LONG_DOUBLE_COMPLEX: mpi4py MPI CXX_LONG_DOUBLE_COMPLEX.
* mpi4py.MPI.SHORT_INT: mpi4py MPI SHORT_INT.
* mpi4py.MPI.INT_INT: mpi4py MPI INT_INT.
* mpi4py.MPI.TWOINT: mpi4py MPI TWOINT.
* mpi4py.MPI.LONG_INT: mpi4py MPI LONG_INT.
* mpi4py.MPI.FLOAT_INT: mpi4py MPI FLOAT_INT.
* mpi4py.MPI.DOUBLE_INT: mpi4py MPI DOUBLE_INT.
* mpi4py.MPI.LONG_DOUBLE_INT: mpi4py MPI LONG_DOUBLE_INT.
* mpi4py.MPI.CHARACTER: mpi4py MPI CHARACTER.
* mpi4py.MPI.LOGICAL: mpi4py MPI LOGICAL.
* mpi4py.MPI.INTEGER: mpi4py MPI INTEGER.
* mpi4py.MPI.REAL: mpi4py MPI REAL.
* mpi4py.MPI.DOUBLE_PRECISION: mpi4py MPI DOUBLE_PRECISION.
* mpi4py.MPI.COMPLEX: mpi4py MPI COMPLEX.
* mpi4py.MPI.DOUBLE_COMPLEX: mpi4py MPI DOUBLE_COMPLEX.
* mpi4py.MPI.LOGICAL1: mpi4py MPI LOGICAL1.
* mpi4py.MPI.LOGICAL2: mpi4py MPI LOGICAL2.
* mpi4py.MPI.LOGICAL4: mpi4py MPI LOGICAL4.
* mpi4py.MPI.LOGICAL8: mpi4py MPI LOGICAL8.
* mpi4py.MPI.INTEGER1: mpi4py MPI INTEGER1.
* mpi4py.MPI.INTEGER2: mpi4py MPI INTEGER2.
* mpi4py.MPI.INTEGER4: mpi4py MPI INTEGER4.
* mpi4py.MPI.INTEGER8: mpi4py MPI INTEGER8.
* mpi4py.MPI.INTEGER16: mpi4py MPI INTEGER16.
* mpi4py.MPI.REAL2: mpi4py MPI REAL2.
* mpi4py.MPI.REAL4: mpi4py MPI REAL4.
* mpi4py.MPI.REAL8: mpi4py MPI REAL8.
* mpi4py.MPI.REAL16: mpi4py MPI REAL16.
* mpi4py.MPI.COMPLEX4: mpi4py MPI COMPLEX4.
* mpi4py.MPI.COMPLEX8: mpi4py MPI COMPLEX8.
* mpi4py.MPI.COMPLEX16: mpi4py MPI COMPLEX16.
* mpi4py.MPI.COMPLEX32: mpi4py MPI COMPLEX32.
* mpi4py.MPI.UNSIGNED_INT: mpi4py MPI UNSIGNED_INT.
* mpi4py.MPI.SIGNED_SHORT: mpi4py MPI SIGNED_SHORT.
* mpi4py.MPI.SIGNED_INT: mpi4py MPI SIGNED_INT.
* mpi4py.MPI.SIGNED_LONG: mpi4py MPI SIGNED_LONG.
* mpi4py.MPI.SIGNED_LONG_LONG: mpi4py MPI SIGNED_LONG_LONG.
* mpi4py.MPI.BOOL: mpi4py MPI BOOL.
* mpi4py.MPI.SINT8_T: mpi4py MPI SINT8_T.
* mpi4py.MPI.SINT16_T: mpi4py MPI SINT16_T.
* mpi4py.MPI.SINT32_T: mpi4py MPI SINT32_T.
* mpi4py.MPI.SINT64_T: mpi4py MPI SINT64_T.
* mpi4py.MPI.F_BOOL: mpi4py MPI F_BOOL.
* mpi4py.MPI.F_INT: mpi4py MPI F_INT.
* mpi4py.MPI.F_FLOAT: mpi4py MPI F_FLOAT.
* mpi4py.MPI.F_DOUBLE: mpi4py MPI F_DOUBLE.
* mpi4py.MPI.F_COMPLEX: mpi4py MPI F_COMPLEX.
* mpi4py.MPI.F_FLOAT_COMPLEX: mpi4py MPI F_FLOAT_COMPLEX.
* mpi4py.MPI.F_DOUBLE_COMPLEX: mpi4py MPI F_DOUBLE_COMPLEX.
* mpi4py.MPI.REQUEST_NULL: mpi4py MPI REQUEST_NULL.
* mpi4py.MPI.MESSAGE_NULL: mpi4py MPI MESSAGE_NULL.
* mpi4py.MPI.MESSAGE_NO_PROC: mpi4py MPI MESSAGE_NO_PROC.
* mpi4py.MPI.OP_NULL: mpi4py MPI OP_NULL.
* mpi4py.MPI.MAX: mpi4py MPI MAX.
* mpi4py.MPI.MIN: mpi4py MPI MIN.
* mpi4py.MPI.SUM: mpi4py MPI SUM.
* mpi4py.MPI.PROD: mpi4py MPI PROD.
* mpi4py.MPI.LAND: mpi4py MPI LAND.
* mpi4py.MPI.BAND: mpi4py MPI BAND.
* mpi4py.MPI.LOR: mpi4py MPI LOR.
* mpi4py.MPI.BOR: mpi4py MPI BOR.
* mpi4py.MPI.LXOR: mpi4py MPI LXOR.
* mpi4py.MPI.BXOR: mpi4py MPI BXOR.
* mpi4py.MPI.MAXLOC: mpi4py MPI MAXLOC.
* mpi4py.MPI.MINLOC: mpi4py MPI MINLOC.
* mpi4py.MPI.REPLACE: mpi4py MPI REPLACE.
* mpi4py.MPI.NO_OP: mpi4py MPI NO_OP.
* mpi4py.MPI.GROUP_NULL: mpi4py MPI GROUP_NULL.
* mpi4py.MPI.GROUP_EMPTY: mpi4py MPI GROUP_EMPTY.
* mpi4py.MPI.INFO_NULL: mpi4py MPI INFO_NULL.
* mpi4py.MPI.INFO_ENV: mpi4py MPI INFO_ENV.
* mpi4py.MPI.ERRHANDLER_NULL: mpi4py MPI ERRHANDLER_NULL.
* mpi4py.MPI.ERRORS_RETURN: mpi4py MPI ERRORS_RETURN.
* mpi4py.MPI.ERRORS_ARE_FATAL: mpi4py MPI ERRORS_ARE_FATAL.
* mpi4py.MPI.COMM_NULL: mpi4py MPI COMM_NULL.
* mpi4py.MPI.COMM_SELF: mpi4py MPI COMM_SELF.
* mpi4py.MPI.COMM_WORLD: mpi4py MPI COMM_WORLD.
* mpi4py.MPI.WIN_NULL: mpi4py MPI WIN_NULL.
* mpi4py.MPI.FILE_NULL: mpi4py MPI FILE_NULL.
* mpi4py.MPI.pickle: mpi4py MPI pickle.

Installation

* Requirements::
* Using pip::
* Using distutils::
* Testing::

Appendix

* MPI-enabled Python interpreter::
* Building MPI from sources::



File: mpi4py.info,  Node: Introduction,  Next: Overview,  Prev: Top,  Up: Top

1 Introduction
**************

Over the last years, high performance computing has become an affordable
resource to many more researchers in the scientific community than ever
before.  The conjunction of quality open source software and commodity
hardware strongly influenced the now widespread popularity of Beowulf(1)
class clusters and cluster of workstations.

Among many parallel computational models, message-passing has proven to
be an effective one.  This paradigm is specially suited for (but not
limited to) distributed memory architectures and is used in today’s most
demanding scientific and engineering application related to modeling,
simulation, design, and signal processing.  However, portable
message-passing parallel programming used to be a nightmare in the past
because of the many incompatible options developers were faced to.
Fortunately, this situation definitely changed after the MPI Forum
released its standard specification.

High performance computing is traditionally associated with software
development using compiled languages.  However, in typical applications
programs, only a small part of the code is time-critical enough to
require the efficiency of compiled languages.  The rest of the code is
generally related to memory management, error handling, input/output,
and user interaction, and those are usually the most error prone and
time-consuming lines of code to write and debug in the whole development
process.  Interpreted high-level languages can be really advantageous
for this kind of tasks.

For implementing general-purpose numerical computations, MATLAB (2) is
the dominant interpreted programming language.  In the open source side,
Octave and Scilab are well known, freely distributed software packages
providing compatibility with the MATLAB language.  In this work, we
present MPI for Python, a new package enabling applications to exploit
multiple processors using standard MPI “look and feel” in Python
scripts.

* Menu:

* What is MPI?::
* What is Python?::
* Related Projects::

   ---------- Footnotes ----------

   (1) https://www.beowulf.org/

   (2) (1) MATLAB is a registered trademark of The MathWorks, Inc.


File: mpi4py.info,  Node: What is MPI?,  Next: What is Python?,  Up: Introduction

1.1 What is MPI?
================

MPI(1), *note [mpi-using]: c. *note [mpi-ref]: d. the `Message Passing
Interface', is a standardized and portable message-passing system
designed to function on a wide variety of parallel computers.  The
standard defines the syntax and semantics of library routines and allows
users to write portable programs in the main scientific programming
languages (Fortran, C, or C++).

Since its release, the MPI specification *note [mpi-std1]: e. *note
[mpi-std2]: f. has become the leading standard for message-passing
libraries for parallel computers.  Implementations are available from
vendors of high-performance computers and from well known open source
projects like MPICH(2) *note [mpi-mpich]: 10. and Open MPI(3) *note
[mpi-openmpi]: 11.

   ---------- Footnotes ----------

   (1) https://www.mpi-forum.org/

   (2) https://www.mpich.org/

   (3) https://www.open-mpi.org/


File: mpi4py.info,  Node: What is Python?,  Next: Related Projects,  Prev: What is MPI?,  Up: Introduction

1.2 What is Python?
===================

Python(1) is a modern, easy to learn, powerful programming language.  It
has efficient high-level data structures and a simple but effective
approach to object-oriented programming with dynamic typing and dynamic
binding.  It supports modules and packages, which encourages program
modularity and code reuse.  Python’s elegant syntax, together with its
interpreted nature, make it an ideal language for scripting and rapid
application development in many areas on most platforms.

The Python interpreter and the extensive standard library are available
in source or binary form without charge for all major platforms, and can
be freely distributed.  It is easily extended with new functions and
data types implemented in C or C++.  Python is also suitable as an
extension language for customizable applications.

Python is an ideal candidate for writing the higher-level parts of
large-scale scientific applications *note [Hinsen97]: 13. and driving
simulations in parallel architectures *note [Beazley97]: 14. like
clusters of PC’s or SMP’s.  Python codes are quickly developed, easily
maintained, and can achieve a high degree of integration with other
libraries written in compiled languages.

   ---------- Footnotes ----------

   (1) https://www.python.org/


File: mpi4py.info,  Node: Related Projects,  Prev: What is Python?,  Up: Introduction

1.3 Related Projects
====================

As this work started and evolved, some ideas were borrowed from well
known MPI and Python related open source projects from the Internet.

   * OOMPI(1)

        + It has no relation with Python, but is an excellent object
          oriented approach to MPI.

        + It is a C++ class library specification layered on top of the
          C bindings that encapsulates MPI into a functional class
          hierarchy.

        + It provides a flexible and intuitive interface by adding some
          abstractions, like `Ports' and `Messages', which enrich and
          simplify the syntax.

   * Pypar(2)

        + Its interface is rather minimal.  There is no support for
          communicators or process topologies.

        + It does not require the Python interpreter to be modified or
          recompiled, but does not permit interactive parallel runs.

        + General (`picklable') Python objects of any type can be
          communicated.  There is good support for numeric arrays,
          practically full MPI bandwidth can be achieved.

   * pyMPI(3)

        + It rebuilds the Python interpreter providing a built-in module
          for message passing.  It does permit interactive parallel
          runs, which are useful for learning and debugging.

        + It provides an interface suitable for basic parallel
          programing.  There is not full support for defining new
          communicators or process topologies.

        + General (picklable) Python objects can be messaged between
          processors.  There is not support for numeric arrays.

   * Scientific Python(4)

        + It provides a collection of Python modules that are useful for
          scientific computing.

        + There is an interface to MPI and BSP (`Bulk Synchronous
          Parallel programming').

        + The interface is simple but incomplete and does not resemble
          the MPI specification.  There is support for numeric arrays.

Additionally, we would like to mention some available tools for
scientific computing and software development with Python.

   + NumPy(5) is a package that provides array manipulation and
     computational capabilities similar to those found in IDL, MATLAB,
     or Octave.  Using NumPy, it is possible to write many efficient
     numerical data processing applications directly in Python without
     using any C, C++ or Fortran code.

   + SciPy(6) is an open source library of scientific tools for Python,
     gathering a variety of high level science and engineering modules
     together as a single package.  It includes modules for graphics and
     plotting, optimization, integration, special functions, signal and
     image processing, genetic algorithms, ODE solvers, and others.

   + Cython(7) is a language that makes writing C extensions for the
     Python language as easy as Python itself.  The Cython language is
     very close to the Python language, but Cython additionally supports
     calling C functions and declaring C types on variables and class
     attributes.  This allows the compiler to generate very efficient C
     code from Cython code.  This makes Cython the ideal language for
     wrapping for external C libraries, and for fast C modules that
     speed up the execution of Python code.

   + SWIG(8) is a software development tool that connects programs
     written in C and C++ with a variety of high-level programming
     languages like Perl, Tcl/Tk, Ruby and Python.  Issuing header files
     to SWIG is the simplest approach to interfacing C/C++ libraries
     from a Python module.

(mpi-std1) MPI Forum.  MPI: A Message Passing Interface Standard.
International Journal of Supercomputer Applications, volume 8, number
3-4, pages 159-416, 1994.

(mpi-std2) MPI Forum.  MPI: A Message Passing Interface Standard.  High
Performance Computing Applications, volume 12, number 1-2, pages 1-299,
1998.

(mpi-using) William Gropp, Ewing Lusk, and Anthony Skjellum.  Using MPI:
portable parallel programming with the message-passing interface.  MIT
Press, 1994.

(mpi-ref) Mark Snir, Steve Otto, Steven Huss-Lederman, David Walker, and
Jack Dongarra.  MPI - The Complete Reference, volume 1, The MPI Core.
MIT Press, 2nd.  edition, 1998.

(mpi-mpich) W. Gropp, E. Lusk, N. Doss, and A. Skjellum.  A
high-performance, portable implementation of the MPI message passing
interface standard.  Parallel Computing, 22(6):789-828, September 1996.

(mpi-openmpi) Edgar Gabriel, Graham E. Fagg, George Bosilca, Thara
Angskun, Jack J. Dongarra, Jeffrey M. Squyres, Vishal Sahay, Prabhanjan
Kambadur, Brian Barrett, Andrew Lumsdaine, Ralph H. Castain, David J.
Daniel, Richard L. Graham, and Timothy S. Woodall.  Open MPI: Goals,
Concept, and Design of a Next Generation MPI Implementation.  In
Proceedings, 11th European PVM/MPI Users’ Group Meeting, Budapest,
Hungary, September 2004.

(Hinsen97) Konrad Hinsen.  The Molecular Modelling Toolkit: a case study
of a large scientific application in Python.  In Proceedings of the 6th
International Python Conference, pages 29-35, San Jose, Ca., October
1997.

(Beazley97) David M. Beazley and Peter S. Lomdahl.  Feeding a
large-scale physics application to Python.  In Proceedings of the 6th
International Python Conference, pages 21-29, San Jose, Ca., October
1997.

   ---------- Footnotes ----------

   (1) 
https://web.archive.org/web/20100614170656/http://www.osl.iu.edu/research/oompi/overview.php

   (2) https://github.com/daleroberts/pypar

   (3) https://sourceforge.net/projects/pympi/

   (4) http://dirac.cnrs-orleans.fr/ScientificPython.html

   (5) https://numpy.org/

   (6) https://www.scipy.org/

   (7) https://cython.org/

   (8) http://www.swig.org/


File: mpi4py.info,  Node: Overview,  Next: Tutorial,  Prev: Introduction,  Up: Top

2 Overview
**********

MPI for Python provides an object oriented approach to message passing
which grounds on the standard MPI-2 C++ bindings.  The interface was
designed with focus in translating MPI syntax and semantics of standard
MPI-2 bindings for C++ to Python.  Any user of the standard C/C++ MPI
bindings should be able to use this module without need of learning a
new interface.

* Menu:

* Communicating Python Objects and Array Data::
* Communicators::
* Point-to-Point Communications::
* Collective Communications::
* Support for GPU-aware MPI::
* Dynamic Process Management::
* One-Sided Communications::
* Parallel Input/Output::
* Environmental Management::


File: mpi4py.info,  Node: Communicating Python Objects and Array Data,  Next: Communicators,  Up: Overview

2.1 Communicating Python Objects and Array Data
===============================================

The Python standard library supports different mechanisms for data
persistence.  Many of them rely on disk storage, but `pickling' and
`marshaling' can also work with memory buffers.

The pickle(1) modules provide user-extensible facilities to serialize
general Python objects using ASCII or binary formats.  The marshal(2)
module provides facilities to serialize built-in Python objects using a
binary format specific to Python, but independent of machine
architecture issues.

`MPI for Python' can communicate any built-in or user-defined Python
object taking advantage of the features provided by the pickle(3)
module.  These facilities will be routinely used to build binary
representations of objects to communicate (at sending processes), and
restoring them back (at receiving processes).

Although simple and general, the serialization approach (i.e.,
`pickling' and `unpickling') previously discussed imposes important
overheads in memory as well as processor usage, especially in the
scenario of objects with large memory footprints being communicated.
Pickling general Python objects, ranging from primitive or container
built-in types to user-defined classes, necessarily requires computer
resources.  Processing is also needed for dispatching the appropriate
serialization method (that depends on the type of the object) and doing
the actual packing.  Additional memory is always needed, and if its
total amount is not known `a priori', many reallocations can occur.
Indeed, in the case of large numeric arrays, this is certainly
unacceptable and precludes communication of objects occupying half or
more of the available memory resources.

`MPI for Python' supports direct communication of any object exporting
the single-segment buffer interface.  This interface is a standard
Python mechanism provided by some types (e.g., strings and numeric
arrays), allowing access in the C side to a contiguous memory buffer
(i.e., address and length) containing the relevant data.  This feature,
in conjunction with the capability of constructing user-defined MPI
datatypes describing complicated memory layouts, enables the
implementation of many algorithms involving multidimensional numeric
arrays (e.g., image processing, fast Fourier transforms, finite
difference schemes on structured Cartesian grids) directly in Python,
with negligible overhead, and almost as fast as compiled Fortran, C, or
C++ codes.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/pickle.html#module-pickle

   (2) https://docs.python.org/3/library/marshal.html#module-marshal

   (3) https://docs.python.org/3/library/pickle.html#module-pickle


File: mpi4py.info,  Node: Communicators,  Next: Point-to-Point Communications,  Prev: Communicating Python Objects and Array Data,  Up: Overview

2.2 Communicators
=================

In `MPI for Python', *note Comm: 1a. is the base class of communicators.
The *note Intracomm: 1b. and *note Intercomm: 1c. classes are sublcasses
of the *note Comm: 1a. class.  The *note Comm.Is_inter: 1d. method (and
*note Comm.Is_intra: 1e, provided for convenience but not part of the
MPI specification) is defined for communicator objects and can be used
to determine the particular communicator class.

The two predefined intracommunicator instances are available: *note
COMM_SELF: 1f. and *note COMM_WORLD: 20.  From them, new communicators
can be created as needed.

The number of processes in a communicator and the calling process rank
can be respectively obtained with methods *note Comm.Get_size: 21. and
*note Comm.Get_rank: 22.  The associated process group can be retrieved
from a communicator by calling the *note Comm.Get_group: 23. method,
which returns an instance of the *note Group: 24. class.  Set operations
with *note Group: 24. objects like like *note Group.Union: 25, *note
Group.Intersection: 26. and *note Group.Difference: 27. are fully
supported, as well as the creation of new communicators from these
groups using *note Comm.Create: 28. and *note Comm.Create_group: 29.

New communicator instances can be obtained with the *note Comm.Clone:
2a, *note Comm.Dup: 2b. and *note Comm.Split: 2c. methods, as well
methods *note Intracomm.Create_intercomm: 2d. and *note Intercomm.Merge:
2e.

Virtual topologies (*note Cartcomm: 2f, *note Graphcomm: 30. and *note
Distgraphcomm: 31. classes, which are specializations of the *note
Intracomm: 1b. class) are fully supported.  New instances can be
obtained from intracommunicator instances with factory methods *note
Intracomm.Create_cart: 32. and *note Intracomm.Create_graph: 33.


File: mpi4py.info,  Node: Point-to-Point Communications,  Next: Collective Communications,  Prev: Communicators,  Up: Overview

2.3 Point-to-Point Communications
=================================

Point to point communication is a fundamental capability of message
passing systems.  This mechanism enables the transmission of data
between a pair of processes, one side sending, the other receiving.

MPI provides a set of `send' and `receive' functions allowing the
communication of `typed' data with an associated `tag'.  The type
information enables the conversion of data representation from one
architecture to another in the case of heterogeneous computing
environments; additionally, it allows the representation of
non-contiguous data layouts and user-defined datatypes, thus avoiding
the overhead of (otherwise unavoidable) packing/unpacking operations.
The tag information allows selectivity of messages at the receiving end.

* Menu:

* Blocking Communications::
* Nonblocking Communications::
* Persistent Communications::


File: mpi4py.info,  Node: Blocking Communications,  Next: Nonblocking Communications,  Up: Point-to-Point Communications

2.3.1 Blocking Communications
-----------------------------

MPI provides basic send and receive functions that are `blocking'.
These functions block the caller until the data buffers involved in the
communication can be safely reused by the application program.

In `MPI for Python', the *note Comm.Send: 36, *note Comm.Recv: 37. and
*note Comm.Sendrecv: 38. methods of communicator objects provide support
for blocking point-to-point communications within *note Intracomm: 1b.
and *note Intercomm: 1c. instances.  These methods can communicate
memory buffers.  The variants *note Comm.send: 39, *note Comm.recv: 3a.
and *note Comm.sendrecv: 3b. can communicate general Python objects.


File: mpi4py.info,  Node: Nonblocking Communications,  Next: Persistent Communications,  Prev: Blocking Communications,  Up: Point-to-Point Communications

2.3.2 Nonblocking Communications
--------------------------------

On many systems, performance can be significantly increased by
overlapping communication and computation.  This is particularly true on
systems where communication can be executed autonomously by an
intelligent, dedicated communication controller.

MPI provides `nonblocking' send and receive functions.  They allow the
possible overlap of communication and computation.  Non-blocking
communication always come in two parts: posting functions, which begin
the requested operation; and test-for-completion functions, which allow
to discover whether the requested operation has completed.

In `MPI for Python', the *note Comm.Isend: 3d. and *note Comm.Irecv: 3e.
methods initiate send and receive operations, respectively.  These
methods return a *note Request: 3f. instance, uniquely identifying the
started operation.  Its completion can be managed using the *note
Request.Test: 40, *note Request.Wait: 41. and *note Request.Cancel: 42.
methods.  The management of *note Request: 3f. objects and associated
memory buffers involved in communication requires a careful, rather
low-level coordination.  Users must ensure that objects exposing their
memory buffers are not accessed at the Python level while they are
involved in nonblocking message-passing operations.


File: mpi4py.info,  Node: Persistent Communications,  Prev: Nonblocking Communications,  Up: Point-to-Point Communications

2.3.3 Persistent Communications
-------------------------------

Often a communication with the same argument list is repeatedly executed
within an inner loop.  In such cases, communication can be further
optimized by using persistent communication, a particular case of
nonblocking communication allowing the reduction of the overhead between
processes and communication controllers.  Furthermore , this kind of
optimization can also alleviate the extra call overheads associated to
interpreted, dynamic languages like Python.

In `MPI for Python', the *note Comm.Send_init: 44. and *note
Comm.Recv_init: 45. methods create persistent requests for a send and
receive operation, respectively.  These methods return an instance of
the *note Prequest: 46. class, a subclass of the *note Request: 3f.
class.  The actual communication can be effectively started using the
*note Prequest.Start: 47. method, and its completion can be managed as
previously described.


File: mpi4py.info,  Node: Collective Communications,  Next: Support for GPU-aware MPI,  Prev: Point-to-Point Communications,  Up: Overview

2.4 Collective Communications
=============================

Collective communications allow the transmittal of data between multiple
processes of a group simultaneously.  The syntax and semantics of
collective functions is consistent with point-to-point communication.
Collective functions communicate `typed' data, but messages are not
paired with an associated `tag'; selectivity of messages is implied in
the calling order.  Additionally, collective functions come in blocking
versions only.

The more commonly used collective communication operations are the
following.

   * Barrier synchronization across all group members.

   * Global communication functions

        + Broadcast data from one member to all members of a group.

        + Gather data from all members to one member of a group.

        + Scatter data from one member to all members of a group.

   * Global reduction operations such as sum, maximum, minimum, etc.

In `MPI for Python', the *note Comm.Bcast: 49, *note Comm.Scatter: 4a,
*note Comm.Gather: 4b, *note Comm.Allgather: 4c, *note Comm.Alltoall:
4d. methods provide support for collective communications of memory
buffers.  The lower-case variants *note Comm.bcast: 4e, *note
Comm.scatter: 4f, *note Comm.gather: 50, *note Comm.allgather: 51. and
*note Comm.alltoall: 52. can communicate general Python objects.  The
vector variants (which can communicate different amounts of data to each
process) *note Comm.Scatterv: 53, *note Comm.Gatherv: 54, *note
Comm.Allgatherv: 55, *note Comm.Alltoallv: 56. and *note Comm.Alltoallw:
57. are also supported, they can only communicate objects exposing
memory buffers.

Global reducion operations on memory buffers are accessible through the
*note Comm.Reduce: 58, *note Comm.Reduce_scatter: 59, *note
Comm.Allreduce: 5a, *note Intracomm.Scan: 5b. and *note
Intracomm.Exscan: 5c. methods.  The lower-case variants *note
Comm.reduce: 5d, *note Comm.allreduce: 5e, *note Intracomm.scan: 5f. and
*note Intracomm.exscan: 60. can communicate general Python objects;
however, the actual required reduction computations are performed
sequentially at some process.  All the predefined (i.e., *note SUM: 61,
*note PROD: 62, *note MAX: 63, etc.)  reduction operations can be
applied.


File: mpi4py.info,  Node: Support for GPU-aware MPI,  Next: Dynamic Process Management,  Prev: Collective Communications,  Up: Overview

2.5 Support for GPU-aware MPI
=============================

Several MPI implementations, including Open MPI and MVAPICH, support
passing GPU pointers to MPI calls to avoid explict data movement between
the host and the device.  On the Python side, GPU arrays have been
implemented by many libraries that need GPU computation, such as CuPy,
Numba, PyTorch, and PyArrow.  In order to increase library
interoperability, two kinds of zero-copy data exchange protocols are
defined and agreed upon: DLPack(1) and CUDA Array Interface(2).  For
example, a CuPy array can be passed to a Numba CUDA-jit kernel.

`MPI for Python' provides an experimental support for GPU-aware MPI.
This feature requires:

  1. mpi4py is built against a GPU-aware MPI library.

  2. The Python GPU arrays are compliant with either of the protocols.

See the *note Tutorial: 65. section for further information.  We note
that

   * Whether or not a MPI call can work for GPU arrays depends on the
     underlying MPI implementation, not on mpi4py.

   * This support is currently experimental and subject to change in the
     future.

   ---------- Footnotes ----------

   (1) 
https://data-apis.org/array-api/latest/design_topics/data_interchange.html

   (2) 
https://numba.readthedocs.io/en/stable/cuda/cuda_array_interface.html


File: mpi4py.info,  Node: Dynamic Process Management,  Next: One-Sided Communications,  Prev: Support for GPU-aware MPI,  Up: Overview

2.6 Dynamic Process Management
==============================

In the context of the MPI-1 specification, a parallel application is
static; that is, no processes can be added to or deleted from a running
application after it has been started.  Fortunately, this limitation was
addressed in MPI-2.  The new specification added a process management
model providing a basic interface between an application and external
resources and process managers.

This MPI-2 extension can be really useful, especially for sequential
applications built on top of parallel modules, or parallel applications
with a client/server model.  The MPI-2 process model provides a
mechanism to create new processes and establish communication between
them and the existing MPI application.  It also provides mechanisms to
establish communication between two existing MPI applications, even when
one did not `start' the other.

In `MPI for Python', new independent process groups can be created by
calling the *note Intracomm.Spawn: 67. method within an
intracommunicator.  This call returns a new intercommunicator (i.e., an
*note Intercomm: 1c. instance) at the parent process group.  The child
process group can retrieve the matching intercommunicator by calling the
*note Comm.Get_parent: 68. class method.  At each side, the new
intercommunicator can be used to perform point to point and collective
communications between the parent and child groups of processes.

Alternatively, disjoint groups of processes can establish communication
using a client/server approach.  Any server application must first call
the *note Open_port: 69. function to open a `port' and the *note
Publish_name: 6a. function to publish a provided `service', and next
call the *note Intracomm.Accept: 6b. method.  Any client applications
can first find a published `service' by calling the *note Lookup_name:
6c. function, which returns the `port' where a server can be contacted;
and next call the *note Intracomm.Connect: 6d. method.  Both *note
Intracomm.Accept: 6b. and *note Intracomm.Connect: 6d. methods return an
*note Intercomm: 1c. instance.  When connection between client/server
processes is no longer needed, all of them must cooperatively call the
*note Comm.Disconnect: 6e. method.  Additionally, server applications
should release resources by calling the *note Unpublish_name: 6f. and
*note Close_port: 70. functions.


File: mpi4py.info,  Node: One-Sided Communications,  Next: Parallel Input/Output,  Prev: Dynamic Process Management,  Up: Overview

2.7 One-Sided Communications
============================

One-sided communications (also called `Remote Memory Access', `RMA')
supplements the traditional two-sided, send/receive based MPI
communication model with a one-sided, put/get based interface.
One-sided communication that can take advantage of the capabilities of
highly specialized network hardware.  Additionally, this extension
lowers latency and software overhead in applications written using a
shared-memory-like paradigm.

The MPI specification revolves around the use of objects called
`windows'; they intuitively specify regions of a process’s memory that
have been made available for remote read and write operations.  The
published memory blocks can be accessed through three functions for put
(remote send), get (remote write), and accumulate (remote update or
reduction) data items.  A much larger number of functions support
different synchronization styles; the semantics of these synchronization
operations are fairly complex.

In `MPI for Python', one-sided operations are available by using
instances of the *note Win: 72. class.  New window objects are created
by calling the *note Win.Create: 73. method at all processes within a
communicator and specifying a memory buffer .  When a window instance is
no longer needed, the *note Win.Free: 74. method should be called.

The three one-sided MPI operations for remote write, read and reduction
are available through calling the methods *note Win.Put: 75, *note
Win.Get: 76, and *note Win.Accumulate: 77. respectively within a *note
Win: 72. instance.  These methods need an integer rank identifying the
target process and an integer offset relative the base address of the
remote memory block being accessed.

The one-sided operations read, write, and reduction are implicitly
nonblocking, and must be synchronized by using two primary modes.
Active target synchronization requires the origin process to call the
*note Win.Start: 78. and *note Win.Complete: 79. methods at the origin
process, and target process cooperates by calling the *note Win.Post:
7a. and *note Win.Wait: 7b. methods.  There is also a collective variant
provided by the *note Win.Fence: 7c. method.  Passive target
synchronization is more lenient, only the origin process calls the *note
Win.Lock: 7d. and *note Win.Unlock: 7e. methods.  Locks are used to
protect remote accesses to the locked remote window and to protect local
load/store accesses to a locked local window.


File: mpi4py.info,  Node: Parallel Input/Output,  Next: Environmental Management,  Prev: One-Sided Communications,  Up: Overview

2.8 Parallel Input/Output
=========================

The POSIX standard provides a model of a widely portable file system.
However, the optimization needed for parallel input/output cannot be
achieved with this generic interface.  In order to ensure efficiency and
scalability, the underlying parallel input/output system must provide a
high-level interface supporting partitioning of file data among
processes and a collective interface supporting complete transfers of
global data structures between process memories and files.
Additionally, further efficiencies can be gained via support for
asynchronous input/output, strided accesses to data, and control over
physical file layout on storage devices.  This scenario motivated the
inclusion in the MPI-2 standard of a custom interface in order to
support more elaborated parallel input/output operations.

The MPI specification for parallel input/output revolves around the use
objects called `files'.  As defined by MPI, files are not just
contiguous byte streams.  Instead, they are regarded as ordered
collections of `typed' data items.  MPI supports sequential or random
access to any integral set of these items.  Furthermore, files are
opened collectively by a group of processes.

The common patterns for accessing a shared file (broadcast, scatter,
gather, reduction) is expressed by using user-defined datatypes.
Compared to the communication patterns of point-to-point and collective
communications, this approach has the advantage of added flexibility and
expressiveness.  Data access operations (read and write) are defined for
different kinds of positioning (using explicit offsets, individual file
pointers, and shared file pointers), coordination (non-collective and
collective), and synchronism (blocking, nonblocking, and split
collective with begin/end phases).

In `MPI for Python', all MPI input/output operations are performed
through instances of the *note File: 80. class.  File handles are
obtained by calling the *note File.Open: 81. method at all processes
within a communicator and providing a file name and the intended access
mode.  After use, they must be closed by calling the *note File.Close:
82. method.  Files even can be deleted by calling method *note
File.Delete: 83.

After creation, files are typically associated with a per-process
`view'.  The view defines the current set of data visible and accessible
from an open file as an ordered set of elementary datatypes.  This data
layout can be set and queried with the *note File.Set_view: 84. and
*note File.Get_view: 85. methods respectively.

Actual input/output operations are achieved by many methods combining
read and write calls with different behavior regarding positioning,
coordination, and synchronism.  Summing up, `MPI for Python' provides
the thirty (30) methods defined in MPI-2 for reading from or writing to
files using explicit offsets or file pointers (individual or shared), in
blocking or nonblocking and collective or noncollective versions.


File: mpi4py.info,  Node: Environmental Management,  Prev: Parallel Input/Output,  Up: Overview

2.9 Environmental Management
============================

* Menu:

* Initialization and Exit::
* Implementation Information::
* Timers::
* Error Handling::


File: mpi4py.info,  Node: Initialization and Exit,  Next: Implementation Information,  Up: Environmental Management

2.9.1 Initialization and Exit
-----------------------------

Module functions *note Init: 88. or *note Init_thread: 89. and *note
Finalize: 8a. provide MPI initialization and finalization respectively.
Module functions *note Is_initialized: 8b. and *note Is_finalized: 8c.
provide the respective tests for initialization and finalization.

     Note: ‘MPI_Init()’ or ‘MPI_Init_thread()’ is actually called when
     you import the *note MPI: 2. module from the *note mpi4py: 0.
     package, but only if MPI is not already initialized.  In such case,
     calling *note Init: 88. or *note Init_thread: 89. from Python is
     expected to generate an MPI error, and in turn an exception will be
     raised.

     Note: ‘MPI_Finalize()’ is registered (by using Python C/API
     function Py_AtExit()(1)) for being automatically called when Python
     processes exit, but only if *note mpi4py: 0. actually initialized
     MPI. Therefore, there is no need to call *note Finalize: 8a. from
     Python to ensure MPI finalization.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/c-api/sys.html#c.Py_AtExit


File: mpi4py.info,  Node: Implementation Information,  Next: Timers,  Prev: Initialization and Exit,  Up: Environmental Management

2.9.2 Implementation Information
--------------------------------

   * The MPI version number can be retrieved from module function *note
     Get_version: 8e.  It returns a two-integer tuple ‘(version,
     subversion)’.

   * The *note Get_processor_name: 8f. function can be used to access
     the processor name.

   * The values of predefined attributes attached to the world
     communicator can be obtained by calling the *note Comm.Get_attr:
     90. method within the *note COMM_WORLD: 20. instance.


File: mpi4py.info,  Node: Timers,  Next: Error Handling,  Prev: Implementation Information,  Up: Environmental Management

2.9.3 Timers
------------

MPI timer functionalities are available through the *note Wtime: 92. and
*note Wtick: 93. functions.


File: mpi4py.info,  Node: Error Handling,  Prev: Timers,  Up: Environmental Management

2.9.4 Error Handling
--------------------

In order facilitate handle sharing with other Python modules interfacing
MPI-based parallel libraries, the predefined MPI error handlers *note
ERRORS_RETURN: 95. and *note ERRORS_ARE_FATAL: 96. can be assigned to
and retrieved from communicators using methods *note
Comm.Set_errhandler: 97. and *note Comm.Get_errhandler: 98, and
similarly for windows and files.

When the predefined error handler *note ERRORS_RETURN: 95. is set,
errors returned from MPI calls within Python code will raise an instance
of the exception class *note Exception: 99, which is a subclass of the
standard Python exception RuntimeError(1).

     Note: After import, mpi4py overrides the default MPI rules
     governing inheritance of error handlers.  The *note ERRORS_RETURN:
     95. error handler is set in the predefined *note COMM_SELF: 1f. and
     *note COMM_WORLD: 20. communicators, as well as any new *note Comm:
     1a, *note Win: 72, or *note File: 80. instance created through
     mpi4py.  If you ever pass such handles to C/C++/Fortran library
     code, it is recommended to set the *note ERRORS_ARE_FATAL: 96.
     error handler on them to ensure MPI errors do not pass silently.

     Warning: Importing with ‘from mpi4py.MPI import *’ will cause a
     name clashing with the standard Python Exception(2) base class.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/exceptions.html#RuntimeError

   (2) https://docs.python.org/3/library/exceptions.html#Exception


File: mpi4py.info,  Node: Tutorial,  Next: mpi4py,  Prev: Overview,  Up: Top

3 Tutorial
**********

     Warning: Under construction.  Contributions very welcome!

`MPI for Python' supports convenient, `pickle'-based communication of
generic Python object as well as fast, near C-speed, direct array data
communication of buffer-provider objects (e.g., NumPy arrays).

   * Communication of generic Python objects

     You have to use methods with `all-lowercase' names, like *note
     Comm.send: 39, *note Comm.recv: 3a, *note Comm.bcast: 4e, *note
     Comm.scatter: 4f, *note Comm.gather: 50. .  An object to be sent is
     passed as a parameter to the communication call, and the received
     object is simply the return value.

     The *note Comm.isend: 9c. and *note Comm.irecv: 9d. methods return
     *note Request: 3f. instances; completion of these methods can be
     managed using the *note Request.test: 9e. and *note Request.wait:
     9f. methods.

     The *note Comm.recv: 3a. and *note Comm.irecv: 9d. methods may be
     passed a buffer object that can be repeatedly used to receive
     messages avoiding internal memory allocation.  This buffer must be
     sufficiently large to accommodate the transmitted messages; hence,
     any buffer passed to *note Comm.recv: 3a. or *note Comm.irecv: 9d.
     must be at least as long as the `pickled' data transmitted to the
     receiver.

     Collective calls like *note Comm.scatter: 4f, *note Comm.gather:
     50, *note Comm.allgather: 51, *note Comm.alltoall: 52. expect a
     single value or a sequence of *note Comm.size: a0. elements at the
     root or all process.  They return a single value, a list of *note
     Comm.size: a0. elements, or None(1).

          Note: `MPI for Python' uses the `highest' protocol version(2)
          available in the Python runtime (see the HIGHEST_PROTOCOL(3)
          constant in the pickle(4) module).  The default protocol can
          be changed at import time by setting the *note
          MPI4PY_PICKLE_PROTOCOL: a1. environment variable, or at
          runtime by assigning a different value to the *note PROTOCOL:
          a2. attribute of the *note pickle: a3. object within the *note
          MPI: 2. module.

   * Communication of buffer-like objects

     You have to use method names starting with an `upper-case' letter,
     like *note Comm.Send: 36, *note Comm.Recv: 37, *note Comm.Bcast:
     49, *note Comm.Scatter: 4a, *note Comm.Gather: 4b.

     In general, buffer arguments to these calls must be explicitly
     specified by using a 2/3-list/tuple like ‘[data, MPI.DOUBLE]’, or
     ‘[data, count, MPI.DOUBLE]’ (the former one uses the byte-size of
     ‘data’ and the extent of the MPI datatype to define ‘count’).

     For vector collectives communication operations like *note
     Comm.Scatterv: 53. and *note Comm.Gatherv: 54, buffer arguments are
     specified as ‘[data, count, displ, datatype]’, where ‘count’ and
     ‘displ’ are sequences of integral values.

     Automatic MPI datatype discovery for NumPy/GPU arrays and PEP-3118
     buffers is supported, but limited to basic C types (all
     C/C99-native signed/unsigned integral types and single/double
     precision real/complex floating types) and availability of matching
     datatypes in the underlying MPI implementation.  In this case, the
     buffer-provider object can be passed directly as a buffer argument,
     the count and MPI datatype will be inferred.

     If mpi4py is built against a GPU-aware MPI implementation, GPU
     arrays can be passed to upper-case methods as long as they have
     either the ‘__dlpack__’ and ‘__dlpack_device__’ methods or the
     ‘__cuda_array_interface__’ attribute that are compliant with the
     respective standard specifications.  Moreover, only C-contiguous or
     Fortran-contiguous GPU arrays are supported.  It is important to
     note that GPU buffers must be fully ready before any MPI routines
     operate on them to avoid race conditions.  This can be ensured by
     using the synchronization API of your array library.  mpi4py does
     not have access to any GPU-specific functionality and thus cannot
     perform this operation automatically for users.

* Menu:

* Running Python scripts with MPI::
* Point-to-Point Communication::
* Collective Communication::
* MPI-IO::
* Dynamic Process Management: Dynamic Process Management<2>.
* CUDA-aware MPI + Python GPU arrays::
* One-Sided Communications: One-Sided Communications<2>.
* Wrapping with SWIG::
* Wrapping with F2Py::

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None

   (2) https://docs.python.org/3/library/pickle.html#pickle-protocols

   (3) 
https://docs.python.org/3/library/pickle.html#pickle.HIGHEST_PROTOCOL

   (4) https://docs.python.org/3/library/pickle.html#module-pickle


File: mpi4py.info,  Node: Running Python scripts with MPI,  Next: Point-to-Point Communication,  Up: Tutorial

3.1 Running Python scripts with MPI
===================================

Most MPI programs can be run with the command ‘mpiexec’.  In practice,
running Python programs looks like:

     $ mpiexec -n 4 python script.py

to run the program with 4 processors.


File: mpi4py.info,  Node: Point-to-Point Communication,  Next: Collective Communication,  Prev: Running Python scripts with MPI,  Up: Tutorial

3.2 Point-to-Point Communication
================================

   * Python objects (pickle(1) under the hood):

          from mpi4py import MPI

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()

          if rank == 0:
              data = {'a': 7, 'b': 3.14}
              comm.send(data, dest=1, tag=11)
          elif rank == 1:
              data = comm.recv(source=0, tag=11)

   * Python objects with non-blocking communication:

          from mpi4py import MPI

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()

          if rank == 0:
              data = {'a': 7, 'b': 3.14}
              req = comm.isend(data, dest=1, tag=11)
              req.wait()
          elif rank == 1:
              req = comm.irecv(source=0, tag=11)
              data = req.wait()

   * NumPy arrays (the fast way!):

          from mpi4py import MPI
          import numpy

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()

          # passing MPI datatypes explicitly
          if rank == 0:
              data = numpy.arange(1000, dtype='i')
              comm.Send([data, MPI.INT], dest=1, tag=77)
          elif rank == 1:
              data = numpy.empty(1000, dtype='i')
              comm.Recv([data, MPI.INT], source=0, tag=77)

          # automatic MPI datatype discovery
          if rank == 0:
              data = numpy.arange(100, dtype=numpy.float64)
              comm.Send(data, dest=1, tag=13)
          elif rank == 1:
              data = numpy.empty(100, dtype=numpy.float64)
              comm.Recv(data, source=0, tag=13)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/pickle.html#module-pickle


File: mpi4py.info,  Node: Collective Communication,  Next: MPI-IO,  Prev: Point-to-Point Communication,  Up: Tutorial

3.3 Collective Communication
============================

   * Broadcasting a Python dictionary:

          from mpi4py import MPI

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()

          if rank == 0:
              data = {'key1' : [7, 2.72, 2+3j],
                      'key2' : ( 'abc', 'xyz')}
          else:
              data = None
          data = comm.bcast(data, root=0)

   * Scattering Python objects:

          from mpi4py import MPI

          comm = MPI.COMM_WORLD
          size = comm.Get_size()
          rank = comm.Get_rank()

          if rank == 0:
              data = [(i+1)**2 for i in range(size)]
          else:
              data = None
          data = comm.scatter(data, root=0)
          assert data == (rank+1)**2

   * Gathering Python objects:

          from mpi4py import MPI

          comm = MPI.COMM_WORLD
          size = comm.Get_size()
          rank = comm.Get_rank()

          data = (rank+1)**2
          data = comm.gather(data, root=0)
          if rank == 0:
              for i in range(size):
                  assert data[i] == (i+1)**2
          else:
              assert data is None

   * Broadcasting a NumPy array:

          from mpi4py import MPI
          import numpy as np

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()

          if rank == 0:
              data = np.arange(100, dtype='i')
          else:
              data = np.empty(100, dtype='i')
          comm.Bcast(data, root=0)
          for i in range(100):
              assert data[i] == i

   * Scattering NumPy arrays:

          from mpi4py import MPI
          import numpy as np

          comm = MPI.COMM_WORLD
          size = comm.Get_size()
          rank = comm.Get_rank()

          sendbuf = None
          if rank == 0:
              sendbuf = np.empty([size, 100], dtype='i')
              sendbuf.T[:,:] = range(size)
          recvbuf = np.empty(100, dtype='i')
          comm.Scatter(sendbuf, recvbuf, root=0)
          assert np.allclose(recvbuf, rank)

   * Gathering NumPy arrays:

          from mpi4py import MPI
          import numpy as np

          comm = MPI.COMM_WORLD
          size = comm.Get_size()
          rank = comm.Get_rank()

          sendbuf = np.zeros(100, dtype='i') + rank
          recvbuf = None
          if rank == 0:
              recvbuf = np.empty([size, 100], dtype='i')
          comm.Gather(sendbuf, recvbuf, root=0)
          if rank == 0:
              for i in range(size):
                  assert np.allclose(recvbuf[i,:], i)

   * Parallel matrix-vector product:

          from mpi4py import MPI
          import numpy

          def matvec(comm, A, x):
              m = A.shape[0] # local rows
              p = comm.Get_size()
              xg = numpy.zeros(m*p, dtype='d')
              comm.Allgather([x,  MPI.DOUBLE],
                             [xg, MPI.DOUBLE])
              y = numpy.dot(A, xg)
              return y


File: mpi4py.info,  Node: MPI-IO,  Next: Dynamic Process Management<2>,  Prev: Collective Communication,  Up: Tutorial

3.4 MPI-IO
==========

   * Collective I/O with NumPy arrays:

          from mpi4py import MPI
          import numpy as np

          amode = MPI.MODE_WRONLY|MPI.MODE_CREATE
          comm = MPI.COMM_WORLD
          fh = MPI.File.Open(comm, "./datafile.contig", amode)

          buffer = np.empty(10, dtype=np.int)
          buffer[:] = comm.Get_rank()

          offset = comm.Get_rank()*buffer.nbytes
          fh.Write_at_all(offset, buffer)

          fh.Close()

   * Non-contiguous Collective I/O with NumPy arrays and datatypes:

          from mpi4py import MPI
          import numpy as np

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()
          size = comm.Get_size()

          amode = MPI.MODE_WRONLY|MPI.MODE_CREATE
          fh = MPI.File.Open(comm, "./datafile.noncontig", amode)

          item_count = 10

          buffer = np.empty(item_count, dtype='i')
          buffer[:] = rank

          filetype = MPI.INT.Create_vector(item_count, 1, size)
          filetype.Commit()

          displacement = MPI.INT.Get_size()*rank
          fh.Set_view(displacement, filetype=filetype)

          fh.Write_all(buffer)
          filetype.Free()
          fh.Close()


File: mpi4py.info,  Node: Dynamic Process Management<2>,  Next: CUDA-aware MPI + Python GPU arrays,  Prev: MPI-IO,  Up: Tutorial

3.5 Dynamic Process Management
==============================

   * Compute Pi - Master (or parent, or client) side:

          #!/usr/bin/env python
          from mpi4py import MPI
          import numpy
          import sys

          comm = MPI.COMM_SELF.Spawn(sys.executable,
                                     args=['cpi.py'],
                                     maxprocs=5)

          N = numpy.array(100, 'i')
          comm.Bcast([N, MPI.INT], root=MPI.ROOT)
          PI = numpy.array(0.0, 'd')
          comm.Reduce(None, [PI, MPI.DOUBLE],
                      op=MPI.SUM, root=MPI.ROOT)
          print(PI)

          comm.Disconnect()

   * Compute Pi - Worker (or child, or server) side:

          #!/usr/bin/env python
          from mpi4py import MPI
          import numpy

          comm = MPI.Comm.Get_parent()
          size = comm.Get_size()
          rank = comm.Get_rank()

          N = numpy.array(0, dtype='i')
          comm.Bcast([N, MPI.INT], root=0)
          h = 1.0 / N; s = 0.0
          for i in range(rank, N, size):
              x = h * (i + 0.5)
              s += 4.0 / (1.0 + x**2)
          PI = numpy.array(s * h, dtype='d')
          comm.Reduce([PI, MPI.DOUBLE], None,
                      op=MPI.SUM, root=0)

          comm.Disconnect()


File: mpi4py.info,  Node: CUDA-aware MPI + Python GPU arrays,  Next: One-Sided Communications<2>,  Prev: Dynamic Process Management<2>,  Up: Tutorial

3.6 CUDA-aware MPI + Python GPU arrays
======================================

   * Reduce-to-all CuPy arrays:

          from mpi4py import MPI
          import cupy as cp

          comm = MPI.COMM_WORLD
          size = comm.Get_size()
          rank = comm.Get_rank()

          sendbuf = cp.arange(10, dtype='i')
          recvbuf = cp.empty_like(sendbuf)
          assert hasattr(sendbuf, '__cuda_array_interface__')
          assert hasattr(recvbuf, '__cuda_array_interface__')
          cp.cuda.get_current_stream().synchronize()
          comm.Allreduce(sendbuf, recvbuf)

          assert cp.allclose(recvbuf, sendbuf*size)


File: mpi4py.info,  Node: One-Sided Communications<2>,  Next: Wrapping with SWIG,  Prev: CUDA-aware MPI + Python GPU arrays,  Up: Tutorial

3.7 One-Sided Communications
============================

   * Read from (write to) the enitre RMA window:

          import numpy as np
          from mpi4py import MPI
          from mpi4py.util import dtlib

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()

          datatype = MPI.FLOAT
          np_dtype = dtlib.to_numpy_dtype(datatype)
          itemsize = datatype.Get_size()

          N = 10
          win_size = N * itemsize if rank == 0 else 0
          win = MPI.Win.Allocate(win_size, comm=comm)

          buf = np.empty(N, dtype=np_dtype)
          if rank == 0:
              buf.fill(42)
              win.Lock(rank=0)
              win.Put(buf, target_rank=0)
              win.Unlock(rank=0)
              comm.Barrier()
          else:
              comm.Barrier()
              win.Lock(rank=0)
              win.Get(buf, target_rank=0)
              win.Unlock(rank=0)
              assert np.all(buf == 42)

   * Accessing a part of the RMA window using ‘target’ argument.  Target
     is defined as ‘[offset, length, datatype]’:

          import numpy as np
          from mpi4py import MPI
          from mpi4py.util import dtlib

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()

          datatype = MPI.FLOAT
          np_dtype = dtlib.to_numpy_dtype(datatype)
          itemsize = datatype.Get_size()

          N = comm.Get_size() + 1
          win_size = N * itemsize if rank == 0 else 0
          win = MPI.Win.Allocate(
              size=win_size,
              disp_unit=itemsize,
              comm=comm,
          )
          if rank == 0:
              mem = np.frombuffer(win, dtype=np_dtype)
              mem[:] = np.arange(len(mem), dtype=np_dtype)
          comm.Barrier()

          buf = np.zeros(3, dtype=np_dtype)
          target = (rank, 2, datatype)
          win.Lock(rank=0)
          win.Get(buf, target_rank=0, target=target)
          win.Unlock(rank=0)
          assert np.all(buf == [rank, rank+1, 0])


File: mpi4py.info,  Node: Wrapping with SWIG,  Next: Wrapping with F2Py,  Prev: One-Sided Communications<2>,  Up: Tutorial

3.8 Wrapping with SWIG
======================

   * C source:

          /* file: helloworld.c */
          void sayhello(MPI_Comm comm)
          {
            int size, rank;
            MPI_Comm_size(comm, &size);
            MPI_Comm_rank(comm, &rank);
            printf("Hello, World! "
                   "I am process %d of %d.\n",
                   rank, size);
          }

   * SWIG interface file:

          // file: helloworld.i
          %module helloworld
          %{
          #include <mpi.h>
          #include "helloworld.c"
          }%

          %include mpi4py/mpi4py.i
          %mpi4py_typemap(Comm, MPI_Comm);
          void sayhello(MPI_Comm comm);

   * Try it in the Python prompt:

          >>> from mpi4py import MPI
          >>> import helloworld
          >>> helloworld.sayhello(MPI.COMM_WORLD)
          Hello, World! I am process 0 of 1.


File: mpi4py.info,  Node: Wrapping with F2Py,  Prev: Wrapping with SWIG,  Up: Tutorial

3.9 Wrapping with F2Py
======================

   * Fortran 90 source:

          ! file: helloworld.f90
          subroutine sayhello(comm)
            use mpi
            implicit none
            integer :: comm, rank, size, ierr
            call MPI_Comm_size(comm, size, ierr)
            call MPI_Comm_rank(comm, rank, ierr)
            print *, 'Hello, World! I am process ',rank,' of ',size,'.'
          end subroutine sayhello

   * Compiling example using f2py

          $ f2py -c --f90exec=mpif90 helloworld.f90 -m helloworld

   * Try it in the Python prompt:

          >>> from mpi4py import MPI
          >>> import helloworld
          >>> fcomm = MPI.COMM_WORLD.py2f()
          >>> helloworld.sayhello(fcomm)
          Hello, World! I am process 0 of 1.


File: mpi4py.info,  Node: mpi4py,  Next: mpi4py MPI,  Prev: Tutorial,  Up: Top

4 mpi4py
********

This is the `MPI for Python' package.

The `Message Passing Interface' (MPI) is a standardized and portable
message-passing system designed to function on a wide variety of
parallel computers.  The MPI standard defines the syntax and semantics
of library routines and allows users to write portable programs in the
main scientific programming languages (Fortran, C, or C++).  Since its
release, the MPI specification has become the leading standard for
message-passing libraries for parallel computers.

`MPI for Python' provides MPI bindings for the Python programming
language, allowing any Python program to exploit multiple processors.
This package build on the MPI specification and provides an object
oriented interface which closely follows MPI-2 C++ bindings.

* Menu:

* Runtime configuration options::
* Environment variables::
* Miscellaneous functions::


File: mpi4py.info,  Node: Runtime configuration options,  Next: Environment variables,  Up: mpi4py

4.1 Runtime configuration options
=================================

 -- Data: mpi4py.rc

     This object has attributes exposing runtime configuration options
     that become effective at import time of the *note MPI: 2. module.

Attributes Summary
..................

*note initialize: b1.Automatic MPI initialization at import
                   
                   
*note threads: b2. Request initialization with thread support
                   
                   
*note thread_level: b3.Level of thread support to request
                   
                   
*note finalize: b4.Automatic MPI finalization at exit
                   
                   
*note fast_reduce: b5.Use tree-based reductions for objects
                   
                   
*note recv_mprobe: b6.Use matched probes to receive objects
                   
                   
*note errors: b7.  Error handling policy
                   

Attributes Documentation
........................

 -- Attribute: mpi4py.rc.initialize

     Automatic MPI initialization at import.


     Type: bool(1)


     Default: True(2)

     See also
     ........

     *note MPI4PY_RC_INITIALIZE: b8.

 -- Attribute: mpi4py.rc.threads

     Request initialization with thread support.


     Type: bool(3)


     Default: True(4)

     See also
     ........

     *note MPI4PY_RC_THREADS: b9.

 -- Attribute: mpi4py.rc.thread_level

     Level of thread support to request.


     Type: str(5)


     Default: ‘"multiple"’


     Choices: ‘"multiple"’, ‘"serialized"’, ‘"funneled"’, ‘"single"’

     See also
     ........

     *note MPI4PY_RC_THREAD_LEVEL: ba.

 -- Attribute: mpi4py.rc.finalize

     Automatic MPI finalization at exit.


     Type: None(6) or bool(7)


     Default: None(8)

     See also
     ........

     *note MPI4PY_RC_FINALIZE: bb.

 -- Attribute: mpi4py.rc.fast_reduce

     Use tree-based reductions for objects.


     Type: bool(9)


     Default: True(10)

     See also
     ........

     *note MPI4PY_RC_FAST_REDUCE: bc.

 -- Attribute: mpi4py.rc.recv_mprobe

     Use matched probes to receive objects.


     Type: bool(11)


     Default: True(12)

     See also
     ........

     *note MPI4PY_RC_RECV_MPROBE: bd.

 -- Attribute: mpi4py.rc.errors

     Error handling policy.


     Type: str(13)


     Default: ‘"exception"’


     Choices: ‘"exception"’, ‘"default"’, ‘"fatal"’

     See also
     ........

     *note MPI4PY_RC_ERRORS: be.

Example
.......

MPI for Python features automatic initialization and finalization of the
MPI execution environment.  By using the *note mpi4py.rc: b0. object,
MPI initialization and finalization can be handled programatically:

     import mpi4py
     mpi4py.rc.initialize = False  # do not initialize MPI automatically
     mpi4py.rc.finalize = False    # do not finalize MPI automatically

     from mpi4py import MPI # import the 'MPI' module

     MPI.Init()      # manual initialization of the MPI environment
     ...             # your finest code here ...
     MPI.Finalize()  # manual finalization of the MPI environment

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#bool

   (2) https://docs.python.org/3/library/constants.html#True

   (3) https://docs.python.org/3/library/functions.html#bool

   (4) https://docs.python.org/3/library/constants.html#True

   (5) https://docs.python.org/3/library/stdtypes.html#str

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/functions.html#bool

   (8) https://docs.python.org/3/library/constants.html#None

   (9) https://docs.python.org/3/library/functions.html#bool

   (10) https://docs.python.org/3/library/constants.html#True

   (11) https://docs.python.org/3/library/functions.html#bool

   (12) https://docs.python.org/3/library/constants.html#True

   (13) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: Environment variables,  Next: Miscellaneous functions,  Prev: Runtime configuration options,  Up: mpi4py

4.2 Environment variables
=========================

The following environment variables override the corresponding
attributes of the *note mpi4py.rc: b0. and *note MPI.pickle: a3. objects
at import time of the *note MPI: 2. module.

 -- Environment Variable: MPI4PY_RC_INITIALIZE


     Default: True(1)

     Whether to automatically initialize MPI at import time of the *note
     mpi4py.MPI: 2. module.

     See also
     ........

     *note mpi4py.rc.initialize: b1.

     New in version 3.1.0.

 -- Environment Variable: MPI4PY_RC_FINALIZE


     Default: None(2)


     Choices: None(3), True(4), False(5)

     Whether to automatically finalize MPI at exit time of the Python
     process.

     See also
     ........

     *note mpi4py.rc.finalize: b4.

     New in version 3.1.0.

 -- Environment Variable: MPI4PY_RC_THREADS


     Default: True(6)

     Whether to initialize MPI with thread support.

     See also
     ........

     *note mpi4py.rc.threads: b2.

     New in version 3.1.0.

 -- Environment Variable: MPI4PY_RC_THREAD_LEVEL


     Default: ‘"multiple"’


     Choices: ‘"single"’, ‘"funneled"’, ‘"serialized"’, ‘"multiple"’

     The level of required thread support.

     See also
     ........

     *note mpi4py.rc.thread_level: b3.

     New in version 3.1.0.

 -- Environment Variable: MPI4PY_RC_FAST_REDUCE


     Default: True(7)

     Whether to use tree-based reductions for objects.

     See also
     ........

     *note mpi4py.rc.fast_reduce: b5.

     New in version 3.1.0.

 -- Environment Variable: MPI4PY_RC_RECV_MPROBE


     Default: True(8)

     Whether to use matched probes to receive objects.

     See also
     ........

     *note mpi4py.rc.recv_mprobe: b6.

 -- Environment Variable: MPI4PY_RC_ERRORS


     Default: ‘"exception"’


     Choices: ‘"exception"’, ‘"default"’, ‘"fatal"’

     Controls default MPI error handling policy.

     See also
     ........

     *note mpi4py.rc.errors: b7.

     New in version 3.1.0.

 -- Environment Variable: MPI4PY_PICKLE_PROTOCOL


     Default: pickle.HIGHEST_PROTOCOL(9)

     Controls the default pickle protocol to use when communicating
     Python objects.

     See also
     ........

     *note PROTOCOL: a2. attribute of the *note MPI.pickle: a3. object
     within the *note MPI: 2. module.

     New in version 3.1.0.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#True

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/library/constants.html#True

   (5) https://docs.python.org/3/library/constants.html#False

   (6) https://docs.python.org/3/library/constants.html#True

   (7) https://docs.python.org/3/library/constants.html#True

   (8) https://docs.python.org/3/library/constants.html#True

   (9) 
https://docs.python.org/3/library/pickle.html#pickle.HIGHEST_PROTOCOL


File: mpi4py.info,  Node: Miscellaneous functions,  Prev: Environment variables,  Up: mpi4py

4.3 Miscellaneous functions
===========================

 -- Function: mpi4py.profile (name, *, path=None, logfile=None)

     Support for the MPI profiling interface.


     Parameters:

        * ‘name’ (str(1)) – Name of the profiler library to load.

        * ‘path’ (‘Sequence[str]’, `optional') – Additional paths to
          search for the profiler.

        * ‘logfile’ (str(2), `optional') – Filename prefix for dumping
          profiler output.

 -- Function: mpi4py.get_config ()

     Return a dictionary with information about MPI.

 -- Function: mpi4py.get_include ()

     Return the directory in the package that contains header files.

     Extension modules that need to compile against mpi4py should use
     this function to locate the appropriate include directory.  Using
     Python distutils (or perhaps NumPy distutils):

          import mpi4py
          Extension('extension_name', ...
                    include_dirs=[..., mpi4py.get_include()])

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI,  Next: mpi4py futures,  Prev: mpi4py,  Up: Top

5 mpi4py.MPI
************

* Menu:

* Classes::
* Functions::
* Attributes::


File: mpi4py.info,  Node: Classes,  Next: Functions,  Up: mpi4py MPI

5.1 Classes
===========

Ancillary
.........

*note Datatype: c7.([datatype])Datatype object
               
               
*note Status: c8.([status])Status object
               
               
*note Request: 3f.([request])Request handle
               
               
*note Prequest: 46.([request])Persistent request handle
               
               
*note Grequest: c9.([request])Generalized request handle
               
               
*note Op: ca.([op])Operation object
               
               
*note Group: 24.([group])Group of processes
               
               
*note Info: cb.([info])Info object
               

Communication
.............

*note Comm: 1a.([comm])Communicator
               
               
*note Intracomm: 1b.([comm])Intracommunicator
               
               
*note Topocomm: cc.([comm])Topology intracommunicator
               
               
*note Cartcomm: 2f.([comm])Cartesian topology intracommunicator
               
               
*note Graphcomm: 30.([comm])General graph topology intracommunicator
               
               
*note Distgraphcomm: 31.([comm])Distributed graph topology intracommunicator
               
               
*note Intercomm: 1c.([comm])Intercommunicator
               
               
*note Message: cd.([message])Matched message handle
               

One-sided operations
....................

*note Win: 72.([win])Window handle
               

Input/Output
............

*note File: 80.([file])File handle
               

Error handling
..............

*note Errhandler: ce.([errhandler])Error handler
               
               
*note Exception: 99.([ierr])Exception class
               

Auxiliary
.........

*note Pickle: cf.([dumps,Pickle/unpickle Python objects
loads,         
protocol])

*note memory: d0.(buf)Memory buffer
               


File: mpi4py.info,  Node: Functions,  Next: Attributes,  Prev: Classes,  Up: mpi4py MPI

5.2 Functions
=============

Version inquiry
...............

*note Get_version: 8e.()Obtain the version number of the MPI standard supported by the implementation as a tuple
               ‘(version, subversion)’
               
               
*note Get_library_version: d2.()Obtain the version string of the MPI library
               

Initialization and finalization
...............................

*note Init: 88.()Initialize the MPI execution environment
               
               
*note Init_thread: 89.([required])Initialize the MPI execution environment
               
               
*note Finalize: 8a.()Terminate the MPI execution environment
               
               
*note Is_initialized: 8b.()Indicates whether *note Init: 88. has been called
               
               
*note Is_finalized: 8c.()Indicates whether *note Finalize: 8a. has completed
               
               
*note Query_thread: d3.()Return the level of thread support provided by the MPI library
               
               
*note Is_thread_main: d4.()Indicate whether this thread called *note Init: 88. or *note Init_thread: 89.
               

Memory allocation
.................

*note Alloc_mem: d5.(size[,Allocate memory for message passing and RMA
info])         

*note Free_mem: d6.(mem)Free memory allocated with *note Alloc_mem(): d5.
               

Address manipulation
....................

*note Get_address: d7.(location)Get the address of a location in memory
               
               
*note Aint_add: d8.(base,Return the sum of base address and displacement
disp)          

*note Aint_diff: d9.(addr1,Return the difference between absolute addresses
addr2)         

Timer
.....

*note Wtick: 93.()Return the resolution of *note Wtime: 92.
               
               
*note Wtime: 92.()Return an elapsed time on the calling processor
               

Error handling
..............

*note Get_error_class: da.(errorcode)Convert an `error code' into an `error class'
               
               
*note Get_error_string: db.(errorcode)Return the `error string' for a given `error class' or `error code'
               
               
*note Add_error_class: dc.()Add an `error class' to the known error classes
               
               
*note Add_error_code: dd.(errorclass)Add an `error code' to an `error class'
               
               
*note Add_error_string: de.(errorcode,Associate an `error string' with an `error class' or `errorcode'
string)        

Dynamic process management
..........................

*note Open_port: 69.([info])Return an address that can be used to establish connections between groups of MPI processes
               
               
*note Close_port: 70.(port_name)Close a port
               
               
*note Publish_name: 6a.(service_name,Publish a service name
port_name[,    
info])

*note Unpublish_name: 6f.(service_name,Unpublish a service name
port_name[,    
info])

*note Lookup_name: 6c.(service_name[,Lookup a port name given a service name
info])         

Miscellanea
...........

*note Attach_buffer: df.(buf)Attach a user-provided buffer for sending in buffered mode
               
               
*note Detach_buffer: e0.()Remove an existing attached buffer
               
               
*note Compute_dims: e1.(nnodes,Return a balanced distribution of processes per coordinate direction
dims)          

*note Get_processor_name: 8f.()Obtain the name of the calling processor
               
               
*note Register_datarep: e2.(datarep,Register user-defined data representations
read_fn,       
write_fn, …)

*note Pcontrol: e3.(level)Control profiling
               

Utilities
.........

*note get_vendor: e4.()Infomation about the underlying MPI implementation
               


File: mpi4py.info,  Node: Attributes,  Prev: Functions,  Up: mpi4py MPI

5.3 Attributes
==============

*note UNDEFINED: e6.int(1) ‘UNDEFINED’
               
               
*note ANY_SOURCE: e7.int(2) ‘ANY_SOURCE’
               
               
*note ANY_TAG: e8.int(3) ‘ANY_TAG’
               
               
*note PROC_NULL: e9.int(4) ‘PROC_NULL’
               
               
*note ROOT: ea.int(5) ‘ROOT’
               
               
*note BOTTOM: eb.‘Bottom’ ‘BOTTOM’
               
               
*note IN_PLACE: ec.‘InPlace’ ‘IN_PLACE’
               
               
*note KEYVAL_INVALID: ed.int(6) ‘KEYVAL_INVALID’
               
               
*note TAG_UB: ee.int(7) ‘TAG_UB’
               
               
*note HOST: ef.int(8) ‘HOST’
               
               
*note IO: f0.  int(9) ‘IO’
               
               
*note WTIME_IS_GLOBAL: f1.int(10) ‘WTIME_IS_GLOBAL’
               
               
*note UNIVERSE_SIZE: f2.int(11) ‘UNIVERSE_SIZE’
               
               
*note APPNUM: f3.int(12) ‘APPNUM’
               
               
*note LASTUSEDCODE: f4.int(13) ‘LASTUSEDCODE’
               
               
*note WIN_BASE: f5.int(14) ‘WIN_BASE’
               
               
*note WIN_SIZE: f6.int(15) ‘WIN_SIZE’
               
               
*note WIN_DISP_UNIT: f7.int(16) ‘WIN_DISP_UNIT’
               
               
*note WIN_CREATE_FLAVOR: f8.int(17) ‘WIN_CREATE_FLAVOR’
               
               
*note WIN_FLAVOR: f9.int(18) ‘WIN_FLAVOR’
               
               
*note WIN_MODEL: fa.int(19) ‘WIN_MODEL’
               
               
*note SUCCESS: fb.int(20) ‘SUCCESS’
               
               
*note ERR_LASTCODE: fc.int(21) ‘ERR_LASTCODE’
               
               
*note ERR_COMM: fd.int(22) ‘ERR_COMM’
               
               
*note ERR_GROUP: fe.int(23) ‘ERR_GROUP’
               
               
*note ERR_TYPE: ff.int(24) ‘ERR_TYPE’
               
               
*note ERR_REQUEST: 100.int(25) ‘ERR_REQUEST’
               
               
*note ERR_OP: 101.int(26) ‘ERR_OP’
               
               
*note ERR_BUFFER: 102.int(27) ‘ERR_BUFFER’
               
               
*note ERR_COUNT: 103.int(28) ‘ERR_COUNT’
               
               
*note ERR_TAG: 104.int(29) ‘ERR_TAG’
               
               
*note ERR_RANK: 105.int(30) ‘ERR_RANK’
               
               
*note ERR_ROOT: 106.int(31) ‘ERR_ROOT’
               
               
*note ERR_TRUNCATE: 107.int(32) ‘ERR_TRUNCATE’
               
               
*note ERR_IN_STATUS: 108.int(33) ‘ERR_IN_STATUS’
               
               
*note ERR_PENDING: 109.int(34) ‘ERR_PENDING’
               
               
*note ERR_TOPOLOGY: 10a.int(35) ‘ERR_TOPOLOGY’
               
               
*note ERR_DIMS: 10b.int(36) ‘ERR_DIMS’
               
               
*note ERR_ARG: 10c.int(37) ‘ERR_ARG’
               
               
*note ERR_OTHER: 10d.int(38) ‘ERR_OTHER’
               
               
*note ERR_UNKNOWN: 10e.int(39) ‘ERR_UNKNOWN’
               
               
*note ERR_INTERN: 10f.int(40) ‘ERR_INTERN’
               
               
*note ERR_INFO: 110.int(41) ‘ERR_INFO’
               
               
*note ERR_FILE: 111.int(42) ‘ERR_FILE’
               
               
*note ERR_WIN: 112.int(43) ‘ERR_WIN’
               
               
*note ERR_KEYVAL: 113.int(44) ‘ERR_KEYVAL’
               
               
*note ERR_INFO_KEY: 114.int(45) ‘ERR_INFO_KEY’
               
               
*note ERR_INFO_VALUE: 115.int(46) ‘ERR_INFO_VALUE’
               
               
*note ERR_INFO_NOKEY: 116.int(47) ‘ERR_INFO_NOKEY’
               
               
*note ERR_ACCESS: 117.int(48) ‘ERR_ACCESS’
               
               
*note ERR_AMODE: 118.int(49) ‘ERR_AMODE’
               
               
*note ERR_BAD_FILE: 119.int(50) ‘ERR_BAD_FILE’
               
               
*note ERR_FILE_EXISTS: 11a.int(51) ‘ERR_FILE_EXISTS’
               
               
*note ERR_FILE_IN_USE: 11b.int(52) ‘ERR_FILE_IN_USE’
               
               
*note ERR_NO_SPACE: 11c.int(53) ‘ERR_NO_SPACE’
               
               
*note ERR_NO_SUCH_FILE: 11d.int(54) ‘ERR_NO_SUCH_FILE’
               
               
*note ERR_IO: 11e.int(55) ‘ERR_IO’
               
               
*note ERR_READ_ONLY: 11f.int(56) ‘ERR_READ_ONLY’
               
               
*note ERR_CONVERSION: 120.int(57) ‘ERR_CONVERSION’
               
               
*note ERR_DUP_DATAREP: 121.int(58) ‘ERR_DUP_DATAREP’
               
               
*note ERR_UNSUPPORTED_DATAREP: 122.int(59) ‘ERR_UNSUPPORTED_DATAREP’
               
               
*note ERR_UNSUPPORTED_OPERATION: 123.int(60) ‘ERR_UNSUPPORTED_OPERATION’
               
               
*note ERR_NAME: 124.int(61) ‘ERR_NAME’
               
               
*note ERR_NO_MEM: 125.int(62) ‘ERR_NO_MEM’
               
               
*note ERR_NOT_SAME: 126.int(63) ‘ERR_NOT_SAME’
               
               
*note ERR_PORT: 127.int(64) ‘ERR_PORT’
               
               
*note ERR_QUOTA: 128.int(65) ‘ERR_QUOTA’
               
               
*note ERR_SERVICE: 129.int(66) ‘ERR_SERVICE’
               
               
*note ERR_SPAWN: 12a.int(67) ‘ERR_SPAWN’
               
               
*note ERR_BASE: 12b.int(68) ‘ERR_BASE’
               
               
*note ERR_SIZE: 12c.int(69) ‘ERR_SIZE’
               
               
*note ERR_DISP: 12d.int(70) ‘ERR_DISP’
               
               
*note ERR_ASSERT: 12e.int(71) ‘ERR_ASSERT’
               
               
*note ERR_LOCKTYPE: 12f.int(72) ‘ERR_LOCKTYPE’
               
               
*note ERR_RMA_CONFLICT: 130.int(73) ‘ERR_RMA_CONFLICT’
               
               
*note ERR_RMA_SYNC: 131.int(74) ‘ERR_RMA_SYNC’
               
               
*note ERR_RMA_RANGE: 132.int(75) ‘ERR_RMA_RANGE’
               
               
*note ERR_RMA_ATTACH: 133.int(76) ‘ERR_RMA_ATTACH’
               
               
*note ERR_RMA_SHARED: 134.int(77) ‘ERR_RMA_SHARED’
               
               
*note ERR_RMA_FLAVOR: 135.int(78) ‘ERR_RMA_FLAVOR’
               
               
*note ORDER_C: 136.int(79) ‘ORDER_C’
               
               
*note ORDER_F: 137.int(80) ‘ORDER_F’
               
               
*note ORDER_FORTRAN: 138.int(81) ‘ORDER_FORTRAN’
               
               
*note TYPECLASS_INTEGER: 139.int(82) ‘TYPECLASS_INTEGER’
               
               
*note TYPECLASS_REAL: 13a.int(83) ‘TYPECLASS_REAL’
               
               
*note TYPECLASS_COMPLEX: 13b.int(84) ‘TYPECLASS_COMPLEX’
               
               
*note DISTRIBUTE_NONE: 13c.int(85) ‘DISTRIBUTE_NONE’
               
               
*note DISTRIBUTE_BLOCK: 13d.int(86) ‘DISTRIBUTE_BLOCK’
               
               
*note DISTRIBUTE_CYCLIC: 13e.int(87) ‘DISTRIBUTE_CYCLIC’
               
               
*note DISTRIBUTE_DFLT_DARG: 13f.int(88) ‘DISTRIBUTE_DFLT_DARG’
               
               
*note COMBINER_NAMED: 140.int(89) ‘COMBINER_NAMED’
               
               
*note COMBINER_DUP: 141.int(90) ‘COMBINER_DUP’
               
               
*note COMBINER_CONTIGUOUS: 142.int(91) ‘COMBINER_CONTIGUOUS’
               
               
*note COMBINER_VECTOR: 143.int(92) ‘COMBINER_VECTOR’
               
               
*note COMBINER_HVECTOR: 144.int(93) ‘COMBINER_HVECTOR’
               
               
*note COMBINER_INDEXED: 145.int(94) ‘COMBINER_INDEXED’
               
               
*note COMBINER_HINDEXED: 146.int(95) ‘COMBINER_HINDEXED’
               
               
*note COMBINER_INDEXED_BLOCK: 147.int(96) ‘COMBINER_INDEXED_BLOCK’
               
               
*note COMBINER_HINDEXED_BLOCK: 148.int(97) ‘COMBINER_HINDEXED_BLOCK’
               
               
*note COMBINER_STRUCT: 149.int(98) ‘COMBINER_STRUCT’
               
               
*note COMBINER_SUBARRAY: 14a.int(99) ‘COMBINER_SUBARRAY’
               
               
*note COMBINER_DARRAY: 14b.int(100) ‘COMBINER_DARRAY’
               
               
*note COMBINER_RESIZED: 14c.int(101) ‘COMBINER_RESIZED’
               
               
*note COMBINER_F90_REAL: 14d.int(102) ‘COMBINER_F90_REAL’
               
               
*note COMBINER_F90_COMPLEX: 14e.int(103) ‘COMBINER_F90_COMPLEX’
               
               
*note COMBINER_F90_INTEGER: 14f.int(104) ‘COMBINER_F90_INTEGER’
               
               
*note IDENT: 150.int(105) ‘IDENT’
               
               
*note CONGRUENT: 151.int(106) ‘CONGRUENT’
               
               
*note SIMILAR: 152.int(107) ‘SIMILAR’
               
               
*note UNEQUAL: 153.int(108) ‘UNEQUAL’
               
               
*note CART: 154.int(109) ‘CART’
               
               
*note GRAPH: 155.int(110) ‘GRAPH’
               
               
*note DIST_GRAPH: 156.int(111) ‘DIST_GRAPH’
               
               
*note UNWEIGHTED: 157.int(112) ‘UNWEIGHTED’
               
               
*note WEIGHTS_EMPTY: 158.int(113) ‘WEIGHTS_EMPTY’
               
               
*note COMM_TYPE_SHARED: 159.int(114) ‘COMM_TYPE_SHARED’
               
               
*note BSEND_OVERHEAD: 15a.int(115) ‘BSEND_OVERHEAD’
               
               
*note WIN_FLAVOR_CREATE: 15b.int(116) ‘WIN_FLAVOR_CREATE’
               
               
*note WIN_FLAVOR_ALLOCATE: 15c.int(117) ‘WIN_FLAVOR_ALLOCATE’
               
               
*note WIN_FLAVOR_DYNAMIC: 15d.int(118) ‘WIN_FLAVOR_DYNAMIC’
               
               
*note WIN_FLAVOR_SHARED: 15e.int(119) ‘WIN_FLAVOR_SHARED’
               
               
*note WIN_SEPARATE: 15f.int(120) ‘WIN_SEPARATE’
               
               
*note WIN_UNIFIED: 160.int(121) ‘WIN_UNIFIED’
               
               
*note MODE_NOCHECK: 161.int(122) ‘MODE_NOCHECK’
               
               
*note MODE_NOSTORE: 162.int(123) ‘MODE_NOSTORE’
               
               
*note MODE_NOPUT: 163.int(124) ‘MODE_NOPUT’
               
               
*note MODE_NOPRECEDE: 164.int(125) ‘MODE_NOPRECEDE’
               
               
*note MODE_NOSUCCEED: 165.int(126) ‘MODE_NOSUCCEED’
               
               
*note LOCK_EXCLUSIVE: 166.int(127) ‘LOCK_EXCLUSIVE’
               
               
*note LOCK_SHARED: 167.int(128) ‘LOCK_SHARED’
               
               
*note MODE_RDONLY: 168.int(129) ‘MODE_RDONLY’
               
               
*note MODE_WRONLY: 169.int(130) ‘MODE_WRONLY’
               
               
*note MODE_RDWR: 16a.int(131) ‘MODE_RDWR’
               
               
*note MODE_CREATE: 16b.int(132) ‘MODE_CREATE’
               
               
*note MODE_EXCL: 16c.int(133) ‘MODE_EXCL’
               
               
*note MODE_DELETE_ON_CLOSE: 16d.int(134) ‘MODE_DELETE_ON_CLOSE’
               
               
*note MODE_UNIQUE_OPEN: 16e.int(135) ‘MODE_UNIQUE_OPEN’
               
               
*note MODE_SEQUENTIAL: 16f.int(136) ‘MODE_SEQUENTIAL’
               
               
*note MODE_APPEND: 170.int(137) ‘MODE_APPEND’
               
               
*note SEEK_SET: 171.int(138) ‘SEEK_SET’
               
               
*note SEEK_CUR: 172.int(139) ‘SEEK_CUR’
               
               
*note SEEK_END: 173.int(140) ‘SEEK_END’
               
               
*note DISPLACEMENT_CURRENT: 174.int(141) ‘DISPLACEMENT_CURRENT’
               
               
*note DISP_CUR: 175.int(142) ‘DISP_CUR’
               
               
*note THREAD_SINGLE: 176.int(143) ‘THREAD_SINGLE’
               
               
*note THREAD_FUNNELED: 177.int(144) ‘THREAD_FUNNELED’
               
               
*note THREAD_SERIALIZED: 178.int(145) ‘THREAD_SERIALIZED’
               
               
*note THREAD_MULTIPLE: 179.int(146) ‘THREAD_MULTIPLE’
               
               
*note VERSION: 17a.int(147) ‘VERSION’
               
               
*note SUBVERSION: 17b.int(148) ‘SUBVERSION’
               
               
*note MAX_PROCESSOR_NAME: 17c.int(149) ‘MAX_PROCESSOR_NAME’
               
               
*note MAX_ERROR_STRING: 17d.int(150) ‘MAX_ERROR_STRING’
               
               
*note MAX_PORT_NAME: 17e.int(151) ‘MAX_PORT_NAME’
               
               
*note MAX_INFO_KEY: 17f.int(152) ‘MAX_INFO_KEY’
               
               
*note MAX_INFO_VAL: 180.int(153) ‘MAX_INFO_VAL’
               
               
*note MAX_OBJECT_NAME: 181.int(154) ‘MAX_OBJECT_NAME’
               
               
*note MAX_DATAREP_STRING: 182.int(155) ‘MAX_DATAREP_STRING’
               
               
*note MAX_LIBRARY_VERSION_STRING: 183.int(156) ‘MAX_LIBRARY_VERSION_STRING’
               
               
*note DATATYPE_NULL: 184.*note Datatype: c7. ‘DATATYPE_NULL’
               
               
*note UB: 185. *note Datatype: c7. ‘UB’
               
               
*note LB: 186. *note Datatype: c7. ‘LB’
               
               
*note PACKED: 187.*note Datatype: c7. ‘PACKED’
               
               
*note BYTE: 188.*note Datatype: c7. ‘BYTE’
               
               
*note AINT: 189.*note Datatype: c7. ‘AINT’
               
               
*note OFFSET: 18a.*note Datatype: c7. ‘OFFSET’
               
               
*note COUNT: 18b.*note Datatype: c7. ‘COUNT’
               
               
*note CHAR: 18c.*note Datatype: c7. ‘CHAR’
               
               
*note WCHAR: 18d.*note Datatype: c7. ‘WCHAR’
               
               
*note SIGNED_CHAR: 18e.*note Datatype: c7. ‘SIGNED_CHAR’
               
               
*note SHORT: 18f.*note Datatype: c7. ‘SHORT’
               
               
*note INT: 190.*note Datatype: c7. ‘INT’
               
               
*note LONG: 191.*note Datatype: c7. ‘LONG’
               
               
*note LONG_LONG: 192.*note Datatype: c7. ‘LONG_LONG’
               
               
*note UNSIGNED_CHAR: 193.*note Datatype: c7. ‘UNSIGNED_CHAR’
               
               
*note UNSIGNED_SHORT: 194.*note Datatype: c7. ‘UNSIGNED_SHORT’
               
               
*note UNSIGNED: 195.*note Datatype: c7. ‘UNSIGNED’
               
               
*note UNSIGNED_LONG: 196.*note Datatype: c7. ‘UNSIGNED_LONG’
               
               
*note UNSIGNED_LONG_LONG: 197.*note Datatype: c7. ‘UNSIGNED_LONG_LONG’
               
               
*note FLOAT: 198.*note Datatype: c7. ‘FLOAT’
               
               
*note DOUBLE: 199.*note Datatype: c7. ‘DOUBLE’
               
               
*note LONG_DOUBLE: 19a.*note Datatype: c7. ‘LONG_DOUBLE’
               
               
*note C_BOOL: 19b.*note Datatype: c7. ‘C_BOOL’
               
               
*note INT8_T: 19c.*note Datatype: c7. ‘INT8_T’
               
               
*note INT16_T: 19d.*note Datatype: c7. ‘INT16_T’
               
               
*note INT32_T: 19e.*note Datatype: c7. ‘INT32_T’
               
               
*note INT64_T: 19f.*note Datatype: c7. ‘INT64_T’
               
               
*note UINT8_T: 1a0.*note Datatype: c7. ‘UINT8_T’
               
               
*note UINT16_T: 1a1.*note Datatype: c7. ‘UINT16_T’
               
               
*note UINT32_T: 1a2.*note Datatype: c7. ‘UINT32_T’
               
               
*note UINT64_T: 1a3.*note Datatype: c7. ‘UINT64_T’
               
               
*note C_COMPLEX: 1a4.*note Datatype: c7. ‘C_COMPLEX’
               
               
*note C_FLOAT_COMPLEX: 1a5.*note Datatype: c7. ‘C_FLOAT_COMPLEX’
               
               
*note C_DOUBLE_COMPLEX: 1a6.*note Datatype: c7. ‘C_DOUBLE_COMPLEX’
               
               
*note C_LONG_DOUBLE_COMPLEX: 1a7.*note Datatype: c7. ‘C_LONG_DOUBLE_COMPLEX’
               
               
*note CXX_BOOL: 1a8.*note Datatype: c7. ‘CXX_BOOL’
               
               
*note CXX_FLOAT_COMPLEX: 1a9.*note Datatype: c7. ‘CXX_FLOAT_COMPLEX’
               
               
*note CXX_DOUBLE_COMPLEX: 1aa.*note Datatype: c7. ‘CXX_DOUBLE_COMPLEX’
               
               
*note CXX_LONG_DOUBLE_COMPLEX: 1ab.*note Datatype: c7. ‘CXX_LONG_DOUBLE_COMPLEX’
               
               
*note SHORT_INT: 1ac.*note Datatype: c7. ‘SHORT_INT’
               
               
*note INT_INT: 1ad.*note Datatype: c7. ‘INT_INT’
               
               
*note TWOINT: 1ae.*note Datatype: c7. ‘TWOINT’
               
               
*note LONG_INT: 1af.*note Datatype: c7. ‘LONG_INT’
               
               
*note FLOAT_INT: 1b0.*note Datatype: c7. ‘FLOAT_INT’
               
               
*note DOUBLE_INT: 1b1.*note Datatype: c7. ‘DOUBLE_INT’
               
               
*note LONG_DOUBLE_INT: 1b2.*note Datatype: c7. ‘LONG_DOUBLE_INT’
               
               
*note CHARACTER: 1b3.*note Datatype: c7. ‘CHARACTER’
               
               
*note LOGICAL: 1b4.*note Datatype: c7. ‘LOGICAL’
               
               
*note INTEGER: 1b5.*note Datatype: c7. ‘INTEGER’
               
               
*note REAL: 1b6.*note Datatype: c7. ‘REAL’
               
               
*note DOUBLE_PRECISION: 1b7.*note Datatype: c7. ‘DOUBLE_PRECISION’
               
               
*note COMPLEX: 1b8.*note Datatype: c7. ‘COMPLEX’
               
               
*note DOUBLE_COMPLEX: 1b9.*note Datatype: c7. ‘DOUBLE_COMPLEX’
               
               
*note LOGICAL1: 1ba.*note Datatype: c7. ‘LOGICAL1’
               
               
*note LOGICAL2: 1bb.*note Datatype: c7. ‘LOGICAL2’
               
               
*note LOGICAL4: 1bc.*note Datatype: c7. ‘LOGICAL4’
               
               
*note LOGICAL8: 1bd.*note Datatype: c7. ‘LOGICAL8’
               
               
*note INTEGER1: 1be.*note Datatype: c7. ‘INTEGER1’
               
               
*note INTEGER2: 1bf.*note Datatype: c7. ‘INTEGER2’
               
               
*note INTEGER4: 1c0.*note Datatype: c7. ‘INTEGER4’
               
               
*note INTEGER8: 1c1.*note Datatype: c7. ‘INTEGER8’
               
               
*note INTEGER16: 1c2.*note Datatype: c7. ‘INTEGER16’
               
               
*note REAL2: 1c3.*note Datatype: c7. ‘REAL2’
               
               
*note REAL4: 1c4.*note Datatype: c7. ‘REAL4’
               
               
*note REAL8: 1c5.*note Datatype: c7. ‘REAL8’
               
               
*note REAL16: 1c6.*note Datatype: c7. ‘REAL16’
               
               
*note COMPLEX4: 1c7.*note Datatype: c7. ‘COMPLEX4’
               
               
*note COMPLEX8: 1c8.*note Datatype: c7. ‘COMPLEX8’
               
               
*note COMPLEX16: 1c9.*note Datatype: c7. ‘COMPLEX16’
               
               
*note COMPLEX32: 1ca.*note Datatype: c7. ‘COMPLEX32’
               
               
*note UNSIGNED_INT: 1cb.*note Datatype: c7. ‘UNSIGNED_INT’
               
               
*note SIGNED_SHORT: 1cc.*note Datatype: c7. ‘SIGNED_SHORT’
               
               
*note SIGNED_INT: 1cd.*note Datatype: c7. ‘SIGNED_INT’
               
               
*note SIGNED_LONG: 1ce.*note Datatype: c7. ‘SIGNED_LONG’
               
               
*note SIGNED_LONG_LONG: 1cf.*note Datatype: c7. ‘SIGNED_LONG_LONG’
               
               
*note BOOL: 1d0.*note Datatype: c7. ‘BOOL’
               
               
*note SINT8_T: 1d1.*note Datatype: c7. ‘SINT8_T’
               
               
*note SINT16_T: 1d2.*note Datatype: c7. ‘SINT16_T’
               
               
*note SINT32_T: 1d3.*note Datatype: c7. ‘SINT32_T’
               
               
*note SINT64_T: 1d4.*note Datatype: c7. ‘SINT64_T’
               
               
*note F_BOOL: 1d5.*note Datatype: c7. ‘F_BOOL’
               
               
*note F_INT: 1d6.*note Datatype: c7. ‘F_INT’
               
               
*note F_FLOAT: 1d7.*note Datatype: c7. ‘F_FLOAT’
               
               
*note F_DOUBLE: 1d8.*note Datatype: c7. ‘F_DOUBLE’
               
               
*note F_COMPLEX: 1d9.*note Datatype: c7. ‘F_COMPLEX’
               
               
*note F_FLOAT_COMPLEX: 1da.*note Datatype: c7. ‘F_FLOAT_COMPLEX’
               
               
*note F_DOUBLE_COMPLEX: 1db.*note Datatype: c7. ‘F_DOUBLE_COMPLEX’
               
               
*note REQUEST_NULL: 1dc.*note Request: 3f. ‘REQUEST_NULL’
               
               
*note MESSAGE_NULL: 1dd.*note Message: cd. ‘MESSAGE_NULL’
               
               
*note MESSAGE_NO_PROC: 1de.*note Message: cd. ‘MESSAGE_NO_PROC’
               
               
*note OP_NULL: 1df.*note Op: ca. ‘OP_NULL’
               
               
*note MAX: 63. *note Op: ca. ‘MAX’
               
               
*note MIN: 1e0.*note Op: ca. ‘MIN’
               
               
*note SUM: 61. *note Op: ca. ‘SUM’
               
               
*note PROD: 62.*note Op: ca. ‘PROD’
               
               
*note LAND: 1e1.*note Op: ca. ‘LAND’
               
               
*note BAND: 1e2.*note Op: ca. ‘BAND’
               
               
*note LOR: 1e3.*note Op: ca. ‘LOR’
               
               
*note BOR: 1e4.*note Op: ca. ‘BOR’
               
               
*note LXOR: 1e5.*note Op: ca. ‘LXOR’
               
               
*note BXOR: 1e6.*note Op: ca. ‘BXOR’
               
               
*note MAXLOC: 1e7.*note Op: ca. ‘MAXLOC’
               
               
*note MINLOC: 1e8.*note Op: ca. ‘MINLOC’
               
               
*note REPLACE: 1e9.*note Op: ca. ‘REPLACE’
               
               
*note NO_OP: 1ea.*note Op: ca. ‘NO_OP’
               
               
*note GROUP_NULL: 1eb.*note Group: 24. ‘GROUP_NULL’
               
               
*note GROUP_EMPTY: 1ec.*note Group: 24. ‘GROUP_EMPTY’
               
               
*note INFO_NULL: 1ed.*note Info: cb. ‘INFO_NULL’
               
               
*note INFO_ENV: 1ee.*note Info: cb. ‘INFO_ENV’
               
               
*note ERRHANDLER_NULL: 1ef.*note Errhandler: ce. ‘ERRHANDLER_NULL’
               
               
*note ERRORS_RETURN: 95.*note Errhandler: ce. ‘ERRORS_RETURN’
               
               
*note ERRORS_ARE_FATAL: 96.*note Errhandler: ce. ‘ERRORS_ARE_FATAL’
               
               
*note COMM_NULL: 1f0.*note Comm: 1a. ‘COMM_NULL’
               
               
*note COMM_SELF: 1f.*note Intracomm: 1b. ‘COMM_SELF’
               
               
*note COMM_WORLD: 20.*note Intracomm: 1b. ‘COMM_WORLD’
               
               
*note WIN_NULL: 1f1.*note Win: 72. ‘WIN_NULL’
               
               
*note FILE_NULL: 1f2.*note File: 80. ‘FILE_NULL’
               
               
*note pickle: a3.*note Pickle: cf. ‘pickle’
               

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/functions.html#int

   (20) https://docs.python.org/3/library/functions.html#int

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/functions.html#int

   (24) https://docs.python.org/3/library/functions.html#int

   (25) https://docs.python.org/3/library/functions.html#int

   (26) https://docs.python.org/3/library/functions.html#int

   (27) https://docs.python.org/3/library/functions.html#int

   (28) https://docs.python.org/3/library/functions.html#int

   (29) https://docs.python.org/3/library/functions.html#int

   (30) https://docs.python.org/3/library/functions.html#int

   (31) https://docs.python.org/3/library/functions.html#int

   (32) https://docs.python.org/3/library/functions.html#int

   (33) https://docs.python.org/3/library/functions.html#int

   (34) https://docs.python.org/3/library/functions.html#int

   (35) https://docs.python.org/3/library/functions.html#int

   (36) https://docs.python.org/3/library/functions.html#int

   (37) https://docs.python.org/3/library/functions.html#int

   (38) https://docs.python.org/3/library/functions.html#int

   (39) https://docs.python.org/3/library/functions.html#int

   (40) https://docs.python.org/3/library/functions.html#int

   (41) https://docs.python.org/3/library/functions.html#int

   (42) https://docs.python.org/3/library/functions.html#int

   (43) https://docs.python.org/3/library/functions.html#int

   (44) https://docs.python.org/3/library/functions.html#int

   (45) https://docs.python.org/3/library/functions.html#int

   (46) https://docs.python.org/3/library/functions.html#int

   (47) https://docs.python.org/3/library/functions.html#int

   (48) https://docs.python.org/3/library/functions.html#int

   (49) https://docs.python.org/3/library/functions.html#int

   (50) https://docs.python.org/3/library/functions.html#int

   (51) https://docs.python.org/3/library/functions.html#int

   (52) https://docs.python.org/3/library/functions.html#int

   (53) https://docs.python.org/3/library/functions.html#int

   (54) https://docs.python.org/3/library/functions.html#int

   (55) https://docs.python.org/3/library/functions.html#int

   (56) https://docs.python.org/3/library/functions.html#int

   (57) https://docs.python.org/3/library/functions.html#int

   (58) https://docs.python.org/3/library/functions.html#int

   (59) https://docs.python.org/3/library/functions.html#int

   (60) https://docs.python.org/3/library/functions.html#int

   (61) https://docs.python.org/3/library/functions.html#int

   (62) https://docs.python.org/3/library/functions.html#int

   (63) https://docs.python.org/3/library/functions.html#int

   (64) https://docs.python.org/3/library/functions.html#int

   (65) https://docs.python.org/3/library/functions.html#int

   (66) https://docs.python.org/3/library/functions.html#int

   (67) https://docs.python.org/3/library/functions.html#int

   (68) https://docs.python.org/3/library/functions.html#int

   (69) https://docs.python.org/3/library/functions.html#int

   (70) https://docs.python.org/3/library/functions.html#int

   (71) https://docs.python.org/3/library/functions.html#int

   (72) https://docs.python.org/3/library/functions.html#int

   (73) https://docs.python.org/3/library/functions.html#int

   (74) https://docs.python.org/3/library/functions.html#int

   (75) https://docs.python.org/3/library/functions.html#int

   (76) https://docs.python.org/3/library/functions.html#int

   (77) https://docs.python.org/3/library/functions.html#int

   (78) https://docs.python.org/3/library/functions.html#int

   (79) https://docs.python.org/3/library/functions.html#int

   (80) https://docs.python.org/3/library/functions.html#int

   (81) https://docs.python.org/3/library/functions.html#int

   (82) https://docs.python.org/3/library/functions.html#int

   (83) https://docs.python.org/3/library/functions.html#int

   (84) https://docs.python.org/3/library/functions.html#int

   (85) https://docs.python.org/3/library/functions.html#int

   (86) https://docs.python.org/3/library/functions.html#int

   (87) https://docs.python.org/3/library/functions.html#int

   (88) https://docs.python.org/3/library/functions.html#int

   (89) https://docs.python.org/3/library/functions.html#int

   (90) https://docs.python.org/3/library/functions.html#int

   (91) https://docs.python.org/3/library/functions.html#int

   (92) https://docs.python.org/3/library/functions.html#int

   (93) https://docs.python.org/3/library/functions.html#int

   (94) https://docs.python.org/3/library/functions.html#int

   (95) https://docs.python.org/3/library/functions.html#int

   (96) https://docs.python.org/3/library/functions.html#int

   (97) https://docs.python.org/3/library/functions.html#int

   (98) https://docs.python.org/3/library/functions.html#int

   (99) https://docs.python.org/3/library/functions.html#int

   (100) https://docs.python.org/3/library/functions.html#int

   (101) https://docs.python.org/3/library/functions.html#int

   (102) https://docs.python.org/3/library/functions.html#int

   (103) https://docs.python.org/3/library/functions.html#int

   (104) https://docs.python.org/3/library/functions.html#int

   (105) https://docs.python.org/3/library/functions.html#int

   (106) https://docs.python.org/3/library/functions.html#int

   (107) https://docs.python.org/3/library/functions.html#int

   (108) https://docs.python.org/3/library/functions.html#int

   (109) https://docs.python.org/3/library/functions.html#int

   (110) https://docs.python.org/3/library/functions.html#int

   (111) https://docs.python.org/3/library/functions.html#int

   (112) https://docs.python.org/3/library/functions.html#int

   (113) https://docs.python.org/3/library/functions.html#int

   (114) https://docs.python.org/3/library/functions.html#int

   (115) https://docs.python.org/3/library/functions.html#int

   (116) https://docs.python.org/3/library/functions.html#int

   (117) https://docs.python.org/3/library/functions.html#int

   (118) https://docs.python.org/3/library/functions.html#int

   (119) https://docs.python.org/3/library/functions.html#int

   (120) https://docs.python.org/3/library/functions.html#int

   (121) https://docs.python.org/3/library/functions.html#int

   (122) https://docs.python.org/3/library/functions.html#int

   (123) https://docs.python.org/3/library/functions.html#int

   (124) https://docs.python.org/3/library/functions.html#int

   (125) https://docs.python.org/3/library/functions.html#int

   (126) https://docs.python.org/3/library/functions.html#int

   (127) https://docs.python.org/3/library/functions.html#int

   (128) https://docs.python.org/3/library/functions.html#int

   (129) https://docs.python.org/3/library/functions.html#int

   (130) https://docs.python.org/3/library/functions.html#int

   (131) https://docs.python.org/3/library/functions.html#int

   (132) https://docs.python.org/3/library/functions.html#int

   (133) https://docs.python.org/3/library/functions.html#int

   (134) https://docs.python.org/3/library/functions.html#int

   (135) https://docs.python.org/3/library/functions.html#int

   (136) https://docs.python.org/3/library/functions.html#int

   (137) https://docs.python.org/3/library/functions.html#int

   (138) https://docs.python.org/3/library/functions.html#int

   (139) https://docs.python.org/3/library/functions.html#int

   (140) https://docs.python.org/3/library/functions.html#int

   (141) https://docs.python.org/3/library/functions.html#int

   (142) https://docs.python.org/3/library/functions.html#int

   (143) https://docs.python.org/3/library/functions.html#int

   (144) https://docs.python.org/3/library/functions.html#int

   (145) https://docs.python.org/3/library/functions.html#int

   (146) https://docs.python.org/3/library/functions.html#int

   (147) https://docs.python.org/3/library/functions.html#int

   (148) https://docs.python.org/3/library/functions.html#int

   (149) https://docs.python.org/3/library/functions.html#int

   (150) https://docs.python.org/3/library/functions.html#int

   (151) https://docs.python.org/3/library/functions.html#int

   (152) https://docs.python.org/3/library/functions.html#int

   (153) https://docs.python.org/3/library/functions.html#int

   (154) https://docs.python.org/3/library/functions.html#int

   (155) https://docs.python.org/3/library/functions.html#int

   (156) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py futures,  Next: mpi4py util,  Prev: mpi4py MPI,  Up: Top

6 mpi4py.futures
****************

New in version 3.0.0.

This package provides a high-level interface for asynchronously
executing callables on a pool of worker processes using MPI for
inter-process communication.

* Menu:

* concurrent.futures: concurrent futures.
* MPIPoolExecutor::
* MPICommExecutor::
* Command line::
* Examples::


File: mpi4py.info,  Node: concurrent futures,  Next: MPIPoolExecutor,  Up: mpi4py futures

6.1 concurrent.futures
======================

The *note mpi4py.futures: 1. package is based on concurrent.futures(1)
from the Python standard library.  More precisely, *note mpi4py.futures:
1. provides the *note MPIPoolExecutor: 1f6. class as a concrete
implementation of the abstract class Executor(2).  The submit()(3)
interface schedules a callable to be executed asynchronously and returns
a Future(4) object representing the execution of the callable.
Future(5) instances can be queried for the call result or exception.
Sets of Future(6) instances can be passed to the wait()(7) and
as_completed()(8) functions.

     Note: The concurrent.futures(9) package was introduced in Python
     3.2.  A backport(10) targeting Python 2.7 is available on PyPI(11).
     The *note mpi4py.futures: 1. package uses concurrent.futures(12) if
     available, either from the Python 3 standard library or the Python
     2.7 backport if installed.  Otherwise, *note mpi4py.futures: 1.
     uses a bundled copy of core functionality backported from Python
     3.5 to work with Python 2.7.

See also
........

Module concurrent.futures(13)

     Documentation of the concurrent.futures(14) standard module.

   ---------- Footnotes ----------

   (1) 
https://docs.python.org/3/library/concurrent.futures.html#module-concurrent.futures

   (2) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Executor

   (3) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Executor.submit

   (4) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future

   (5) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future

   (6) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future

   (7) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.wait

   (8) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.as_completed

   (9) 
https://docs.python.org/3/library/concurrent.futures.html#module-concurrent.futures

   (10) https://github.com/agronholm/pythonfutures

   (11) https://pypi.org/project/futures

   (12) 
https://docs.python.org/3/library/concurrent.futures.html#module-concurrent.futures

   (13) 
https://docs.python.org/3/library/concurrent.futures.html#module-concurrent.futures

   (14) 
https://docs.python.org/3/library/concurrent.futures.html#module-concurrent.futures


File: mpi4py.info,  Node: MPIPoolExecutor,  Next: MPICommExecutor,  Prev: concurrent futures,  Up: mpi4py futures

6.2 MPIPoolExecutor
===================

The *note MPIPoolExecutor: 1f6. class uses a pool of MPI processes to
execute calls asynchronously.  By performing computations in separate
processes, it allows to side-step the global interpreter lock(1) but
also means that only picklable objects can be executed and returned.
The __main__(2) module must be importable by worker processes, thus
*note MPIPoolExecutor: 1f6. instances may not work in the interactive
interpreter.

*note MPIPoolExecutor: 1f6. takes advantage of the dynamic process
management features introduced in the MPI-2 standard.  In particular,
the *note MPI.Intracomm.Spawn: 67. method of *note MPI.COMM_SELF: 1f. is
used in the master (or parent) process to spawn new worker (or child)
processes running a Python interpreter.  The master process uses a
separate thread (one for each *note MPIPoolExecutor: 1f6. instance) to
communicate back and forth with the workers.  The worker processes serve
the execution of tasks in the main (and only) thread until they are
signaled for completion.

     Note: The worker processes must import the main script in order to
     `unpickle' any callable defined in the __main__(3) module and
     submitted from the master process.  Furthermore, the callables may
     need access to other global variables.  At the worker processes,
     *note mpi4py.futures: 1. executes the main script code (using the
     runpy(4) module) under the ‘__worker__’ namespace to define the
     __main__(5) module.  The __main__(6) and ‘__worker__’ modules are
     added to sys.modules(7) (both at the master and worker processes)
     to ensure proper `pickling' and `unpickling'.

     Warning: During the initial import phase at the workers, the main
     script cannot create and use new *note MPIPoolExecutor: 1f6.
     instances.  Otherwise, each worker would attempt to spawn a new
     pool of workers, leading to infinite recursion.  *note
     mpi4py.futures: 1. detects such recursive attempts to spawn new
     workers and aborts the MPI execution environment.  As the main
     script code is run under the ‘__worker__’ namespace, the easiest
     way to avoid spawn recursion is using the idiom ‘if __name__ ==
     '__main__': ...’ in the main script.

 -- Class: mpi4py.futures.MPIPoolExecutor (max_workers=None,
          initializer=None, initargs=(), **kwargs)

     An Executor(8) subclass that executes calls asynchronously using a
     pool of at most `max_workers' processes.  If `max_workers' is
     ‘None’ or not given, its value is determined from the
     ‘MPI4PY_FUTURES_MAX_WORKERS’ environment variable if set, or the
     MPI universe size if set, otherwise a single worker process is
     spawned.  If `max_workers' is lower than or equal to ‘0’, then a
     ValueError(9) will be raised.

     `initializer' is an optional callable that is called at the start
     of each worker process before executing any tasks; `initargs' is a
     tuple of arguments passed to the initializer.  If `initializer'
     raises an exception, all pending tasks and any attempt to submit
     new tasks to the pool will raise a BrokenExecutor(10) exception.

     Other parameters:

        * `python_exe': Path to the Python interpreter executable used
          to spawn worker processes, otherwise sys.executable(11) is
          used.

        * `python_args': list(12) or iterable with additional command
          line flags to pass to the Python executable.  Command line
          flags determined from inspection of sys.flags(13),
          sys.warnoptions(14) and sys._xoptions(15) in are passed
          unconditionally.

        * `mpi_info': dict(16) or iterable yielding ‘(key, value)’
          pairs.  These ‘(key, value)’ pairs are passed (through an
          *note MPI.Info: cb. object) to the *note MPI.Intracomm.Spawn:
          67. call used to spawn worker processes.  This mechanism
          allows telling the MPI runtime system where and how to start
          the processes.  Check the documentation of the backend MPI
          implementation about the set of keys it interprets and the
          corresponding format for values.

        * `globals': dict(17) or iterable yielding ‘(name, value)’ pairs
          to initialize the main module namespace in worker processes.

        * `main': If set to ‘False’, do not import the ‘__main__’ module
          in worker processes.  Setting `main' to ‘False’ prevents
          worker processes from accessing definitions in the parent
          ‘__main__’ namespace.

        * `path': list(18) or iterable with paths to append to
          sys.path(19) in worker processes to extend the module search
          path(20).

        * `wdir': Path to set the current working directory in worker
          processes using os.chdir()(21).  The initial working directory
          is set by the MPI implementation.  Quality MPI implementations
          should honor a ‘wdir’ info key passed through `mpi_info',
          although such feature is not mandatory.

        * `env': dict(22) or iterable yielding ‘(name, value)’ pairs
          with environment variables to update os.environ(23) in worker
          processes.  The initial environment is set by the MPI
          implementation.  MPI implementations may allow setting the
          initial environment through `mpi_info', however such feature
          is not required nor recommended by the MPI standard.

      -- Method: submit (func, *args, **kwargs)

          Schedule the callable, `func', to be executed as ‘func(*args,
          **kwargs)’ and returns a Future(24) object representing the
          execution of the callable.

               executor = MPIPoolExecutor(max_workers=1)
               future = executor.submit(pow, 321, 1234)
               print(future.result())

      -- Method: map (func, *iterables, timeout=None, chunksize=1,
               **kwargs)

          Equivalent to map(func, *iterables)(25) except `func' is
          executed asynchronously and several calls to `func' may be
          made concurrently, out-of-order, in separate processes.  The
          returned iterator raises a TimeoutError(26) if __next__()(27)
          is called and the result isn’t available after `timeout'
          seconds from the original call to *note map(): 1f9.  `timeout'
          can be an int or a float.  If `timeout' is not specified or
          ‘None’, there is no limit to the wait time.  If a call raises
          an exception, then that exception will be raised when its
          value is retrieved from the iterator.  This method chops
          `iterables' into a number of chunks which it submits to the
          pool as separate tasks.  The (approximate) size of these
          chunks can be specified by setting `chunksize' to a positive
          integer.  For very long iterables, using a large value for
          `chunksize' can significantly improve performance compared to
          the default size of one.  By default, the returned iterator
          yields results in-order, waiting for successive tasks to
          complete .  This behavior can be changed by passing the
          keyword argument `unordered' as ‘True’, then the result
          iterator will yield a result as soon as any of the tasks
          complete.

               executor = MPIPoolExecutor(max_workers=3)
               for result in executor.map(pow, [2]*32, range(32)):
                   print(result)

      -- Method: starmap (func, iterable, timeout=None, chunksize=1,
               **kwargs)

          Equivalent to itertools.starmap(func, iterable)(28).  Used
          instead of *note map(): 1f9. when argument parameters are
          already grouped in tuples from a single iterable (the data has
          been “pre-zipped”).  *note map(func, *iterable): 1f9. is
          equivalent to *note starmap(func, zip(*iterable)): 1fa.

               executor = MPIPoolExecutor(max_workers=3)
               iterable = ((2, n) for n in range(32))
               for result in executor.starmap(pow, iterable):
                   print(result)

      -- Method: shutdown (wait=True, cancel_futures=False)

          Signal the executor that it should free any resources that it
          is using when the currently pending futures are done
          executing.  Calls to *note submit(): 1f8. and *note map():
          1f9. made after *note shutdown(): 1fb. will raise
          RuntimeError(29).

          If `wait' is ‘True’ then this method will not return until all
          the pending futures are done executing and the resources
          associated with the executor have been freed.  If `wait' is
          ‘False’ then this method will return immediately and the
          resources associated with the executor will be freed when all
          pending futures are done executing.  Regardless of the value
          of `wait', the entire Python program will not exit until all
          pending futures are done executing.

          If `cancel_futures' is ‘True’, this method will cancel all
          pending futures that the executor has not started running.
          Any futures that are completed or running won’t be cancelled,
          regardless of the value of `cancel_futures'.

          You can avoid having to call this method explicitly if you use
          the with(30) statement, which will shutdown the executor
          instance (waiting as if *note shutdown(): 1fb. were called
          with `wait' set to ‘True’).

               import time
               with MPIPoolExecutor(max_workers=1) as executor:
                   future = executor.submit(time.sleep, 2)
               assert future.done()

      -- Method: bootup (wait=True)

          Signal the executor that it should allocate eagerly any
          required resources (in particular, MPI worker processes).  If
          `wait' is ‘True’, then *note bootup(): 1fc. will not return
          until the executor resources are ready to process submissions.
          Resources are automatically allocated in the first call to
          *note submit(): 1f8, thus calling *note bootup(): 1fc.
          explicitly is seldom needed.

     Note: As the master process uses a separate thread to perform MPI
     communication with the workers, the backend MPI implementation
     should provide support for *note MPI.THREAD_MULTIPLE: 179.
     However, some popular MPI implementations do not support yet
     concurrent MPI calls from multiple threads.  Additionally, users
     may decide to initialize MPI with a lower level of thread support.
     If the level of thread support in the backend MPI is less than
     *note MPI.THREAD_MULTIPLE: 179, *note mpi4py.futures: 1. will use a
     global lock to serialize MPI calls.  If the level of thread support
     is less than *note MPI.THREAD_SERIALIZED: 178, *note
     mpi4py.futures: 1. will emit a RuntimeWarning(31).

     Warning: If the level of thread support in the backend MPI is less
     than *note MPI.THREAD_SERIALIZED: 178. (i.e, it is either *note
     MPI.THREAD_SINGLE: 176. or *note MPI.THREAD_FUNNELED: 177.), in
     theory *note mpi4py.futures: 1. cannot be used.  Rather than
     raising an exception, *note mpi4py.futures: 1. emits a warning and
     takes a “cross-fingers” attitude to continue execution in the hope
     that serializing MPI calls with a global lock will actually work.

   ---------- Footnotes ----------

   (1) 
https://docs.python.org/3/glossary.html#term-global-interpreter-lock

   (2) https://docs.python.org/3/library/__main__.html#module-__main__

   (3) https://docs.python.org/3/library/__main__.html#module-__main__

   (4) https://docs.python.org/3/library/runpy.html#module-runpy

   (5) https://docs.python.org/3/library/__main__.html#module-__main__

   (6) https://docs.python.org/3/library/__main__.html#module-__main__

   (7) https://docs.python.org/3/library/sys.html#sys.modules

   (8) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Executor

   (9) https://docs.python.org/3/library/exceptions.html#ValueError

   (10) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.BrokenExecutor

   (11) https://docs.python.org/3/library/sys.html#sys.executable

   (12) https://docs.python.org/3/library/stdtypes.html#list

   (13) https://docs.python.org/3/library/sys.html#sys.flags

   (14) https://docs.python.org/3/library/sys.html#sys.warnoptions

   (15) https://docs.python.org/3/library/sys.html#sys._xoptions

   (16) https://docs.python.org/3/library/stdtypes.html#dict

   (17) https://docs.python.org/3/library/stdtypes.html#dict

   (18) https://docs.python.org/3/library/stdtypes.html#list

   (19) https://docs.python.org/3/library/sys.html#sys.path

   (20) https://docs.python.org/3/tutorial/modules.html#tut-searchpath

   (21) https://docs.python.org/3/library/os.html#os.chdir

   (22) https://docs.python.org/3/library/stdtypes.html#dict

   (23) https://docs.python.org/3/library/os.html#os.environ

   (24) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future

   (25) https://docs.python.org/3/library/functions.html#map

   (26) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.TimeoutError

   (27) 
https://docs.python.org/3/library/stdtypes.html#iterator.__next__

   (28) 
https://docs.python.org/3/library/itertools.html#itertools.starmap

   (29) https://docs.python.org/3/library/exceptions.html#RuntimeError

   (30) https://docs.python.org/3/reference/compound_stmts.html#with

   (31) https://docs.python.org/3/library/exceptions.html#RuntimeWarning


File: mpi4py.info,  Node: MPICommExecutor,  Next: Command line,  Prev: MPIPoolExecutor,  Up: mpi4py futures

6.3 MPICommExecutor
===================

Legacy MPI-1 implementations (as well as some vendor MPI-2
implementations) do not support the dynamic process management features
introduced in the MPI-2 standard.  Additionally, job schedulers and
batch systems in supercomputing facilities may pose additional
complications to applications using the ‘MPI_Comm_spawn()’ routine.

With these issues in mind, *note mpi4py.futures: 1. supports an
additonal, more traditional, SPMD-like usage pattern requiring MPI-1
calls only.  Python applications are started the usual way, e.g., using
the ‘mpiexec’ command.  Python code should make a collective call to the
*note MPICommExecutor: 1fe. context manager to partition the set of MPI
processes within a MPI communicator in one master processes and many
workers processes.  The master process gets access to an *note
MPIPoolExecutor: 1f6. instance to submit tasks.  Meanwhile, the worker
process follow a different execution path and team-up to execute the
tasks submitted from the master.

Besides alleviating the lack of dynamic process managment features in
legacy MPI-1 or partial MPI-2 implementations, the *note
MPICommExecutor: 1fe. context manager may be useful in classic MPI-based
Python applications willing to take advantage of the simple, task-based,
master/worker approach available in the *note mpi4py.futures: 1.
package.

 -- Class: mpi4py.futures.MPICommExecutor (comm=None, root=0)

     Context manager for *note MPIPoolExecutor: 1f6.  This context
     manager splits a MPI (intra)communicator `comm' (defaults to *note
     MPI.COMM_WORLD: 20. if not provided or None(1)) in two disjoint
     sets: a single master process (with rank `root' in `comm') and the
     remaining worker processes.  These sets are then connected through
     an intercommunicator.  The target of the with(2) statement is
     assigned either an *note MPIPoolExecutor: 1f6. instance (at the
     master) or ‘None’ (at the workers).

          from mpi4py import MPI
          from mpi4py.futures import MPICommExecutor

          with MPICommExecutor(MPI.COMM_WORLD, root=0) as executor:
              if executor is not None:
                 future = executor.submit(abs, -42)
                 assert future.result() == 42
                 answer = set(executor.map(abs, [-42, 42]))
                 assert answer == {42}

     Warning: If *note MPICommExecutor: 1fe. is passed a communicator of
     size one (e.g., *note MPI.COMM_SELF: 1f.), then the executor
     instace assigned to the target of the with(3) statement will
     execute all submitted tasks in a single worker thread, thus
     ensuring that task execution still progress asynchronously.
     However, the *note GIL: 1ff. will prevent the main and worker
     threads from running concurrently in multicore processors.
     Moreover, the thread context switching may harm noticeably the
     performance of CPU-bound tasks.  In case of I/O-bound tasks, the
     *note GIL: 1ff. is not usually an issue, however, as a single
     worker thread is used, it progress one task at a time.  We advice
     against using *note MPICommExecutor: 1fe. with communicators of
     size one and suggest refactoring your code to use instead a
     ThreadPoolExecutor(4).

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None

   (2) https://docs.python.org/3/reference/compound_stmts.html#with

   (3) https://docs.python.org/3/reference/compound_stmts.html#with

   (4) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ThreadPoolExecutor


File: mpi4py.info,  Node: Command line,  Next: Examples,  Prev: MPICommExecutor,  Up: mpi4py futures

6.4 Command line
================

Recalling the issues related to the lack of support for dynamic process
managment features in MPI implementations, *note mpi4py.futures: 1.
supports an alternative usage pattern where Python code (either from
scripts, modules, or zip files) is run under command line control of the
*note mpi4py.futures: 1. package by passing ‘-m mpi4py.futures’ to the
‘python’ executable.  The ‘mpi4py.futures’ invocation should be passed a
`pyfile' path to a script (or a zipfile/directory containing a
‘__main__.py’ file).  Additionally, ‘mpi4py.futures’ accepts ‘-m `mod'’
to execute a module named `mod', ‘-c `cmd'’ to execute a command string
`cmd', or even ‘-’ to read commands from standard input (sys.stdin(1)).
Summarizing, ‘mpi4py.futures’ can be invoked in the following ways:

   * ‘$ mpiexec -n `numprocs' python -m mpi4py.futures `pyfile' [arg]
     ...’

   * ‘$ mpiexec -n `numprocs' python -m mpi4py.futures -m `mod' [arg]
     ...’

   * ‘$ mpiexec -n `numprocs' python -m mpi4py.futures -c `cmd' [arg]
     ...’

   * ‘$ mpiexec -n `numprocs' python -m mpi4py.futures - [arg] ...’

Before starting the main script execution, *note mpi4py.futures: 1.
splits *note MPI.COMM_WORLD: 20. in one master (the process with rank 0
in *note MPI.COMM_WORLD: 20.) and 16 workers and connect them through an
MPI intercommunicator.  Afterwards, the master process proceeds with the
execution of the user script code, which eventually creates *note
MPIPoolExecutor: 1f6. instances to submit tasks.  Meanwhile, the worker
processes follow a different execution path to serve the master.  Upon
successful termination of the main script at the master, the entire MPI
execution environment exists gracefully.  In case of any unhandled
exception in the main script, the master process calls
‘MPI.COMM_WORLD.Abort(1)’ to prevent deadlocks and force termination of
entire MPI execution environment.

     Warning: Running scripts under command line control of *note
     mpi4py.futures: 1. is quite similar to executing a single-process
     application that spawn additional workers as required.  However,
     there is a very important difference users should be aware of.  All
     *note MPIPoolExecutor: 1f6. instances created at the master will
     share the pool of workers.  Tasks submitted at the master from many
     different executors will be scheduled for execution in random order
     as soon as a worker is idle.  Any executor can easily starve all
     the workers (e.g., by calling *note MPIPoolExecutor.map(): 1f9.
     with long iterables).  If that ever happens, submissions from other
     executors will not be serviced until free workers are available.

See also
........

Command line(2)

     Documentation on Python command line interface.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/sys.html#sys.stdin

   (2) https://docs.python.org/3/using/cmdline.html#using-on-cmdline


File: mpi4py.info,  Node: Examples,  Prev: Command line,  Up: mpi4py futures

6.5 Examples
============

The following ‘julia.py’ script computes the Julia set(1) and dumps an
image to disk in binary PGM(2) format.  The code starts by importing
*note MPIPoolExecutor: 1f6. from the *note mpi4py.futures: 1. package.
Next, some global constants and functions implement the computation of
the Julia set.  The computations are protected with the standard ‘if
__name__ == '__main__': ...’ idiom.  The image is computed by whole
scanlines submitting all these tasks at once using the *note map: 1f9.
method.  The result iterator yields scanlines in-order as the tasks
complete.  Finally, each scanline is dumped to disk.

     from mpi4py.futures import MPIPoolExecutor

     x0, x1, w = -2.0, +2.0, 640*2
     y0, y1, h = -1.5, +1.5, 480*2
     dx = (x1 - x0) / w
     dy = (y1 - y0) / h

     c = complex(0, 0.65)

     def julia(x, y):
         z = complex(x, y)
         n = 255
         while abs(z) < 3 and n > 1:
             z = z**2 + c
             n -= 1
         return n

     def julia_line(k):
         line = bytearray(w)
         y = y1 - k * dy
         for j in range(w):
             x = x0 + j * dx
             line[j] = julia(x, y)
         return line

     if __name__ == '__main__':

         with MPIPoolExecutor() as executor:
             image = executor.map(julia_line, range(h))
             with open('julia.pgm', 'wb') as f:
                 f.write(b'P5 %d %d %d\n' % (w, h, 255))
                 for line in image:
                     f.write(line)

LiteralBlock: ‘julia.py’

The recommended way to execute the script is by using the ‘mpiexec’
command specifying one MPI process (master) and (optional but
recommended) the desired MPI universe size, which determines the number
of additional dynamically spawned processes (workers).  The MPI universe
size is provided either by a batch system or set by the user via
command-line arguments to ‘mpiexec’ or environment variables.  Below we
provide examples for MPICH and Open MPI implementations (3).  In all of
these examples, the ‘mpiexec’ command launches a single master process
running the Python interpreter and executing the main script.  When
required, *note mpi4py.futures: 1. spawns the pool of 16 worker
processes.  The master submits tasks to the workers and waits for the
results.  The workers receive incoming tasks, execute them, and send
back the results to the master.

When using MPICH implementation or its derivatives based on the Hydra
process manager, the user can set the MPI universe size via ‘-usize’
argument to ‘mpiexec’:

     $ mpiexec -n 1 -usize 17 python julia.py

or, alternatively, by setting the ‘MPIEXEC_UNIVERSE_SIZE’ environment
variable:

     $ MPIEXEC_UNIVERSE_SIZE=17 mpiexec -n 1 python julia.py

In the Open MPI implementation, the MPI universe size can be set via
‘-host’ argument to ‘mpiexec’:

     $ mpiexec -n 1 -host <hostname>:17 python julia.py

Another way to specify the number of workers is to use the *note
mpi4py.futures: 1.-specific environment variable
‘MPI4PY_FUTURES_MAX_WORKERS’:

     $ MPI4PY_FUTURES_MAX_WORKERS=16 mpiexec -n 1 python julia.py

Note that in this case, the MPI universe size is ignored.

Alternatively, users may decide to execute the script in a more
traditional way, that is, all the MPI processes are started at once.
The user script is run under command-line control of *note
mpi4py.futures: 1. passing the -m(4) flag to the ‘python’ executable:

     $ mpiexec -n 17 python -m mpi4py.futures julia.py

As explained previously, the 17 processes are partitioned in one master
and 16 workers.  The master process executes the main script while the
workers execute the tasks submitted by the master.

GIL

     See global interpreter lock(5).

   ---------- Footnotes ----------

   (1) https://en.wikipedia.org/wiki/Julia_set

   (2) http://netpbm.sourceforge.net/doc/pgm.html

   (3) (1) When using an MPI implementation other than MPICH or Open
MPI, please check the documentation of the implementation and/or batch
system for the ways to specify the desired MPI universe size.

   (4) https://docs.python.org/3/using/cmdline.html#using-on-cmdline

   (5) 
https://docs.python.org/3/glossary.html#term-global-interpreter-lock


File: mpi4py.info,  Node: mpi4py util,  Next: mpi4py run,  Prev: mpi4py futures,  Up: Top

7 mpi4py.util
*************

New in version 3.1.0.

The *note mpi4py.util: 4. package collects miscellaneous utilities
within the intersection of Python and MPI.

* Menu:

* mpi4py.util.pkl5: mpi4py util pkl5.
* mpi4py.util.dtlib: mpi4py util dtlib.


File: mpi4py.info,  Node: mpi4py util pkl5,  Next: mpi4py util dtlib,  Up: mpi4py util

7.1 mpi4py.util.pkl5
====================

New in version 3.1.0.

pickle(1) protocol 5 (see PEP 574(2)) introduced support for out-of-band
buffers, allowing for more efficient handling of certain object types
with large memory footprints.

MPI for Python uses the traditional in-band handling of buffers.  This
approach is appropriate for communicating non-buffer Python objects, or
buffer-like objects with small memory footprints.  For point-to-point
communication, in-band buffer handling allows for the communication of a
pickled stream with a single MPI message, at the expense of additional
CPU and memory overhead in the pickling and unpickling steps.

The *note mpi4py.util.pkl5: 6. module provides communicator wrapper
classes reimplementing pickle-based point-to-point communication methods
using pickle protocol 5.  Handling out-of-band buffers necessarily
involve multiple MPI messages, thus increasing latency and hurting
performance in case of small size data.  However, in case of large size
data, the zero-copy savings of out-of-band buffer handling more than
offset the extra latency costs.  Additionally, these wrapper methods
overcome the infamous 2 GiB message count limit (MPI-1 to MPI-3).

     Note: Support for pickle protocol 5 is available in the pickle(3)
     module within the Python standard library since Python 3.8.
     Previous Python 3 releases can use the ‘pickle5’ backport, which is
     available on PyPI(4) and can be installed with:

          python -m pip install pickle5

     The ‘pickle5’ backport is not available for Python 2.  Using the
     *note mpi4py.util.pkl5: 6. module on a Python 2 runtime provides no
     benefits and may hurt communication performance.

 -- Class: mpi4py.util.pkl5.Request

     Custom request class for nonblocking communications.

          Note: *note Request: 206. is not a subclass of ‘MPI.Request’

      -- Method: Free () -> None

      -- Method: cancel () -> None

      -- Method: get_status (status: Optional[MPI.Status] = None) ->
               bool

      -- Method: test (status: Optional[MPI.Status] = None) ->
               Tuple[bool, Optional[Any]]

      -- Method: wait (status: Optional[MPI.Status] = None) -> Any

      -- Method: classmethod testall (requests: Sequence[Request],
               statuses: Optional[List[MPI.Status]] = None) ->
               Tuple[bool, Optional[List[Any]]]

      -- Method: classmethod waitall (requests: Sequence[Request],
               statuses: Optional[List[MPI.Status]] = None) -> List[Any]

 -- Class: mpi4py.util.pkl5.Message

     Custom message class for matching probes.

          Note: *note Message: 20e. is not a subclass of ‘MPI.Message’

      -- Method: recv (status: Optional[MPI.Status] = None) -> Any: …

      -- Method: irecv () -> Request

      -- Method: classmethod probe (comm: Comm, source: int =
               MPI.ANY_SOURCE, tag: int = MPI.ANY_TAG, status:
               Optional[MPI.Status] = None) -> Message

      -- Method: classmethod iprobe (comm: Comm, source: int =
               MPI.ANY_SOURCE, tag: int = MPI.ANY_TAG, status:
               Optional[MPI.Status] = None) -> Optional[Message]: …

 -- Class: mpi4py.util.pkl5.Comm (comm: MPI.Comm = MPI.COMM_NULL)

     Base communicator wrapper class.

      -- Method: send (obj: Any, dest: int, tag: int = 0) -> None

      -- Method: bsend (obj: Any, dest: int, tag: int = 0) -> None

      -- Method: ssend (obj: Any, dest: int, tag: int = 0) -> None

      -- Method: isend (obj: Any, dest: int, tag: int = 0) -> Request

      -- Method: ibsend (obj: Any, dest: int, tag: int = 0) -> Request

      -- Method: issend (obj: Any, dest: int, tag: int = 0) -> Request

      -- Method: recv (buf: Optional[Buffer] = None, source: int =
               MPI.ANY_SOURCE, tag: int = MPI.ANY_TAG, status:
               Optional[MPI.Status] = None) -> Any

      -- Method: irecv (buf: Optional[Buffer] = None, source: int =
               MPI.ANY_SOURCE, tag: int = MPI.ANY_TAG) -> Request

               Warning: This method cannot be supported reliably and
               raises RuntimeError(5).

      -- Method: sendrecv (sendobj: Any, dest: int, sendtag: int = 0,
               recvbuf: Optional[Buffer] = None, source: int =
               MPI.ANY_SOURCE, recvtag: int = MPI.ANY_TAG, status:
               Optional[MPI.Status] = None) -> Any

      -- Method: mprobe (source: int = MPI.ANY_SOURCE, tag: int =
               MPI.ANY_TAG, status: Optional[MPI.Status] = None) ->
               Message

      -- Method: improbe (source: int = MPI.ANY_SOURCE, tag: int =
               MPI.ANY_TAG, status: Optional[MPI.Status] = None) ->
               Optional[Message]

      -- Method: bcast (self, obj: Any, root: int = 0) -> Any

 -- Class: mpi4py.util.pkl5.Intracomm (comm: MPI.Intracomm =
          MPI.COMM_NULL)

     Intracommunicator wrapper class.

 -- Class: mpi4py.util.pkl5.Intercomm (comm: MPI.Intercomm =
          MPI.COMM_NULL)

     Intercommunicator wrapper class.

* Menu:

* Examples: Examples<2>.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/pickle.html#module-pickle

   (2) https://www.python.org/dev/peps/pep-0574

   (3) https://docs.python.org/3/library/pickle.html#module-pickle

   (4) https://pypi.org/project/pickle5/

   (5) https://docs.python.org/3/library/exceptions.html#RuntimeError


File: mpi4py.info,  Node: Examples<2>,  Up: mpi4py util pkl5

7.1.1 Examples
--------------

     import numpy as np
     from mpi4py import MPI
     from mpi4py.util import pkl5

     comm = pkl5.Intracomm(MPI.COMM_WORLD)  # comm wrapper
     size = comm.Get_size()
     rank = comm.Get_rank()
     dst = (rank + 1) % size
     src = (rank - 1) % size

     sobj = np.full(1024**3, rank, dtype='i4')  # > 4 GiB
     sreq = comm.isend(sobj, dst, tag=42)
     robj = comm.recv (None, src, tag=42)
     sreq.Free()

     assert np.min(robj) == src
     assert np.max(robj) == src

LiteralBlock: ‘test-pkl5-1.py’

     import numpy as np
     from mpi4py import MPI
     from mpi4py.util import pkl5

     comm = pkl5.Intracomm(MPI.COMM_WORLD)  # comm wrapper
     size = comm.Get_size()
     rank = comm.Get_rank()
     dst = (rank + 1) % size
     src = (rank - 1) % size

     sobj = np.full(1024**3, rank, dtype='i4')  # > 4 GiB
     sreq = comm.isend(sobj, dst, tag=42)

     status = MPI.Status()
     rmsg = comm.mprobe(status=status)
     assert status.Get_source() == src
     assert status.Get_tag() == 42
     rreq = rmsg.irecv()
     robj = rreq.wait()

     sreq.Free()
     assert np.max(robj) == src
     assert np.min(robj) == src

LiteralBlock: ‘test-pkl5-2.py’


File: mpi4py.info,  Node: mpi4py util dtlib,  Prev: mpi4py util pkl5,  Up: mpi4py util

7.2 mpi4py.util.dtlib
=====================

New in version 3.1.0.

The *note mpi4py.util.dtlib: 5. module provides converter routines
between NumPy and MPI datatypes.

 -- Function: mpi4py.util.dtlib.from_numpy_dtype (dtype:
          numpy.DTypeLike) -> Datatype

     Convert NumPy datatype to MPI datatype.

 -- Function: mpi4py.util.dtlib.to_numpy_dtype (datatype: Datatype) ->
          numpy.dtype

     Convert MPI datatype to NumPy datatype.


File: mpi4py.info,  Node: mpi4py run,  Next: Reference,  Prev: mpi4py util,  Up: Top

8 mpi4py.run
************

New in version 3.0.0.

At import time, *note mpi4py: 0. initializes the MPI execution
environment calling ‘MPI_Init_thread()’ and installs an exit hook to
automatically call ‘MPI_Finalize()’ just before the Python process
terminates.  Additionally, *note mpi4py: 0. overrides the default *note
ERRORS_ARE_FATAL: 96. error handler in favor of *note ERRORS_RETURN: 95,
which allows translating MPI errors in Python exceptions.  These
departures from standard MPI behavior may be controversial, but are
quite convenient within the highly dynamic Python programming
environment.  Third-party code using *note mpi4py: 0. can just ‘from
mpi4py import MPI’ and perform MPI calls without the tedious
initialization/finalization handling.  MPI errors, once translated
automatically to Python exceptions, can be dealt with the common
try(1)…except(2)…finally(3) clauses; unhandled MPI exceptions will print
a traceback which helps in locating problems in source code.

Unfortunately, the interplay of automatic MPI finalization and unhandled
exceptions may lead to deadlocks.  In unattended runs, these deadlocks
will drain the battery of your laptop, or burn precious allocation hours
in your supercomputing facility.

Consider the following snippet of Python code.  Assume this code is
stored in a standard Python script file and run with ‘mpiexec’ in two or
more processes.

     from mpi4py import MPI
     assert MPI.COMM_WORLD.Get_size() > 1
     rank = MPI.COMM_WORLD.Get_rank()
     if rank == 0:
         1/0
         MPI.COMM_WORLD.send(None, dest=1, tag=42)
     elif rank == 1:
         MPI.COMM_WORLD.recv(source=0, tag=42)

Process 0 raises ZeroDivisionError(4) exception before performing a send
call to process 1.  As the exception is not handled, the Python
interpreter running in process 0 will proceed to exit with non-zero
status.  However, as *note mpi4py: 0. installed a finalizer hook to call
‘MPI_Finalize()’ before exit, process 0 will block waiting for other
processes to also enter the ‘MPI_Finalize()’ call.  Meanwhile, process 1
will block waiting for a message to arrive from process 0, thus never
reaching to ‘MPI_Finalize()’.  The whole MPI execution environment is
irremediably in a deadlock state.

To alleviate this issue, *note mpi4py: 0. offers a simple, alternative
command line execution mechanism based on using the -m(5) flag and
implemented with the runpy(6) module.  To use this features, Python code
should be run passing ‘-m mpi4py’ in the command line invoking the
Python interpreter.  In case of unhandled exceptions, the finalizer hook
will call ‘MPI_Abort()’ on the ‘MPI_COMM_WORLD’ communicator, thus
effectively aborting the MPI execution environment.

     Warning: When a process is forced to abort, resources (e.g.  open
     files) are not cleaned-up and any registered finalizers (either
     with the atexit(7) module, the Python C/API function
     Py_AtExit()(8), or even the C standard library function ‘atexit()’)
     will not be executed.  Thus, aborting execution is an extremely
     impolite way of ensuring process termination.  However, MPI
     provides no other mechanism to recover from a deadlock state.

* Menu:

* Interface options::

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/reference/compound_stmts.html#try

   (2) https://docs.python.org/3/reference/compound_stmts.html#except

   (3) https://docs.python.org/3/reference/compound_stmts.html#finally

   (4) 
https://docs.python.org/3/library/exceptions.html#ZeroDivisionError

   (5) https://docs.python.org/3/using/cmdline.html#using-on-cmdline

   (6) https://docs.python.org/3/library/runpy.html#module-runpy

   (7) https://docs.python.org/3/library/atexit.html#module-atexit

   (8) https://docs.python.org/3/c-api/sys.html#c.Py_AtExit


File: mpi4py.info,  Node: Interface options,  Up: mpi4py run

8.1 Interface options
=====================

The use of ‘-m mpi4py’ to execute Python code on the command line
resembles that of the Python interpreter.

   * ‘mpiexec -n `numprocs' python -m mpi4py `pyfile' [arg] ...’

   * ‘mpiexec -n `numprocs' python -m mpi4py -m `mod' [arg] ...’

   * ‘mpiexec -n `numprocs' python -m mpi4py -c `cmd' [arg] ...’

   * ‘mpiexec -n `numprocs' python -m mpi4py - [arg] ...’

 -- Describe: <pyfile>

     Execute the Python code contained in `pyfile', which must be a
     filesystem path referring to either a Python file, a directory
     containing a ‘__main__.py’ file, or a zipfile containing a
     ‘__main__.py’ file.

 -- Program Option: -m <mod>

     Search sys.path(1) for the named module `mod' and execute its
     contents.

 -- Program Option: -c <cmd>

     Execute the Python code in the `cmd' string command.

 -- Describe: -

     Read commands from standard input (sys.stdin(2)).

See also
........

Command line(3)

     Documentation on Python command line interface.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/sys.html#sys.path

   (2) https://docs.python.org/3/library/sys.html#sys.stdin

   (3) https://docs.python.org/3/using/cmdline.html#using-on-cmdline


File: mpi4py.info,  Node: Reference,  Next: Citation,  Prev: mpi4py run,  Up: Top

9 Reference
***********

*note mpi4py.MPI: 2.Message Passing Interface.
               

* Menu:

* mpi4py.MPI: mpi4py MPI<2>.


File: mpi4py.info,  Node: mpi4py MPI<2>,  Up: Reference

9.1 mpi4py.MPI
==============

Message Passing Interface.

Classes
.......

*note Cartcomm: 2f.([comm])Cartesian topology intracommunicator
               
               
*note Comm: 1a.([comm])Communicator
               
               
*note Datatype: c7.([datatype])Datatype object
               
               
*note Distgraphcomm: 31.([comm])Distributed graph topology intracommunicator
               
               
*note Errhandler: ce.([errhandler])Error handler
               
               
*note File: 80.([file])File handle
               
               
*note Graphcomm: 30.([comm])General graph topology intracommunicator
               
               
*note Grequest: c9.([request])Generalized request handle
               
               
*note Group: 24.([group])Group of processes
               
               
*note Info: cb.([info])Info object
               
               
*note Intercomm: 1c.([comm])Intercommunicator
               
               
*note Intracomm: 1b.([comm])Intracommunicator
               
               
*note Message: cd.([message])Matched message handle
               
               
*note Op: ca.([op])Operation object
               
               
*note Pickle: cf.([dumps,Pickle/unpickle Python objects
loads,         
protocol])

*note Prequest: 46.([request])Persistent request handle
               
               
*note Request: 3f.([request])Request handle
               
               
*note Status: c8.([status])Status object
               
               
*note Topocomm: cc.([comm])Topology intracommunicator
               
               
*note Win: 72.([win])Window handle
               
               
*note memory: d0.(buf)Memory buffer
               

* Menu:

* mpi4py.MPI.Cartcomm: mpi4py MPI Cartcomm.
* mpi4py.MPI.Comm: mpi4py MPI Comm.
* mpi4py.MPI.Datatype: mpi4py MPI Datatype.
* mpi4py.MPI.Distgraphcomm: mpi4py MPI Distgraphcomm.
* mpi4py.MPI.Errhandler: mpi4py MPI Errhandler.
* mpi4py.MPI.File: mpi4py MPI File.
* mpi4py.MPI.Graphcomm: mpi4py MPI Graphcomm.
* mpi4py.MPI.Grequest: mpi4py MPI Grequest.
* mpi4py.MPI.Group: mpi4py MPI Group.
* mpi4py.MPI.Info: mpi4py MPI Info.
* mpi4py.MPI.Intercomm: mpi4py MPI Intercomm.
* mpi4py.MPI.Intracomm: mpi4py MPI Intracomm.
* mpi4py.MPI.Message: mpi4py MPI Message.
* mpi4py.MPI.Op: mpi4py MPI Op.
* mpi4py.MPI.Pickle: mpi4py MPI Pickle.
* mpi4py.MPI.Prequest: mpi4py MPI Prequest.
* mpi4py.MPI.Request: mpi4py MPI Request.
* mpi4py.MPI.Status: mpi4py MPI Status.
* mpi4py.MPI.Topocomm: mpi4py MPI Topocomm.
* mpi4py.MPI.Win: mpi4py MPI Win.
* mpi4py.MPI.memory: mpi4py MPI memory.
* mpi4py.MPI.Exception: mpi4py MPI Exception.
* mpi4py.MPI.Add_error_class: mpi4py MPI Add_error_class.
* mpi4py.MPI.Add_error_code: mpi4py MPI Add_error_code.
* mpi4py.MPI.Add_error_string: mpi4py MPI Add_error_string.
* mpi4py.MPI.Aint_add: mpi4py MPI Aint_add.
* mpi4py.MPI.Aint_diff: mpi4py MPI Aint_diff.
* mpi4py.MPI.Alloc_mem: mpi4py MPI Alloc_mem.
* mpi4py.MPI.Attach_buffer: mpi4py MPI Attach_buffer.
* mpi4py.MPI.Close_port: mpi4py MPI Close_port.
* mpi4py.MPI.Compute_dims: mpi4py MPI Compute_dims.
* mpi4py.MPI.Detach_buffer: mpi4py MPI Detach_buffer.
* mpi4py.MPI.Finalize: mpi4py MPI Finalize.
* mpi4py.MPI.Free_mem: mpi4py MPI Free_mem.
* mpi4py.MPI.Get_address: mpi4py MPI Get_address.
* mpi4py.MPI.Get_error_class: mpi4py MPI Get_error_class.
* mpi4py.MPI.Get_error_string: mpi4py MPI Get_error_string.
* mpi4py.MPI.Get_library_version: mpi4py MPI Get_library_version.
* mpi4py.MPI.Get_processor_name: mpi4py MPI Get_processor_name.
* mpi4py.MPI.Get_version: mpi4py MPI Get_version.
* mpi4py.MPI.Init: mpi4py MPI Init.
* mpi4py.MPI.Init_thread: mpi4py MPI Init_thread.
* mpi4py.MPI.Is_finalized: mpi4py MPI Is_finalized.
* mpi4py.MPI.Is_initialized: mpi4py MPI Is_initialized.
* mpi4py.MPI.Is_thread_main: mpi4py MPI Is_thread_main.
* mpi4py.MPI.Lookup_name: mpi4py MPI Lookup_name.
* mpi4py.MPI.Open_port: mpi4py MPI Open_port.
* mpi4py.MPI.Pcontrol: mpi4py MPI Pcontrol.
* mpi4py.MPI.Publish_name: mpi4py MPI Publish_name.
* mpi4py.MPI.Query_thread: mpi4py MPI Query_thread.
* mpi4py.MPI.Register_datarep: mpi4py MPI Register_datarep.
* mpi4py.MPI.Unpublish_name: mpi4py MPI Unpublish_name.
* mpi4py.MPI.Wtick: mpi4py MPI Wtick.
* mpi4py.MPI.Wtime: mpi4py MPI Wtime.
* mpi4py.MPI.get_vendor: mpi4py MPI get_vendor.
* mpi4py.MPI.UNDEFINED: mpi4py MPI UNDEFINED.
* mpi4py.MPI.ANY_SOURCE: mpi4py MPI ANY_SOURCE.
* mpi4py.MPI.ANY_TAG: mpi4py MPI ANY_TAG.
* mpi4py.MPI.PROC_NULL: mpi4py MPI PROC_NULL.
* mpi4py.MPI.ROOT: mpi4py MPI ROOT.
* mpi4py.MPI.BOTTOM: mpi4py MPI BOTTOM.
* mpi4py.MPI.IN_PLACE: mpi4py MPI IN_PLACE.
* mpi4py.MPI.KEYVAL_INVALID: mpi4py MPI KEYVAL_INVALID.
* mpi4py.MPI.TAG_UB: mpi4py MPI TAG_UB.
* mpi4py.MPI.HOST: mpi4py MPI HOST.
* mpi4py.MPI.IO: mpi4py MPI IO.
* mpi4py.MPI.WTIME_IS_GLOBAL: mpi4py MPI WTIME_IS_GLOBAL.
* mpi4py.MPI.UNIVERSE_SIZE: mpi4py MPI UNIVERSE_SIZE.
* mpi4py.MPI.APPNUM: mpi4py MPI APPNUM.
* mpi4py.MPI.LASTUSEDCODE: mpi4py MPI LASTUSEDCODE.
* mpi4py.MPI.WIN_BASE: mpi4py MPI WIN_BASE.
* mpi4py.MPI.WIN_SIZE: mpi4py MPI WIN_SIZE.
* mpi4py.MPI.WIN_DISP_UNIT: mpi4py MPI WIN_DISP_UNIT.
* mpi4py.MPI.WIN_CREATE_FLAVOR: mpi4py MPI WIN_CREATE_FLAVOR.
* mpi4py.MPI.WIN_FLAVOR: mpi4py MPI WIN_FLAVOR.
* mpi4py.MPI.WIN_MODEL: mpi4py MPI WIN_MODEL.
* mpi4py.MPI.SUCCESS: mpi4py MPI SUCCESS.
* mpi4py.MPI.ERR_LASTCODE: mpi4py MPI ERR_LASTCODE.
* mpi4py.MPI.ERR_COMM: mpi4py MPI ERR_COMM.
* mpi4py.MPI.ERR_GROUP: mpi4py MPI ERR_GROUP.
* mpi4py.MPI.ERR_TYPE: mpi4py MPI ERR_TYPE.
* mpi4py.MPI.ERR_REQUEST: mpi4py MPI ERR_REQUEST.
* mpi4py.MPI.ERR_OP: mpi4py MPI ERR_OP.
* mpi4py.MPI.ERR_BUFFER: mpi4py MPI ERR_BUFFER.
* mpi4py.MPI.ERR_COUNT: mpi4py MPI ERR_COUNT.
* mpi4py.MPI.ERR_TAG: mpi4py MPI ERR_TAG.
* mpi4py.MPI.ERR_RANK: mpi4py MPI ERR_RANK.
* mpi4py.MPI.ERR_ROOT: mpi4py MPI ERR_ROOT.
* mpi4py.MPI.ERR_TRUNCATE: mpi4py MPI ERR_TRUNCATE.
* mpi4py.MPI.ERR_IN_STATUS: mpi4py MPI ERR_IN_STATUS.
* mpi4py.MPI.ERR_PENDING: mpi4py MPI ERR_PENDING.
* mpi4py.MPI.ERR_TOPOLOGY: mpi4py MPI ERR_TOPOLOGY.
* mpi4py.MPI.ERR_DIMS: mpi4py MPI ERR_DIMS.
* mpi4py.MPI.ERR_ARG: mpi4py MPI ERR_ARG.
* mpi4py.MPI.ERR_OTHER: mpi4py MPI ERR_OTHER.
* mpi4py.MPI.ERR_UNKNOWN: mpi4py MPI ERR_UNKNOWN.
* mpi4py.MPI.ERR_INTERN: mpi4py MPI ERR_INTERN.
* mpi4py.MPI.ERR_INFO: mpi4py MPI ERR_INFO.
* mpi4py.MPI.ERR_FILE: mpi4py MPI ERR_FILE.
* mpi4py.MPI.ERR_WIN: mpi4py MPI ERR_WIN.
* mpi4py.MPI.ERR_KEYVAL: mpi4py MPI ERR_KEYVAL.
* mpi4py.MPI.ERR_INFO_KEY: mpi4py MPI ERR_INFO_KEY.
* mpi4py.MPI.ERR_INFO_VALUE: mpi4py MPI ERR_INFO_VALUE.
* mpi4py.MPI.ERR_INFO_NOKEY: mpi4py MPI ERR_INFO_NOKEY.
* mpi4py.MPI.ERR_ACCESS: mpi4py MPI ERR_ACCESS.
* mpi4py.MPI.ERR_AMODE: mpi4py MPI ERR_AMODE.
* mpi4py.MPI.ERR_BAD_FILE: mpi4py MPI ERR_BAD_FILE.
* mpi4py.MPI.ERR_FILE_EXISTS: mpi4py MPI ERR_FILE_EXISTS.
* mpi4py.MPI.ERR_FILE_IN_USE: mpi4py MPI ERR_FILE_IN_USE.
* mpi4py.MPI.ERR_NO_SPACE: mpi4py MPI ERR_NO_SPACE.
* mpi4py.MPI.ERR_NO_SUCH_FILE: mpi4py MPI ERR_NO_SUCH_FILE.
* mpi4py.MPI.ERR_IO: mpi4py MPI ERR_IO.
* mpi4py.MPI.ERR_READ_ONLY: mpi4py MPI ERR_READ_ONLY.
* mpi4py.MPI.ERR_CONVERSION: mpi4py MPI ERR_CONVERSION.
* mpi4py.MPI.ERR_DUP_DATAREP: mpi4py MPI ERR_DUP_DATAREP.
* mpi4py.MPI.ERR_UNSUPPORTED_DATAREP: mpi4py MPI ERR_UNSUPPORTED_DATAREP.
* mpi4py.MPI.ERR_UNSUPPORTED_OPERATION: mpi4py MPI ERR_UNSUPPORTED_OPERATION.
* mpi4py.MPI.ERR_NAME: mpi4py MPI ERR_NAME.
* mpi4py.MPI.ERR_NO_MEM: mpi4py MPI ERR_NO_MEM.
* mpi4py.MPI.ERR_NOT_SAME: mpi4py MPI ERR_NOT_SAME.
* mpi4py.MPI.ERR_PORT: mpi4py MPI ERR_PORT.
* mpi4py.MPI.ERR_QUOTA: mpi4py MPI ERR_QUOTA.
* mpi4py.MPI.ERR_SERVICE: mpi4py MPI ERR_SERVICE.
* mpi4py.MPI.ERR_SPAWN: mpi4py MPI ERR_SPAWN.
* mpi4py.MPI.ERR_BASE: mpi4py MPI ERR_BASE.
* mpi4py.MPI.ERR_SIZE: mpi4py MPI ERR_SIZE.
* mpi4py.MPI.ERR_DISP: mpi4py MPI ERR_DISP.
* mpi4py.MPI.ERR_ASSERT: mpi4py MPI ERR_ASSERT.
* mpi4py.MPI.ERR_LOCKTYPE: mpi4py MPI ERR_LOCKTYPE.
* mpi4py.MPI.ERR_RMA_CONFLICT: mpi4py MPI ERR_RMA_CONFLICT.
* mpi4py.MPI.ERR_RMA_SYNC: mpi4py MPI ERR_RMA_SYNC.
* mpi4py.MPI.ERR_RMA_RANGE: mpi4py MPI ERR_RMA_RANGE.
* mpi4py.MPI.ERR_RMA_ATTACH: mpi4py MPI ERR_RMA_ATTACH.
* mpi4py.MPI.ERR_RMA_SHARED: mpi4py MPI ERR_RMA_SHARED.
* mpi4py.MPI.ERR_RMA_FLAVOR: mpi4py MPI ERR_RMA_FLAVOR.
* mpi4py.MPI.ORDER_C: mpi4py MPI ORDER_C.
* mpi4py.MPI.ORDER_FORTRAN: mpi4py MPI ORDER_FORTRAN.
* mpi4py.MPI.ORDER_F: mpi4py MPI ORDER_F.
* mpi4py.MPI.TYPECLASS_INTEGER: mpi4py MPI TYPECLASS_INTEGER.
* mpi4py.MPI.TYPECLASS_REAL: mpi4py MPI TYPECLASS_REAL.
* mpi4py.MPI.TYPECLASS_COMPLEX: mpi4py MPI TYPECLASS_COMPLEX.
* mpi4py.MPI.DISTRIBUTE_NONE: mpi4py MPI DISTRIBUTE_NONE.
* mpi4py.MPI.DISTRIBUTE_BLOCK: mpi4py MPI DISTRIBUTE_BLOCK.
* mpi4py.MPI.DISTRIBUTE_CYCLIC: mpi4py MPI DISTRIBUTE_CYCLIC.
* mpi4py.MPI.DISTRIBUTE_DFLT_DARG: mpi4py MPI DISTRIBUTE_DFLT_DARG.
* mpi4py.MPI.COMBINER_NAMED: mpi4py MPI COMBINER_NAMED.
* mpi4py.MPI.COMBINER_DUP: mpi4py MPI COMBINER_DUP.
* mpi4py.MPI.COMBINER_CONTIGUOUS: mpi4py MPI COMBINER_CONTIGUOUS.
* mpi4py.MPI.COMBINER_VECTOR: mpi4py MPI COMBINER_VECTOR.
* mpi4py.MPI.COMBINER_HVECTOR: mpi4py MPI COMBINER_HVECTOR.
* mpi4py.MPI.COMBINER_INDEXED: mpi4py MPI COMBINER_INDEXED.
* mpi4py.MPI.COMBINER_HINDEXED: mpi4py MPI COMBINER_HINDEXED.
* mpi4py.MPI.COMBINER_INDEXED_BLOCK: mpi4py MPI COMBINER_INDEXED_BLOCK.
* mpi4py.MPI.COMBINER_HINDEXED_BLOCK: mpi4py MPI COMBINER_HINDEXED_BLOCK.
* mpi4py.MPI.COMBINER_STRUCT: mpi4py MPI COMBINER_STRUCT.
* mpi4py.MPI.COMBINER_SUBARRAY: mpi4py MPI COMBINER_SUBARRAY.
* mpi4py.MPI.COMBINER_DARRAY: mpi4py MPI COMBINER_DARRAY.
* mpi4py.MPI.COMBINER_RESIZED: mpi4py MPI COMBINER_RESIZED.
* mpi4py.MPI.COMBINER_F90_REAL: mpi4py MPI COMBINER_F90_REAL.
* mpi4py.MPI.COMBINER_F90_COMPLEX: mpi4py MPI COMBINER_F90_COMPLEX.
* mpi4py.MPI.COMBINER_F90_INTEGER: mpi4py MPI COMBINER_F90_INTEGER.
* mpi4py.MPI.IDENT: mpi4py MPI IDENT.
* mpi4py.MPI.CONGRUENT: mpi4py MPI CONGRUENT.
* mpi4py.MPI.SIMILAR: mpi4py MPI SIMILAR.
* mpi4py.MPI.UNEQUAL: mpi4py MPI UNEQUAL.
* mpi4py.MPI.CART: mpi4py MPI CART.
* mpi4py.MPI.GRAPH: mpi4py MPI GRAPH.
* mpi4py.MPI.DIST_GRAPH: mpi4py MPI DIST_GRAPH.
* mpi4py.MPI.UNWEIGHTED: mpi4py MPI UNWEIGHTED.
* mpi4py.MPI.WEIGHTS_EMPTY: mpi4py MPI WEIGHTS_EMPTY.
* mpi4py.MPI.COMM_TYPE_SHARED: mpi4py MPI COMM_TYPE_SHARED.
* mpi4py.MPI.BSEND_OVERHEAD: mpi4py MPI BSEND_OVERHEAD.
* mpi4py.MPI.WIN_FLAVOR_CREATE: mpi4py MPI WIN_FLAVOR_CREATE.
* mpi4py.MPI.WIN_FLAVOR_ALLOCATE: mpi4py MPI WIN_FLAVOR_ALLOCATE.
* mpi4py.MPI.WIN_FLAVOR_DYNAMIC: mpi4py MPI WIN_FLAVOR_DYNAMIC.
* mpi4py.MPI.WIN_FLAVOR_SHARED: mpi4py MPI WIN_FLAVOR_SHARED.
* mpi4py.MPI.WIN_SEPARATE: mpi4py MPI WIN_SEPARATE.
* mpi4py.MPI.WIN_UNIFIED: mpi4py MPI WIN_UNIFIED.
* mpi4py.MPI.MODE_NOCHECK: mpi4py MPI MODE_NOCHECK.
* mpi4py.MPI.MODE_NOSTORE: mpi4py MPI MODE_NOSTORE.
* mpi4py.MPI.MODE_NOPUT: mpi4py MPI MODE_NOPUT.
* mpi4py.MPI.MODE_NOPRECEDE: mpi4py MPI MODE_NOPRECEDE.
* mpi4py.MPI.MODE_NOSUCCEED: mpi4py MPI MODE_NOSUCCEED.
* mpi4py.MPI.LOCK_EXCLUSIVE: mpi4py MPI LOCK_EXCLUSIVE.
* mpi4py.MPI.LOCK_SHARED: mpi4py MPI LOCK_SHARED.
* mpi4py.MPI.MODE_RDONLY: mpi4py MPI MODE_RDONLY.
* mpi4py.MPI.MODE_WRONLY: mpi4py MPI MODE_WRONLY.
* mpi4py.MPI.MODE_RDWR: mpi4py MPI MODE_RDWR.
* mpi4py.MPI.MODE_CREATE: mpi4py MPI MODE_CREATE.
* mpi4py.MPI.MODE_EXCL: mpi4py MPI MODE_EXCL.
* mpi4py.MPI.MODE_DELETE_ON_CLOSE: mpi4py MPI MODE_DELETE_ON_CLOSE.
* mpi4py.MPI.MODE_UNIQUE_OPEN: mpi4py MPI MODE_UNIQUE_OPEN.
* mpi4py.MPI.MODE_SEQUENTIAL: mpi4py MPI MODE_SEQUENTIAL.
* mpi4py.MPI.MODE_APPEND: mpi4py MPI MODE_APPEND.
* mpi4py.MPI.SEEK_SET: mpi4py MPI SEEK_SET.
* mpi4py.MPI.SEEK_CUR: mpi4py MPI SEEK_CUR.
* mpi4py.MPI.SEEK_END: mpi4py MPI SEEK_END.
* mpi4py.MPI.DISPLACEMENT_CURRENT: mpi4py MPI DISPLACEMENT_CURRENT.
* mpi4py.MPI.DISP_CUR: mpi4py MPI DISP_CUR.
* mpi4py.MPI.THREAD_SINGLE: mpi4py MPI THREAD_SINGLE.
* mpi4py.MPI.THREAD_FUNNELED: mpi4py MPI THREAD_FUNNELED.
* mpi4py.MPI.THREAD_SERIALIZED: mpi4py MPI THREAD_SERIALIZED.
* mpi4py.MPI.THREAD_MULTIPLE: mpi4py MPI THREAD_MULTIPLE.
* mpi4py.MPI.VERSION: mpi4py MPI VERSION.
* mpi4py.MPI.SUBVERSION: mpi4py MPI SUBVERSION.
* mpi4py.MPI.MAX_PROCESSOR_NAME: mpi4py MPI MAX_PROCESSOR_NAME.
* mpi4py.MPI.MAX_ERROR_STRING: mpi4py MPI MAX_ERROR_STRING.
* mpi4py.MPI.MAX_PORT_NAME: mpi4py MPI MAX_PORT_NAME.
* mpi4py.MPI.MAX_INFO_KEY: mpi4py MPI MAX_INFO_KEY.
* mpi4py.MPI.MAX_INFO_VAL: mpi4py MPI MAX_INFO_VAL.
* mpi4py.MPI.MAX_OBJECT_NAME: mpi4py MPI MAX_OBJECT_NAME.
* mpi4py.MPI.MAX_DATAREP_STRING: mpi4py MPI MAX_DATAREP_STRING.
* mpi4py.MPI.MAX_LIBRARY_VERSION_STRING: mpi4py MPI MAX_LIBRARY_VERSION_STRING.
* mpi4py.MPI.DATATYPE_NULL: mpi4py MPI DATATYPE_NULL.
* mpi4py.MPI.UB: mpi4py MPI UB.
* mpi4py.MPI.LB: mpi4py MPI LB.
* mpi4py.MPI.PACKED: mpi4py MPI PACKED.
* mpi4py.MPI.BYTE: mpi4py MPI BYTE.
* mpi4py.MPI.AINT: mpi4py MPI AINT.
* mpi4py.MPI.OFFSET: mpi4py MPI OFFSET.
* mpi4py.MPI.COUNT: mpi4py MPI COUNT.
* mpi4py.MPI.CHAR: mpi4py MPI CHAR.
* mpi4py.MPI.WCHAR: mpi4py MPI WCHAR.
* mpi4py.MPI.SIGNED_CHAR: mpi4py MPI SIGNED_CHAR.
* mpi4py.MPI.SHORT: mpi4py MPI SHORT.
* mpi4py.MPI.INT: mpi4py MPI INT.
* mpi4py.MPI.LONG: mpi4py MPI LONG.
* mpi4py.MPI.LONG_LONG: mpi4py MPI LONG_LONG.
* mpi4py.MPI.UNSIGNED_CHAR: mpi4py MPI UNSIGNED_CHAR.
* mpi4py.MPI.UNSIGNED_SHORT: mpi4py MPI UNSIGNED_SHORT.
* mpi4py.MPI.UNSIGNED: mpi4py MPI UNSIGNED.
* mpi4py.MPI.UNSIGNED_LONG: mpi4py MPI UNSIGNED_LONG.
* mpi4py.MPI.UNSIGNED_LONG_LONG: mpi4py MPI UNSIGNED_LONG_LONG.
* mpi4py.MPI.FLOAT: mpi4py MPI FLOAT.
* mpi4py.MPI.DOUBLE: mpi4py MPI DOUBLE.
* mpi4py.MPI.LONG_DOUBLE: mpi4py MPI LONG_DOUBLE.
* mpi4py.MPI.C_BOOL: mpi4py MPI C_BOOL.
* mpi4py.MPI.INT8_T: mpi4py MPI INT8_T.
* mpi4py.MPI.INT16_T: mpi4py MPI INT16_T.
* mpi4py.MPI.INT32_T: mpi4py MPI INT32_T.
* mpi4py.MPI.INT64_T: mpi4py MPI INT64_T.
* mpi4py.MPI.UINT8_T: mpi4py MPI UINT8_T.
* mpi4py.MPI.UINT16_T: mpi4py MPI UINT16_T.
* mpi4py.MPI.UINT32_T: mpi4py MPI UINT32_T.
* mpi4py.MPI.UINT64_T: mpi4py MPI UINT64_T.
* mpi4py.MPI.C_COMPLEX: mpi4py MPI C_COMPLEX.
* mpi4py.MPI.C_FLOAT_COMPLEX: mpi4py MPI C_FLOAT_COMPLEX.
* mpi4py.MPI.C_DOUBLE_COMPLEX: mpi4py MPI C_DOUBLE_COMPLEX.
* mpi4py.MPI.C_LONG_DOUBLE_COMPLEX: mpi4py MPI C_LONG_DOUBLE_COMPLEX.
* mpi4py.MPI.CXX_BOOL: mpi4py MPI CXX_BOOL.
* mpi4py.MPI.CXX_FLOAT_COMPLEX: mpi4py MPI CXX_FLOAT_COMPLEX.
* mpi4py.MPI.CXX_DOUBLE_COMPLEX: mpi4py MPI CXX_DOUBLE_COMPLEX.
* mpi4py.MPI.CXX_LONG_DOUBLE_COMPLEX: mpi4py MPI CXX_LONG_DOUBLE_COMPLEX.
* mpi4py.MPI.SHORT_INT: mpi4py MPI SHORT_INT.
* mpi4py.MPI.INT_INT: mpi4py MPI INT_INT.
* mpi4py.MPI.TWOINT: mpi4py MPI TWOINT.
* mpi4py.MPI.LONG_INT: mpi4py MPI LONG_INT.
* mpi4py.MPI.FLOAT_INT: mpi4py MPI FLOAT_INT.
* mpi4py.MPI.DOUBLE_INT: mpi4py MPI DOUBLE_INT.
* mpi4py.MPI.LONG_DOUBLE_INT: mpi4py MPI LONG_DOUBLE_INT.
* mpi4py.MPI.CHARACTER: mpi4py MPI CHARACTER.
* mpi4py.MPI.LOGICAL: mpi4py MPI LOGICAL.
* mpi4py.MPI.INTEGER: mpi4py MPI INTEGER.
* mpi4py.MPI.REAL: mpi4py MPI REAL.
* mpi4py.MPI.DOUBLE_PRECISION: mpi4py MPI DOUBLE_PRECISION.
* mpi4py.MPI.COMPLEX: mpi4py MPI COMPLEX.
* mpi4py.MPI.DOUBLE_COMPLEX: mpi4py MPI DOUBLE_COMPLEX.
* mpi4py.MPI.LOGICAL1: mpi4py MPI LOGICAL1.
* mpi4py.MPI.LOGICAL2: mpi4py MPI LOGICAL2.
* mpi4py.MPI.LOGICAL4: mpi4py MPI LOGICAL4.
* mpi4py.MPI.LOGICAL8: mpi4py MPI LOGICAL8.
* mpi4py.MPI.INTEGER1: mpi4py MPI INTEGER1.
* mpi4py.MPI.INTEGER2: mpi4py MPI INTEGER2.
* mpi4py.MPI.INTEGER4: mpi4py MPI INTEGER4.
* mpi4py.MPI.INTEGER8: mpi4py MPI INTEGER8.
* mpi4py.MPI.INTEGER16: mpi4py MPI INTEGER16.
* mpi4py.MPI.REAL2: mpi4py MPI REAL2.
* mpi4py.MPI.REAL4: mpi4py MPI REAL4.
* mpi4py.MPI.REAL8: mpi4py MPI REAL8.
* mpi4py.MPI.REAL16: mpi4py MPI REAL16.
* mpi4py.MPI.COMPLEX4: mpi4py MPI COMPLEX4.
* mpi4py.MPI.COMPLEX8: mpi4py MPI COMPLEX8.
* mpi4py.MPI.COMPLEX16: mpi4py MPI COMPLEX16.
* mpi4py.MPI.COMPLEX32: mpi4py MPI COMPLEX32.
* mpi4py.MPI.UNSIGNED_INT: mpi4py MPI UNSIGNED_INT.
* mpi4py.MPI.SIGNED_SHORT: mpi4py MPI SIGNED_SHORT.
* mpi4py.MPI.SIGNED_INT: mpi4py MPI SIGNED_INT.
* mpi4py.MPI.SIGNED_LONG: mpi4py MPI SIGNED_LONG.
* mpi4py.MPI.SIGNED_LONG_LONG: mpi4py MPI SIGNED_LONG_LONG.
* mpi4py.MPI.BOOL: mpi4py MPI BOOL.
* mpi4py.MPI.SINT8_T: mpi4py MPI SINT8_T.
* mpi4py.MPI.SINT16_T: mpi4py MPI SINT16_T.
* mpi4py.MPI.SINT32_T: mpi4py MPI SINT32_T.
* mpi4py.MPI.SINT64_T: mpi4py MPI SINT64_T.
* mpi4py.MPI.F_BOOL: mpi4py MPI F_BOOL.
* mpi4py.MPI.F_INT: mpi4py MPI F_INT.
* mpi4py.MPI.F_FLOAT: mpi4py MPI F_FLOAT.
* mpi4py.MPI.F_DOUBLE: mpi4py MPI F_DOUBLE.
* mpi4py.MPI.F_COMPLEX: mpi4py MPI F_COMPLEX.
* mpi4py.MPI.F_FLOAT_COMPLEX: mpi4py MPI F_FLOAT_COMPLEX.
* mpi4py.MPI.F_DOUBLE_COMPLEX: mpi4py MPI F_DOUBLE_COMPLEX.
* mpi4py.MPI.REQUEST_NULL: mpi4py MPI REQUEST_NULL.
* mpi4py.MPI.MESSAGE_NULL: mpi4py MPI MESSAGE_NULL.
* mpi4py.MPI.MESSAGE_NO_PROC: mpi4py MPI MESSAGE_NO_PROC.
* mpi4py.MPI.OP_NULL: mpi4py MPI OP_NULL.
* mpi4py.MPI.MAX: mpi4py MPI MAX.
* mpi4py.MPI.MIN: mpi4py MPI MIN.
* mpi4py.MPI.SUM: mpi4py MPI SUM.
* mpi4py.MPI.PROD: mpi4py MPI PROD.
* mpi4py.MPI.LAND: mpi4py MPI LAND.
* mpi4py.MPI.BAND: mpi4py MPI BAND.
* mpi4py.MPI.LOR: mpi4py MPI LOR.
* mpi4py.MPI.BOR: mpi4py MPI BOR.
* mpi4py.MPI.LXOR: mpi4py MPI LXOR.
* mpi4py.MPI.BXOR: mpi4py MPI BXOR.
* mpi4py.MPI.MAXLOC: mpi4py MPI MAXLOC.
* mpi4py.MPI.MINLOC: mpi4py MPI MINLOC.
* mpi4py.MPI.REPLACE: mpi4py MPI REPLACE.
* mpi4py.MPI.NO_OP: mpi4py MPI NO_OP.
* mpi4py.MPI.GROUP_NULL: mpi4py MPI GROUP_NULL.
* mpi4py.MPI.GROUP_EMPTY: mpi4py MPI GROUP_EMPTY.
* mpi4py.MPI.INFO_NULL: mpi4py MPI INFO_NULL.
* mpi4py.MPI.INFO_ENV: mpi4py MPI INFO_ENV.
* mpi4py.MPI.ERRHANDLER_NULL: mpi4py MPI ERRHANDLER_NULL.
* mpi4py.MPI.ERRORS_RETURN: mpi4py MPI ERRORS_RETURN.
* mpi4py.MPI.ERRORS_ARE_FATAL: mpi4py MPI ERRORS_ARE_FATAL.
* mpi4py.MPI.COMM_NULL: mpi4py MPI COMM_NULL.
* mpi4py.MPI.COMM_SELF: mpi4py MPI COMM_SELF.
* mpi4py.MPI.COMM_WORLD: mpi4py MPI COMM_WORLD.
* mpi4py.MPI.WIN_NULL: mpi4py MPI WIN_NULL.
* mpi4py.MPI.FILE_NULL: mpi4py MPI FILE_NULL.
* mpi4py.MPI.pickle: mpi4py MPI pickle.


File: mpi4py.info,  Node: mpi4py MPI Cartcomm,  Next: mpi4py MPI Comm,  Up: mpi4py MPI<2>

9.1.1 mpi4py.MPI.Cartcomm
-------------------------

 -- Class: mpi4py.MPI.Cartcomm (comm=None)

     Bases: *note mpi4py.MPI.Topocomm: cc.

     Cartesian topology intracommunicator


     Parameters: ‘comm’ (‘Optional’‘[’*note Cartcomm: 2f.‘]’) –


     Return type: *note Cartcomm: 2f.

      -- Method: static __new__ (cls, comm=None)


          Parameters: ‘comm’ (‘Optional’‘[’*note Cartcomm: 2f.‘]’) –


          Return type: *note Cartcomm: 2f.

     Methods Summary
     ...............

     *note Get_cart_rank: 234.(coords)Translate logical coordinates to ranks
                    
                    
     *note Get_coords: 235.(rank)Translate ranks to logical coordinates
                    
                    
     *note Get_dim: 236.()Return number of dimensions
                    
                    
     *note Get_topo: 237.()Return information on the cartesian topology
                    
                    
     *note Shift: 238.(direction,Return a tuple (source, dest) of process ranks for data shifting with Comm.Sendrecv()
     disp)          

     *note Sub: 239.(remain_dims)Return cartesian communicators that form lower-dimensional subgrids
                    

     Attributes Summary
     ..................

     *note coords: 23a.coordinates
                    
                    
     *note dim: 23b.number of dimensions
                    
                    
     *note dims: 23c.dimensions
                    
                    
     *note ndim: 23d.number of dimensions
                    
                    
     *note periods: 23e.periodicity
                    
                    
     *note topo: 23f.topology information
                    

     Methods Documentation
     .....................

      -- Method: Get_cart_rank (coords)

          Translate logical coordinates to ranks


          Parameters: ‘coords’ (‘Sequence’‘[’int(1)‘]’) –


          Return type: int(2)

      -- Method: Get_coords (rank)

          Translate ranks to logical coordinates


          Parameters: ‘rank’ (int(3)) –


          Return type: List[int(4)]

      -- Method: Get_dim ()

          Return number of dimensions


          Return type: int(5)

      -- Method: Get_topo ()

          Return information on the cartesian topology


          Return type: Tuple[List[int(6)], List[int(7)], List[int(8)]]

      -- Method: Shift (direction, disp)

          Return a tuple (source, dest) of process ranks for data
          shifting with Comm.Sendrecv()


          Parameters:

             * ‘direction’ (int(9)) –

             * ‘disp’ (int(10)) –


          Return type: Tuple[int(11), int(12)]

      -- Method: Sub (remain_dims)

          Return cartesian communicators that form lower-dimensional
          subgrids


          Parameters: ‘remain_dims’ (‘Sequence’‘[’bool(13)‘]’) –


          Return type: *note Cartcomm: 2f.

     Attributes Documentation
     ........................

      -- Attribute: coords

          coordinates

      -- Attribute: dim

          number of dimensions

      -- Attribute: dims

          dimensions

      -- Attribute: ndim

          number of dimensions

      -- Attribute: periods

          periodicity

      -- Attribute: topo

          topology information

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#bool


File: mpi4py.info,  Node: mpi4py MPI Comm,  Next: mpi4py MPI Datatype,  Prev: mpi4py MPI Cartcomm,  Up: mpi4py MPI<2>

9.1.2 mpi4py.MPI.Comm
---------------------

 -- Class: mpi4py.MPI.Comm (comm=None)

     Bases: object(1)

     Communicator


     Parameters: ‘comm’ (‘Optional’‘[’*note Comm: 1a.‘]’) –


     Return type: *note Comm: 1a.

      -- Method: static __new__ (cls, comm=None)


          Parameters: ‘comm’ (‘Optional’‘[’*note Comm: 1a.‘]’) –


          Return type: *note Comm: 1a.

     Methods Summary
     ...............

     *note Abort: 243.([errorcode])Terminate MPI execution environment
                    
                    
     *note Allgather: 4c.(sendbuf,Gather to All, gather data from all processes and distribute it to all other processes in a
     recvbuf)       group
                    
                    
     *note Allgatherv: 55.(sendbuf,Gather to All Vector, gather data from all processes and distribute it to all other
     recvbuf)       processes in a group providing different amount of data and displacements
                    
                    
     *note Allreduce: 5a.(sendbuf,Reduce to All
     recvbuf[,      
     op])

     *note Alltoall: 4d.(sendbuf,All to All Scatter/Gather, send data from all to all processes in a group
     recvbuf)       

     *note Alltoallv: 56.(sendbuf,All to All Scatter/Gather Vector, send data from all to all processes in a group providing
     recvbuf)       different amount of data and displacements
                    
                    
     *note Alltoallw: 57.(sendbuf,Generalized All-to-All communication allowing different counts, displacements and datatypes
     recvbuf)       for each partner
                    
                    
     *note Barrier: 244.()Barrier synchronization
                    
                    
     *note Bcast: 49.(buf[,Broadcast a message from one process to all other processes in a group
     root])         

     *note Bsend: 245.(buf,Blocking send in buffered mode
     dest[, tag])   

     *note Bsend_init: 246.(buf,Persistent request for a send in buffered mode
     dest[, tag])   

     *note Call_errhandler: 247.(errorcode)Call the error handler installed on a communicator
                    
                    
     *note Clone: 2a.()Clone an existing communicator
                    
                    
     *note Compare: 248.(comm1,Compare two communicators
     comm2)         

     *note Create: 28.(group)Create communicator from group
                    
                    
     *note Create_group: 29.(group[,Create communicator from group
     tag])          

     *note Create_keyval: 249.([copy_fn,Create a new attribute key for communicators
     delete_fn,     
     nopython])

     *note Delete_attr: 24a.(keyval)Delete attribute value associated with a key
                    
                    
     *note Disconnect: 6e.()Disconnect from a communicator
                    
                    
     *note Dup: 2b.([info])Duplicate an existing communicator
                    
                    
     *note Dup_with_info: 24b.(info)Duplicate an existing communicator
                    
                    
     *note Free: 24c.()Free a communicator
                    
                    
     *note Free_keyval: 24d.(keyval)Free an attribute key for communicators
                    
                    
     *note Gather: 4b.(sendbuf,Gather together values from a group of processes
     recvbuf[,      
     root])

     *note Gatherv: 54.(sendbuf,Gather Vector, gather data to one process from all other processes in a group providing
     recvbuf[,      different amount of data and displacements at the receiving sides
     root])         

     *note Get_attr: 90.(keyval)Retrieve attribute value by key
                    
                    
     *note Get_errhandler: 98.()Get the error handler for a communicator
                    
                    
     *note Get_group: 23.()Access the group associated with a communicator
                    
                    
     *note Get_info: 24e.()Return the hints for a communicator that are currently in use
                    
                    
     *note Get_name: 24f.()Get the print name for this communicator
                    
                    
     *note Get_parent: 68.()Return the parent intercommunicator for this process
                    
                    
     *note Get_rank: 22.()Return the rank of this process in a communicator
                    
                    
     *note Get_size: 21.()Return the number of processes in a communicator
                    
                    
     *note Get_topology: 250.()Determine the type of topology (if any) associated with a communicator
                    
                    
     *note Iallgather: 251.(sendbuf,Nonblocking Gather to All
     recvbuf)       

     *note Iallgatherv: 252.(sendbuf,Nonblocking Gather to All Vector
     recvbuf)       

     *note Iallreduce: 253.(sendbuf,Nonblocking Reduce to All
     recvbuf[,      
     op])

     *note Ialltoall: 254.(sendbuf,Nonblocking All to All Scatter/Gather
     recvbuf)       

     *note Ialltoallv: 255.(sendbuf,Nonblocking All to All Scatter/Gather Vector
     recvbuf)       

     *note Ialltoallw: 256.(sendbuf,Nonblocking Generalized All-to-All
     recvbuf)       

     *note Ibarrier: 257.()Nonblocking Barrier
                    
                    
     *note Ibcast: 258.(buf[,Nonblocking Broadcast
     root])         

     *note Ibsend: 259.(buf,Nonblocking send in buffered mode
     dest[, tag])   

     *note Idup: 25a.()Nonblocking duplicate an existing communicator
                    
                    
     *note Igather: 25b.(sendbuf,Nonblocking Gather
     recvbuf[,      
     root])

     *note Igatherv: 25c.(sendbuf,Nonblocking Gather Vector
     recvbuf[,      
     root])

     *note Improbe: 25d.([source,Nonblocking test for a matched message
     tag,           
     status])

     *note Iprobe: 25e.([source,Nonblocking test for a message
     tag,           
     status])

     *note Irecv: 3e.(buf[,Nonblocking receive
     source,        
     tag])

     *note Ireduce: 25f.(sendbuf,Nonblocking Reduce to Root
     recvbuf[,      
     op, root])

     *note Ireduce_scatter: 260.(sendbuf,Nonblocking Reduce-Scatter (vector version)
     recvbuf[,      
     …])

     *note Ireduce_scatter_block: 261.(sendbuf,Nonblocking Reduce-Scatter Block (regular, non-vector version)
     recvbuf[,      
     op])

     *note Irsend: 262.(buf,Nonblocking send in ready mode
     dest[, tag])   

     *note Is_inter: 1d.()Test to see if a comm is an intercommunicator
                    
                    
     *note Is_intra: 1e.()Test to see if a comm is an intracommunicator
                    
                    
     *note Iscatter: 263.(sendbuf,Nonblocking Scatter
     recvbuf[,      
     root])

     *note Iscatterv: 264.(sendbuf,Nonblocking Scatter Vector
     recvbuf[,      
     root])

     *note Isend: 3d.(buf,Nonblocking send
     dest[, tag])   

     *note Issend: 265.(buf,Nonblocking send in synchronous mode
     dest[, tag])   

     *note Join: 266.(fd)Create a intercommunicator by joining two processes connected by a socket
                    
                    
     *note Mprobe: 267.([source,Blocking test for a matched message
     tag,           
     status])

     *note Probe: 268.([source,Blocking test for a message
     tag,           
     status])

     *note Recv: 37.(buf[,Blocking receive
     source, tag,   
     status])

     *note Recv_init: 45.(buf[,Create a persistent request for a receive
     source,        
     tag])

     *note Reduce: 58.(sendbuf,Reduce to Root
     recvbuf[,      
     op, root])

     *note Reduce_scatter: 59.(sendbuf,Reduce-Scatter (vector version)
     recvbuf[,      
     …])

     *note Reduce_scatter_block: 269.(sendbuf,Reduce-Scatter Block (regular, non-vector version)
     recvbuf[,      
     op])

     *note Rsend: 26a.(buf,Blocking send in ready mode
     dest[, tag])   

     *note Rsend_init: 26b.(buf,Persistent request for a send in ready mode
     dest[, tag])   

     *note Scatter: 4a.(sendbuf,Scatter data from one process to all other processes in a group
     recvbuf[,      
     root])

     *note Scatterv: 53.(sendbuf,Scatter Vector, scatter data from one process to all other processes in a group providing
     recvbuf[,      different amount of data and displacements at the sending side
     root])         

     *note Send: 36.(buf,Blocking send
     dest[, tag])   

     *note Send_init: 44.(buf,Create a persistent request for a standard send
     dest[, tag])   

     *note Sendrecv: 38.(sendbuf,Send and receive a message
     dest[,         
     sendtag,
     recvbuf, …])

     *note Sendrecv_replace: 26c.(buf,Send and receive a message
     dest[,         
     sendtag, …])

     *note Set_attr: 26d.(keyval,Store attribute value associated with a key
     attrval)       

     *note Set_errhandler: 97.(errhandler)Set the error handler for a communicator
                    
                    
     *note Set_info: 26e.(info)Set new values for the hints associated with a communicator
                    
                    
     *note Set_name: 26f.(name)Set the print name for this communicator
                    
                    
     *note Split: 2c.([color,Split communicator by color and key
     key])          

     *note Split_type: 270.(split_type[,Split communicator by split type
     key, info])    

     *note Ssend: 271.(buf,Blocking send in synchronous mode
     dest[, tag])   

     *note Ssend_init: 272.(buf,Persistent request for a send in synchronous mode
     dest[, tag])   

     *note allgather: 51.(sendobj)Gather to All
                    
                    
     *note allreduce: 5e.(sendobj[,Reduce to All
     op])           

     *note alltoall: 52.(sendobj)All to All Scatter/Gather
                    
                    
     *note barrier: 273.()Barrier
                    
                    
     *note bcast: 4e.(obj[,Broadcast
     root])         

     *note bsend: 274.(obj,Send in buffered mode
     dest[, tag])   

     *note f2py: 275.(arg)

     *note gather: 50.(sendobj[,Gather
     root])         

     *note ibsend: 276.(obj,Nonblocking send in buffered mode
     dest[, tag])   

     *note improbe: 277.([source,Nonblocking test for a matched message
     tag,           
     status])

     *note iprobe: 278.([source,Nonblocking test for a message
     tag,           
     status])

     *note irecv: 9d.([buf,Nonblocking receive
     source,        
     tag])

     *note isend: 9c.(obj,Nonblocking send
     dest[, tag])   

     *note issend: 279.(obj,Nonblocking send in synchronous mode
     dest[, tag])   

     *note mprobe: 27a.([source,Blocking test for a matched message
     tag,           
     status])

     *note probe: 27b.([source,Blocking test for a message
     tag,           
     status])

     *note py2f: 27c.()

     *note recv: 3a.([buf,Receive
     source, tag,   
     status])

     *note reduce: 5d.(sendobj[,Reduce to Root
     op, root])     

     *note scatter: 4f.(sendobj[,Scatter
     root])         

     *note send: 39.(obj,Send
     dest[, tag])   

     *note sendrecv: 3b.(sendobj,Send and Receive
     dest[,         
     sendtag,
     recvbuf, …])

     *note ssend: 27d.(obj,Send in synchronous mode
     dest[, tag])   

     Attributes Summary
     ..................

     *note group: 27e.communicator group
                    
                    
     *note info: 27f.communicator info
                    
                    
     *note is_inter: 280.is intercommunicator
                    
                    
     *note is_intra: 281.is intracommunicator
                    
                    
     *note is_topo: 282.is a topology communicator
                    
                    
     *note name: 283.communicator name
                    
                    
     *note rank: 284.rank of this process in communicator
                    
                    
     *note size: a0.number of processes in communicator
                    
                    
     *note topology: 285.communicator topology type
                    

     Methods Documentation
     .....................

      -- Method: Abort (errorcode=0)

          Terminate MPI execution environment

               Warning: This is a direct call, use it with care!!!.


          Parameters: ‘errorcode’ (int(2)) –


          Return type: NoReturn

      -- Method: Allgather (sendbuf, recvbuf)

          Gather to All, gather data from all processes and distribute
          it to all other processes in a group


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecB’) –


          Return type: None(3)

      -- Method: Allgatherv (sendbuf, recvbuf)

          Gather to All Vector, gather data from all processes and
          distribute it to all other processes in a group providing
          different amount of data and displacements


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecV’) –


          Return type: None(4)

      -- Method: Allreduce (sendbuf, recvbuf, op=SUM)

          Reduce to All


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpec’) –

             * ‘op’ (*note Op: ca.) –


          Return type: None(5)

      -- Method: Alltoall (sendbuf, recvbuf)

          All to All Scatter/Gather, send data from all to all processes
          in a group


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpecB’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecB’) –


          Return type: None(6)

      -- Method: Alltoallv (sendbuf, recvbuf)

          All to All Scatter/Gather Vector, send data from all to all
          processes in a group providing different amount of data and
          displacements


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpecV’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecV’) –


          Return type: None(7)

      -- Method: Alltoallw (sendbuf, recvbuf)

          Generalized All-to-All communication allowing different
          counts, displacements and datatypes for each partner


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpecW’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecW’) –


          Return type: None(8)

      -- Method: Barrier ()

          Barrier synchronization


          Return type: None(9)

      -- Method: Bcast (buf, root=0)

          Broadcast a message from one process to all other processes in
          a group


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘root’ (int(10)) –


          Return type: None(11)

      -- Method: Bsend (buf, dest, tag=0)

          Blocking send in buffered mode


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(12)) –

             * ‘tag’ (int(13)) –


          Return type: None(14)

      -- Method: Bsend_init (buf, dest, tag=0)

          Persistent request for a send in buffered mode


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(15)) –

             * ‘tag’ (int(16)) –


          Return type: *note Request: 3f.

      -- Method: Call_errhandler (errorcode)

          Call the error handler installed on a communicator


          Parameters: ‘errorcode’ (int(17)) –


          Return type: None(18)

      -- Method: Clone ()

          Clone an existing communicator


          Return type: *note Comm: 1a.

      -- Method: classmethod Compare (comm1, comm2)

          Compare two communicators


          Parameters:

             * ‘comm1’ (*note Comm: 1a.) –

             * ‘comm2’ (*note Comm: 1a.) –


          Return type: int(19)

      -- Method: Create (group)

          Create communicator from group


          Parameters: ‘group’ (*note Group: 24.) –


          Return type: *note Comm: 1a.

      -- Method: Create_group (group, tag=0)

          Create communicator from group


          Parameters:

             * ‘group’ (*note Group: 24.) –

             * ‘tag’ (int(20)) –


          Return type: *note Comm: 1a.

      -- Method: classmethod Create_keyval (copy_fn=None,
               delete_fn=None, nopython=False)

          Create a new attribute key for communicators


          Parameters:

             * ‘copy_fn’ (‘Optional’‘[’‘Callable’‘[’‘[’*note Comm: 1a.‘,
               ’int(21)‘, ’‘Any’‘]’‘, ’‘Any’‘]’‘]’) –

             * ‘delete_fn’ (‘Optional’‘[’‘Callable’‘[’‘[’*note Comm:
               1a.‘, ’int(22)‘, ’‘Any’‘]’‘, ’None(23)‘]’‘]’) –

             * ‘nopython’ (bool(24)) –


          Return type: int(25)

      -- Method: Delete_attr (keyval)

          Delete attribute value associated with a key


          Parameters: ‘keyval’ (int(26)) –


          Return type: None(27)

      -- Method: Disconnect ()

          Disconnect from a communicator


          Return type: None(28)

      -- Method: Dup (info=None)

          Duplicate an existing communicator


          Parameters: ‘info’ (‘Optional’‘[’*note Info: cb.‘]’) –


          Return type: *note Comm: 1a.

      -- Method: Dup_with_info (info)

          Duplicate an existing communicator


          Parameters: ‘info’ (*note Info: cb.) –


          Return type: *note Comm: 1a.

      -- Method: Free ()

          Free a communicator


          Return type: None(29)

      -- Method: classmethod Free_keyval (keyval)

          Free an attribute key for communicators


          Parameters: ‘keyval’ (int(30)) –


          Return type: int(31)

      -- Method: Gather (sendbuf, recvbuf, root=0)

          Gather together values from a group of processes


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘Optional’‘[’‘BufSpecB’‘]’) –

             * ‘root’ (int(32)) –


          Return type: None(33)

      -- Method: Gatherv (sendbuf, recvbuf, root=0)

          Gather Vector, gather data to one process from all other
          processes in a group providing different amount of data and
          displacements at the receiving sides


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘Optional’‘[’‘BufSpecV’‘]’) –

             * ‘root’ (int(34)) –


          Return type: None(35)

      -- Method: Get_attr (keyval)

          Retrieve attribute value by key


          Parameters: ‘keyval’ (int(36)) –


          Return type: Optional[Union[int(37), Any]]

      -- Method: Get_errhandler ()

          Get the error handler for a communicator


          Return type: *note Errhandler: ce.

      -- Method: Get_group ()

          Access the group associated with a communicator


          Return type: *note Group: 24.

      -- Method: Get_info ()

          Return the hints for a communicator that are currently in use


          Return type: *note Info: cb.

      -- Method: Get_name ()

          Get the print name for this communicator


          Return type: str(38)

      -- Method: classmethod Get_parent ()

          Return the parent intercommunicator for this process


          Return type: *note Intercomm: 1c.

      -- Method: Get_rank ()

          Return the rank of this process in a communicator


          Return type: int(39)

      -- Method: Get_size ()

          Return the number of processes in a communicator


          Return type: int(40)

      -- Method: Get_topology ()

          Determine the type of topology (if any) associated with a
          communicator


          Return type: int(41)

      -- Method: Iallgather (sendbuf, recvbuf)

          Nonblocking Gather to All


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecB’) –


          Return type: *note Request: 3f.

      -- Method: Iallgatherv (sendbuf, recvbuf)

          Nonblocking Gather to All Vector


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecV’) –


          Return type: *note Request: 3f.

      -- Method: Iallreduce (sendbuf, recvbuf, op=SUM)

          Nonblocking Reduce to All


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpec’) –

             * ‘op’ (*note Op: ca.) –


          Return type: *note Request: 3f.

      -- Method: Ialltoall (sendbuf, recvbuf)

          Nonblocking All to All Scatter/Gather


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpecB’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecB’) –


          Return type: *note Request: 3f.

      -- Method: Ialltoallv (sendbuf, recvbuf)

          Nonblocking All to All Scatter/Gather Vector


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpecV’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecV’) –


          Return type: *note Request: 3f.

      -- Method: Ialltoallw (sendbuf, recvbuf)

          Nonblocking Generalized All-to-All


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpecW’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpecW’) –


          Return type: *note Request: 3f.

      -- Method: Ibarrier ()

          Nonblocking Barrier


          Return type: *note Request: 3f.

      -- Method: Ibcast (buf, root=0)

          Nonblocking Broadcast


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘root’ (int(42)) –


          Return type: *note Request: 3f.

      -- Method: Ibsend (buf, dest, tag=0)

          Nonblocking send in buffered mode


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(43)) –

             * ‘tag’ (int(44)) –


          Return type: *note Request: 3f.

      -- Method: Idup ()

          Nonblocking duplicate an existing communicator


          Return type: Tuple[*note Comm: 1a, *note Request: 3f.]

      -- Method: Igather (sendbuf, recvbuf, root=0)

          Nonblocking Gather


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘Optional’‘[’‘BufSpecB’‘]’) –

             * ‘root’ (int(45)) –


          Return type: *note Request: 3f.

      -- Method: Igatherv (sendbuf, recvbuf, root=0)

          Nonblocking Gather Vector


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘Optional’‘[’‘BufSpecV’‘]’) –

             * ‘root’ (int(46)) –


          Return type: *note Request: 3f.

      -- Method: Improbe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Nonblocking test for a matched message


          Parameters:

             * ‘source’ (int(47)) –

             * ‘tag’ (int(48)) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: Optional[*note Message: cd.]

      -- Method: Iprobe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Nonblocking test for a message


          Parameters:

             * ‘source’ (int(49)) –

             * ‘tag’ (int(50)) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: bool(51)

      -- Method: Irecv (buf, source=ANY_SOURCE, tag=ANY_TAG)

          Nonblocking receive


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘source’ (int(52)) –

             * ‘tag’ (int(53)) –


          Return type: *note Request: 3f.

      -- Method: Ireduce (sendbuf, recvbuf, op=SUM, root=0)

          Nonblocking Reduce to Root


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘Optional’‘[’‘BufSpec’‘]’) –

             * ‘op’ (*note Op: ca.) –

             * ‘root’ (int(54)) –


          Return type: *note Request: 3f.

      -- Method: Ireduce_scatter (sendbuf, recvbuf, recvcounts=None,
               op=SUM)

          Nonblocking Reduce-Scatter (vector version)


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpec’) –

             * ‘recvcounts’ (‘Optional’‘[’‘Sequence’‘[’int(55)‘]’‘]’) –

             * ‘op’ (*note Op: ca.) –


          Return type: *note Request: 3f.

      -- Method: Ireduce_scatter_block (sendbuf, recvbuf, op=SUM)

          Nonblocking Reduce-Scatter Block (regular, non-vector version)


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpecB’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘BufSpecB’‘]’) –

             * ‘op’ (*note Op: ca.) –


          Return type: *note Request: 3f.

      -- Method: Irsend (buf, dest, tag=0)

          Nonblocking send in ready mode


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(56)) –

             * ‘tag’ (int(57)) –


          Return type: *note Request: 3f.

      -- Method: Is_inter ()

          Test to see if a comm is an intercommunicator


          Return type: bool(58)

      -- Method: Is_intra ()

          Test to see if a comm is an intracommunicator


          Return type: bool(59)

      -- Method: Iscatter (sendbuf, recvbuf, root=0)

          Nonblocking Scatter


          Parameters:

             * ‘sendbuf’ (‘Optional’‘[’‘BufSpecB’‘]’) –

             * ‘recvbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘root’ (int(60)) –


          Return type: *note Request: 3f.

      -- Method: Iscatterv (sendbuf, recvbuf, root=0)

          Nonblocking Scatter Vector


          Parameters:

             * ‘sendbuf’ (‘Optional’‘[’‘BufSpecV’‘]’) –

             * ‘recvbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘root’ (int(61)) –


          Return type: *note Request: 3f.

      -- Method: Isend (buf, dest, tag=0)

          Nonblocking send


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(62)) –

             * ‘tag’ (int(63)) –


          Return type: *note Request: 3f.

      -- Method: Issend (buf, dest, tag=0)

          Nonblocking send in synchronous mode


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(64)) –

             * ‘tag’ (int(65)) –


          Return type: *note Request: 3f.

      -- Method: classmethod Join (fd)

          Create a intercommunicator by joining two processes connected
          by a socket


          Parameters: ‘fd’ (int(66)) –


          Return type: *note Intercomm: 1c.

      -- Method: Mprobe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Blocking test for a matched message


          Parameters:

             * ‘source’ (int(67)) –

             * ‘tag’ (int(68)) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: *note Message: cd.

      -- Method: Probe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Blocking test for a message

               Note: This function blocks until the message arrives.


          Parameters:

             * ‘source’ (int(69)) –

             * ‘tag’ (int(70)) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: Literal[True]

      -- Method: Recv (buf, source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Blocking receive

               Note: This function blocks until the message is received


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘source’ (int(71)) –

             * ‘tag’ (int(72)) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: None(73)

      -- Method: Recv_init (buf, source=ANY_SOURCE, tag=ANY_TAG)

          Create a persistent request for a receive


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘source’ (int(74)) –

             * ‘tag’ (int(75)) –


          Return type: *note Prequest: 46.

      -- Method: Reduce (sendbuf, recvbuf, op=SUM, root=0)

          Reduce to Root


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘Optional’‘[’‘BufSpec’‘]’) –

             * ‘op’ (*note Op: ca.) –

             * ‘root’ (int(76)) –


          Return type: None(77)

      -- Method: Reduce_scatter (sendbuf, recvbuf, recvcounts=None,
               op=SUM)

          Reduce-Scatter (vector version)


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpec’) –

             * ‘recvcounts’ (‘Optional’‘[’‘Sequence’‘[’int(78)‘]’‘]’) –

             * ‘op’ (*note Op: ca.) –


          Return type: None(79)

      -- Method: Reduce_scatter_block (sendbuf, recvbuf, op=SUM)

          Reduce-Scatter Block (regular, non-vector version)


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpecB’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘BufSpecB’‘]’) –

             * ‘op’ (*note Op: ca.) –


          Return type: None(80)

      -- Method: Rsend (buf, dest, tag=0)

          Blocking send in ready mode


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(81)) –

             * ‘tag’ (int(82)) –


          Return type: None(83)

      -- Method: Rsend_init (buf, dest, tag=0)

          Persistent request for a send in ready mode


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(84)) –

             * ‘tag’ (int(85)) –


          Return type: *note Request: 3f.

      -- Method: Scatter (sendbuf, recvbuf, root=0)

          Scatter data from one process to all other processes in a
          group


          Parameters:

             * ‘sendbuf’ (‘Optional’‘[’‘BufSpecB’‘]’) –

             * ‘recvbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘root’ (int(86)) –


          Return type: None(87)

      -- Method: Scatterv (sendbuf, recvbuf, root=0)

          Scatter Vector, scatter data from one process to all other
          processes in a group providing different amount of data and
          displacements at the sending side


          Parameters:

             * ‘sendbuf’ (‘Optional’‘[’‘BufSpecV’‘]’) –

             * ‘recvbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘root’ (int(88)) –


          Return type: None(89)

      -- Method: Send (buf, dest, tag=0)

          Blocking send

               Note: This function may block until the message is
               received.  Whether or not *note Send: 36. blocks depends
               on several factors and is implementation dependent


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(90)) –

             * ‘tag’ (int(91)) –


          Return type: None(92)

      -- Method: Send_init (buf, dest, tag=0)

          Create a persistent request for a standard send


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(93)) –

             * ‘tag’ (int(94)) –


          Return type: *note Prequest: 46.

      -- Method: Sendrecv (sendbuf, dest, sendtag=0, recvbuf=None,
               source=ANY_SOURCE, recvtag=ANY_TAG, status=None)

          Send and receive a message

               Note: This function is guaranteed not to deadlock in
               situations where pairs of blocking sends and receives may
               deadlock.

               Caution: A common mistake when using this function is to
               mismatch the tags with the source and destination ranks,
               which can result in deadlock.


          Parameters:

             * ‘sendbuf’ (‘BufSpec’) –

             * ‘dest’ (int(95)) –

             * ‘sendtag’ (int(96)) –

             * ‘recvbuf’ (‘BufSpec’) –

             * ‘source’ (int(97)) –

             * ‘recvtag’ (int(98)) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: None(99)

      -- Method: Sendrecv_replace (buf, dest, sendtag=0,
               source=ANY_SOURCE, recvtag=ANY_TAG, status=None)

          Send and receive a message

               Note: This function is guaranteed not to deadlock in
               situations where pairs of blocking sends and receives may
               deadlock.

               Caution: A common mistake when using this function is to
               mismatch the tags with the source and destination ranks,
               which can result in deadlock.


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(100)) –

             * ‘sendtag’ (int(101)) –

             * ‘source’ (int(102)) –

             * ‘recvtag’ (int(103)) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: None(104)

      -- Method: Set_attr (keyval, attrval)

          Store attribute value associated with a key


          Parameters:

             * ‘keyval’ (int(105)) –

             * ‘attrval’ (‘Any’) –


          Return type: None(106)

      -- Method: Set_errhandler (errhandler)

          Set the error handler for a communicator


          Parameters: ‘errhandler’ (*note Errhandler: ce.) –


          Return type: None(107)

      -- Method: Set_info (info)

          Set new values for the hints associated with a communicator


          Parameters: ‘info’ (*note Info: cb.) –


          Return type: None(108)

      -- Method: Set_name (name)

          Set the print name for this communicator


          Parameters: ‘name’ (str(109)) –


          Return type: None(110)

      -- Method: Split (color=0, key=0)

          Split communicator by color and key


          Parameters:

             * ‘color’ (int(111)) –

             * ‘key’ (int(112)) –


          Return type: *note Comm: 1a.

      -- Method: Split_type (split_type, key=0, info=INFO_NULL)

          Split communicator by split type


          Parameters:

             * ‘split_type’ (int(113)) –

             * ‘key’ (int(114)) –

             * ‘info’ (*note Info: cb.) –


          Return type: *note Comm: 1a.

      -- Method: Ssend (buf, dest, tag=0)

          Blocking send in synchronous mode


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(115)) –

             * ‘tag’ (int(116)) –


          Return type: None(117)

      -- Method: Ssend_init (buf, dest, tag=0)

          Persistent request for a send in synchronous mode


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘dest’ (int(118)) –

             * ‘tag’ (int(119)) –


          Return type: *note Request: 3f.

      -- Method: allgather (sendobj)

          Gather to All


          Parameters: ‘sendobj’ (‘Any’) –


          Return type: List[Any]

      -- Method: allreduce (sendobj, op=SUM)

          Reduce to All


          Parameters:

             * ‘sendobj’ (‘Any’) –

             * ‘op’ (‘Union’‘[’*note Op: ca.‘, ’‘Callable’‘[’‘[’‘Any’‘,
               ’‘Any’‘]’‘, ’‘Any’‘]’‘]’) –


          Return type: Any

      -- Method: alltoall (sendobj)

          All to All Scatter/Gather


          Parameters: ‘sendobj’ (‘Sequence’‘[’‘Any’‘]’) –


          Return type: List[Any]

      -- Method: barrier ()

          Barrier


          Return type: None(120)

      -- Method: bcast (obj, root=0)

          Broadcast


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘root’ (int(121)) –


          Return type: Any

      -- Method: bsend (obj, dest, tag=0)

          Send in buffered mode


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(122)) –

             * ‘tag’ (int(123)) –


          Return type: None(124)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(125)) –


          Return type: *note Comm: 1a.

      -- Method: gather (sendobj, root=0)

          Gather


          Parameters:

             * ‘sendobj’ (‘Any’) –

             * ‘root’ (int(126)) –


          Return type: Optional[List[Any]]

      -- Method: ibsend (obj, dest, tag=0)

          Nonblocking send in buffered mode


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(127)) –

             * ‘tag’ (int(128)) –


          Return type: *note Request: 3f.

      -- Method: improbe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Nonblocking test for a matched message


          Parameters:

             * ‘source’ (int(129)) –

             * ‘tag’ (int(130)) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: Optional[*note Message: cd.]

      -- Method: iprobe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Nonblocking test for a message


          Parameters:

             * ‘source’ (int(131)) –

             * ‘tag’ (int(132)) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: bool(133)

      -- Method: irecv (buf=None, source=ANY_SOURCE, tag=ANY_TAG)

          Nonblocking receive


          Parameters:

             * ‘buf’ (‘Optional’‘[’‘Buffer’‘]’) –

             * ‘source’ (int(134)) –

             * ‘tag’ (int(135)) –


          Return type: *note Request: 3f.

      -- Method: isend (obj, dest, tag=0)

          Nonblocking send


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(136)) –

             * ‘tag’ (int(137)) –


          Return type: *note Request: 3f.

      -- Method: issend (obj, dest, tag=0)

          Nonblocking send in synchronous mode


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(138)) –

             * ‘tag’ (int(139)) –


          Return type: *note Request: 3f.

      -- Method: mprobe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Blocking test for a matched message


          Parameters:

             * ‘source’ (int(140)) –

             * ‘tag’ (int(141)) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: *note Message: cd.

      -- Method: probe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Blocking test for a message


          Parameters:

             * ‘source’ (int(142)) –

             * ‘tag’ (int(143)) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: Literal[True]

      -- Method: py2f ()


          Return type: int(144)

      -- Method: recv (buf=None, source=ANY_SOURCE, tag=ANY_TAG,
               status=None)

          Receive


          Parameters:

             * ‘buf’ (‘Optional’‘[’‘Buffer’‘]’) –

             * ‘source’ (int(145)) –

             * ‘tag’ (int(146)) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: Any

      -- Method: reduce (sendobj, op=SUM, root=0)

          Reduce to Root


          Parameters:

             * ‘sendobj’ (‘Any’) –

             * ‘op’ (‘Union’‘[’*note Op: ca.‘, ’‘Callable’‘[’‘[’‘Any’‘,
               ’‘Any’‘]’‘, ’‘Any’‘]’‘]’) –

             * ‘root’ (int(147)) –


          Return type: Optional[Any]

      -- Method: scatter (sendobj, root=0)

          Scatter


          Parameters:

             * ‘sendobj’ (‘Sequence’‘[’‘Any’‘]’) –

             * ‘root’ (int(148)) –


          Return type: Any

      -- Method: send (obj, dest, tag=0)

          Send


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(149)) –

             * ‘tag’ (int(150)) –


          Return type: None(151)

      -- Method: sendrecv (sendobj, dest, sendtag=0, recvbuf=None,
               source=ANY_SOURCE, recvtag=ANY_TAG, status=None)

          Send and Receive


          Parameters:

             * ‘sendobj’ (‘Any’) –

             * ‘dest’ (int(152)) –

             * ‘sendtag’ (int(153)) –

             * ‘recvbuf’ (‘Optional’‘[’‘Buffer’‘]’) –

             * ‘source’ (int(154)) –

             * ‘recvtag’ (int(155)) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: Any

      -- Method: ssend (obj, dest, tag=0)

          Send in synchronous mode


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘dest’ (int(156)) –

             * ‘tag’ (int(157)) –


          Return type: None(158)

     Attributes Documentation
     ........................

      -- Attribute: group

          communicator group

      -- Attribute: info

          communicator info

      -- Attribute: is_inter

          is intercommunicator

      -- Attribute: is_intra

          is intracommunicator

      -- Attribute: is_topo

          is a topology communicator

      -- Attribute: name

          communicator name

      -- Attribute: rank

          rank of this process in communicator

      -- Attribute: size

          number of processes in communicator

      -- Attribute: topology

          communicator topology type

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/constants.html#None

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/constants.html#None

   (8) https://docs.python.org/3/library/constants.html#None

   (9) https://docs.python.org/3/library/constants.html#None

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/constants.html#None

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/constants.html#None

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/constants.html#None

   (19) https://docs.python.org/3/library/functions.html#int

   (20) https://docs.python.org/3/library/functions.html#int

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/constants.html#None

   (24) https://docs.python.org/3/library/functions.html#bool

   (25) https://docs.python.org/3/library/functions.html#int

   (26) https://docs.python.org/3/library/functions.html#int

   (27) https://docs.python.org/3/library/constants.html#None

   (28) https://docs.python.org/3/library/constants.html#None

   (29) https://docs.python.org/3/library/constants.html#None

   (30) https://docs.python.org/3/library/functions.html#int

   (31) https://docs.python.org/3/library/functions.html#int

   (32) https://docs.python.org/3/library/functions.html#int

   (33) https://docs.python.org/3/library/constants.html#None

   (34) https://docs.python.org/3/library/functions.html#int

   (35) https://docs.python.org/3/library/constants.html#None

   (36) https://docs.python.org/3/library/functions.html#int

   (37) https://docs.python.org/3/library/functions.html#int

   (38) https://docs.python.org/3/library/stdtypes.html#str

   (39) https://docs.python.org/3/library/functions.html#int

   (40) https://docs.python.org/3/library/functions.html#int

   (41) https://docs.python.org/3/library/functions.html#int

   (42) https://docs.python.org/3/library/functions.html#int

   (43) https://docs.python.org/3/library/functions.html#int

   (44) https://docs.python.org/3/library/functions.html#int

   (45) https://docs.python.org/3/library/functions.html#int

   (46) https://docs.python.org/3/library/functions.html#int

   (47) https://docs.python.org/3/library/functions.html#int

   (48) https://docs.python.org/3/library/functions.html#int

   (49) https://docs.python.org/3/library/functions.html#int

   (50) https://docs.python.org/3/library/functions.html#int

   (51) https://docs.python.org/3/library/functions.html#bool

   (52) https://docs.python.org/3/library/functions.html#int

   (53) https://docs.python.org/3/library/functions.html#int

   (54) https://docs.python.org/3/library/functions.html#int

   (55) https://docs.python.org/3/library/functions.html#int

   (56) https://docs.python.org/3/library/functions.html#int

   (57) https://docs.python.org/3/library/functions.html#int

   (58) https://docs.python.org/3/library/functions.html#bool

   (59) https://docs.python.org/3/library/functions.html#bool

   (60) https://docs.python.org/3/library/functions.html#int

   (61) https://docs.python.org/3/library/functions.html#int

   (62) https://docs.python.org/3/library/functions.html#int

   (63) https://docs.python.org/3/library/functions.html#int

   (64) https://docs.python.org/3/library/functions.html#int

   (65) https://docs.python.org/3/library/functions.html#int

   (66) https://docs.python.org/3/library/functions.html#int

   (67) https://docs.python.org/3/library/functions.html#int

   (68) https://docs.python.org/3/library/functions.html#int

   (69) https://docs.python.org/3/library/functions.html#int

   (70) https://docs.python.org/3/library/functions.html#int

   (71) https://docs.python.org/3/library/functions.html#int

   (72) https://docs.python.org/3/library/functions.html#int

   (73) https://docs.python.org/3/library/constants.html#None

   (74) https://docs.python.org/3/library/functions.html#int

   (75) https://docs.python.org/3/library/functions.html#int

   (76) https://docs.python.org/3/library/functions.html#int

   (77) https://docs.python.org/3/library/constants.html#None

   (78) https://docs.python.org/3/library/functions.html#int

   (79) https://docs.python.org/3/library/constants.html#None

   (80) https://docs.python.org/3/library/constants.html#None

   (81) https://docs.python.org/3/library/functions.html#int

   (82) https://docs.python.org/3/library/functions.html#int

   (83) https://docs.python.org/3/library/constants.html#None

   (84) https://docs.python.org/3/library/functions.html#int

   (85) https://docs.python.org/3/library/functions.html#int

   (86) https://docs.python.org/3/library/functions.html#int

   (87) https://docs.python.org/3/library/constants.html#None

   (88) https://docs.python.org/3/library/functions.html#int

   (89) https://docs.python.org/3/library/constants.html#None

   (90) https://docs.python.org/3/library/functions.html#int

   (91) https://docs.python.org/3/library/functions.html#int

   (92) https://docs.python.org/3/library/constants.html#None

   (93) https://docs.python.org/3/library/functions.html#int

   (94) https://docs.python.org/3/library/functions.html#int

   (95) https://docs.python.org/3/library/functions.html#int

   (96) https://docs.python.org/3/library/functions.html#int

   (97) https://docs.python.org/3/library/functions.html#int

   (98) https://docs.python.org/3/library/functions.html#int

   (99) https://docs.python.org/3/library/constants.html#None

   (100) https://docs.python.org/3/library/functions.html#int

   (101) https://docs.python.org/3/library/functions.html#int

   (102) https://docs.python.org/3/library/functions.html#int

   (103) https://docs.python.org/3/library/functions.html#int

   (104) https://docs.python.org/3/library/constants.html#None

   (105) https://docs.python.org/3/library/functions.html#int

   (106) https://docs.python.org/3/library/constants.html#None

   (107) https://docs.python.org/3/library/constants.html#None

   (108) https://docs.python.org/3/library/constants.html#None

   (109) https://docs.python.org/3/library/stdtypes.html#str

   (110) https://docs.python.org/3/library/constants.html#None

   (111) https://docs.python.org/3/library/functions.html#int

   (112) https://docs.python.org/3/library/functions.html#int

   (113) https://docs.python.org/3/library/functions.html#int

   (114) https://docs.python.org/3/library/functions.html#int

   (115) https://docs.python.org/3/library/functions.html#int

   (116) https://docs.python.org/3/library/functions.html#int

   (117) https://docs.python.org/3/library/constants.html#None

   (118) https://docs.python.org/3/library/functions.html#int

   (119) https://docs.python.org/3/library/functions.html#int

   (120) https://docs.python.org/3/library/constants.html#None

   (121) https://docs.python.org/3/library/functions.html#int

   (122) https://docs.python.org/3/library/functions.html#int

   (123) https://docs.python.org/3/library/functions.html#int

   (124) https://docs.python.org/3/library/constants.html#None

   (125) https://docs.python.org/3/library/functions.html#int

   (126) https://docs.python.org/3/library/functions.html#int

   (127) https://docs.python.org/3/library/functions.html#int

   (128) https://docs.python.org/3/library/functions.html#int

   (129) https://docs.python.org/3/library/functions.html#int

   (130) https://docs.python.org/3/library/functions.html#int

   (131) https://docs.python.org/3/library/functions.html#int

   (132) https://docs.python.org/3/library/functions.html#int

   (133) https://docs.python.org/3/library/functions.html#bool

   (134) https://docs.python.org/3/library/functions.html#int

   (135) https://docs.python.org/3/library/functions.html#int

   (136) https://docs.python.org/3/library/functions.html#int

   (137) https://docs.python.org/3/library/functions.html#int

   (138) https://docs.python.org/3/library/functions.html#int

   (139) https://docs.python.org/3/library/functions.html#int

   (140) https://docs.python.org/3/library/functions.html#int

   (141) https://docs.python.org/3/library/functions.html#int

   (142) https://docs.python.org/3/library/functions.html#int

   (143) https://docs.python.org/3/library/functions.html#int

   (144) https://docs.python.org/3/library/functions.html#int

   (145) https://docs.python.org/3/library/functions.html#int

   (146) https://docs.python.org/3/library/functions.html#int

   (147) https://docs.python.org/3/library/functions.html#int

   (148) https://docs.python.org/3/library/functions.html#int

   (149) https://docs.python.org/3/library/functions.html#int

   (150) https://docs.python.org/3/library/functions.html#int

   (151) https://docs.python.org/3/library/constants.html#None

   (152) https://docs.python.org/3/library/functions.html#int

   (153) https://docs.python.org/3/library/functions.html#int

   (154) https://docs.python.org/3/library/functions.html#int

   (155) https://docs.python.org/3/library/functions.html#int

   (156) https://docs.python.org/3/library/functions.html#int

   (157) https://docs.python.org/3/library/functions.html#int

   (158) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Datatype,  Next: mpi4py MPI Distgraphcomm,  Prev: mpi4py MPI Comm,  Up: mpi4py MPI<2>

9.1.3 mpi4py.MPI.Datatype
-------------------------

 -- Class: mpi4py.MPI.Datatype (datatype=None)

     Bases: object(1)

     Datatype object


     Parameters: ‘datatype’ (‘Optional’‘[’*note Datatype: c7.‘]’) –


     Return type: *note Datatype: c7.

      -- Method: static __new__ (cls, datatype=None)


          Parameters: ‘datatype’ (‘Optional’‘[’*note Datatype: c7.‘]’) –


          Return type: *note Datatype: c7.

     Methods Summary
     ...............

     *note Commit: 289.()Commit the datatype
                    
                    
     *note Create_contiguous: 28a.(count)Create a contiguous datatype
                    
                    
     *note Create_darray: 28b.(size,Create a datatype representing an HPF-like distributed array on Cartesian process grids
     rank,          
     gsizes,
     distribs, …)

     *note Create_f90_complex: 28c.(p,Return a bounded complex datatype
     r)             

     *note Create_f90_integer: 28d.(r)Return a bounded integer datatype
                    
                    
     *note Create_f90_real: 28e.(p,Return a bounded real datatype
     r)             

     *note Create_hindexed: 28f.(blocklengths,Create an indexed datatype with displacements in bytes
     displacements) 

     *note Create_hindexed_block: 290.(blocklength,Create an indexed datatype with constant-sized blocks and displacements in bytes
     displacements) 

     *note Create_hvector: 291.(count,Create a vector (strided) datatype
     blocklength,   
     stride)

     *note Create_indexed: 292.(blocklengths,Create an indexed datatype
     displacements) 

     *note Create_indexed_block: 293.(blocklength,Create an indexed datatype with constant-sized blocks
     displacements) 

     *note Create_keyval: 294.([copy_fn,Create a new attribute key for datatypes
     delete_fn,     
     nopython])

     *note Create_resized: 295.(lb,Create a datatype with a new lower bound and extent
     extent)        

     *note Create_struct: 296.(blocklengths,Create an datatype from a general set of block sizes, displacements and datatypes
     displacements, 
     …)

     *note Create_subarray: 297.(sizes,Create a datatype for a subarray of a regular, multidimensional array
     subsizes,      
     starts[,
     order])

     *note Create_vector: 298.(count,Create a vector (strided) datatype
     blocklength,   
     stride)

     *note Delete_attr: 299.(keyval)Delete attribute value associated with a key
                    
                    
     *note Dup: 29a.()Duplicate a datatype
                    
                    
     *note Free: 29b.()Free the datatype
                    
                    
     *note Free_keyval: 29c.(keyval)Free an attribute key for datatypes
                    
                    
     *note Get_attr: 29d.(keyval)Retrieve attribute value by key
                    
                    
     *note Get_contents: 29e.()Retrieve the actual arguments used in the call that created a datatype
                    
                    
     *note Get_envelope: 29f.()Return information on the number and type of input arguments used in the call that created a
                    datatype
                    
                    
     *note Get_extent: 2a0.()Return lower bound and extent of datatype
                    
                    
     *note Get_name: 2a1.()Get the print name for this datatype
                    
                    
     *note Get_size: 2a2.()Return the number of bytes occupied by entries in the datatype
                    
                    
     *note Get_true_extent: 2a3.()Return the true lower bound and extent of a datatype
                    
                    
     *note Match_size: 2a4.(typeclass,Find a datatype matching a specified size in bytes
     size)          

     *note Pack: 2a5.(inbuf,Pack into contiguous memory according to datatype.
     outbuf,        
     position,
     comm)

     *note Pack_external: 2a6.(datarep,Pack into contiguous memory according to datatype, using a portable data representation
     inbuf,         (`external32').
     outbuf,        
     position)

     *note Pack_external_size: 2a7.(datarep,Return the upper bound on the amount of space (in bytes) needed to pack a message according
     count)         to datatype, using a portable data representation (`external32').
                    
                    
     *note Pack_size: 2a8.(count,Return the upper bound on the amount of space (in bytes) needed to pack a message according
     comm)          to datatype.
                    
                    
     *note Set_attr: 2a9.(keyval,Store attribute value associated with a key
     attrval)       

     *note Set_name: 2aa.(name)Set the print name for this datatype
                    
                    
     *note Unpack: 2ab.(inbuf,Unpack from contiguous memory according to datatype.
     position,      
     outbuf,
     comm)

     *note Unpack_external: 2ac.(datarep,Unpack from contiguous memory according to datatype, using a portable data representation
     inbuf,         (`external32').
     position,      
     outbuf)

     *note decode: 2ad.()Convenience method for decoding a datatype
                    
                    
     *note f2py: 2ae.(arg)

     *note py2f: 2af.()

     Attributes Summary
     ..................

     *note combiner: 2b0.datatype combiner
                    
                    
     *note contents: 2b1.datatype contents
                    
                    
     *note envelope: 2b2.datatype envelope
                    
                    
     *note extent: 2b3.

     *note is_named: 2b4.is a named datatype
                    
                    
     *note is_predefined: 2b5.is a predefined datatype
                    
                    
     *note lb: 2b6. lower bound
                    
                    
     *note name: 2b7.datatype name
                    
                    
     *note size: 2b8.

     *note true_extent: 2b9.true extent
                    
                    
     *note true_lb: 2ba.true lower bound
                    
                    
     *note true_ub: 2bb.true upper bound
                    
                    
     *note ub: 2bc. upper bound
                    

     Methods Documentation
     .....................

      -- Method: Commit ()

          Commit the datatype


          Return type: *note Datatype: c7.

      -- Method: Create_contiguous (count)

          Create a contiguous datatype


          Parameters: ‘count’ (int(2)) –


          Return type: *note Datatype: c7.

      -- Method: Create_darray (size, rank, gsizes, distribs, dargs,
               psizes, order=ORDER_C)

          Create a datatype representing an HPF-like distributed array
          on Cartesian process grids


          Parameters:

             * ‘size’ (int(3)) –

             * ‘rank’ (int(4)) –

             * ‘gsizes’ (‘Sequence’‘[’int(5)‘]’) –

             * ‘distribs’ (‘Sequence’‘[’int(6)‘]’) –

             * ‘dargs’ (‘Sequence’‘[’int(7)‘]’) –

             * ‘psizes’ (‘Sequence’‘[’int(8)‘]’) –

             * ‘order’ (int(9)) –


          Return type: *note Datatype: c7.

      -- Method: classmethod Create_f90_complex (p, r)

          Return a bounded complex datatype


          Parameters:

             * ‘p’ (int(10)) –

             * ‘r’ (int(11)) –


          Return type: *note Datatype: c7.

      -- Method: classmethod Create_f90_integer (r)

          Return a bounded integer datatype


          Parameters: ‘r’ (int(12)) –


          Return type: *note Datatype: c7.

      -- Method: classmethod Create_f90_real (p, r)

          Return a bounded real datatype


          Parameters:

             * ‘p’ (int(13)) –

             * ‘r’ (int(14)) –


          Return type: *note Datatype: c7.

      -- Method: Create_hindexed (blocklengths, displacements)

          Create an indexed datatype with displacements in bytes


          Parameters:

             * ‘blocklengths’ (‘Sequence’‘[’int(15)‘]’) –

             * ‘displacements’ (‘Sequence’‘[’int(16)‘]’) –


          Return type: *note Datatype: c7.

      -- Method: Create_hindexed_block (blocklength, displacements)

          Create an indexed datatype with constant-sized blocks and
          displacements in bytes


          Parameters:

             * ‘blocklength’ (int(17)) –

             * ‘displacements’ (‘Sequence’‘[’int(18)‘]’) –


          Return type: *note Datatype: c7.

      -- Method: Create_hvector (count, blocklength, stride)

          Create a vector (strided) datatype


          Parameters:

             * ‘count’ (int(19)) –

             * ‘blocklength’ (int(20)) –

             * ‘stride’ (int(21)) –


          Return type: *note Datatype: c7.

      -- Method: Create_indexed (blocklengths, displacements)

          Create an indexed datatype


          Parameters:

             * ‘blocklengths’ (‘Sequence’‘[’int(22)‘]’) –

             * ‘displacements’ (‘Sequence’‘[’int(23)‘]’) –


          Return type: *note Datatype: c7.

      -- Method: Create_indexed_block (blocklength, displacements)

          Create an indexed datatype with constant-sized blocks


          Parameters:

             * ‘blocklength’ (int(24)) –

             * ‘displacements’ (‘Sequence’‘[’int(25)‘]’) –


          Return type: *note Datatype: c7.

      -- Method: classmethod Create_keyval (copy_fn=None,
               delete_fn=None, nopython=False)

          Create a new attribute key for datatypes


          Parameters:

             * ‘copy_fn’ (‘Optional’‘[’‘Callable’‘[’‘[’*note Datatype:
               c7.‘, ’int(26)‘, ’‘Any’‘]’‘, ’‘Any’‘]’‘]’) –

             * ‘delete_fn’ (‘Optional’‘[’‘Callable’‘[’‘[’*note Datatype:
               c7.‘, ’int(27)‘, ’‘Any’‘]’‘, ’None(28)‘]’‘]’) –

             * ‘nopython’ (bool(29)) –


          Return type: int(30)

      -- Method: Create_resized (lb, extent)

          Create a datatype with a new lower bound and extent


          Parameters:

             * ‘lb’ (int(31)) –

             * ‘extent’ (int(32)) –


          Return type: *note Datatype: c7.

      -- Method: classmethod Create_struct (blocklengths, displacements,
               datatypes)

          Create an datatype from a general set of block sizes,
          displacements and datatypes


          Parameters:

             * ‘blocklengths’ (‘Sequence’‘[’int(33)‘]’) –

             * ‘displacements’ (‘Sequence’‘[’int(34)‘]’) –

             * ‘datatypes’ (‘Sequence’‘[’*note Datatype: c7.‘]’) –


          Return type: *note Datatype: c7.

      -- Method: Create_subarray (sizes, subsizes, starts,
               order=ORDER_C)

          Create a datatype for a subarray of a regular,
          multidimensional array


          Parameters:

             * ‘sizes’ (‘Sequence’‘[’int(35)‘]’) –

             * ‘subsizes’ (‘Sequence’‘[’int(36)‘]’) –

             * ‘starts’ (‘Sequence’‘[’int(37)‘]’) –

             * ‘order’ (int(38)) –


          Return type: *note Datatype: c7.

      -- Method: Create_vector (count, blocklength, stride)

          Create a vector (strided) datatype


          Parameters:

             * ‘count’ (int(39)) –

             * ‘blocklength’ (int(40)) –

             * ‘stride’ (int(41)) –


          Return type: *note Datatype: c7.

      -- Method: Delete_attr (keyval)

          Delete attribute value associated with a key


          Parameters: ‘keyval’ (int(42)) –


          Return type: None(43)

      -- Method: Dup ()

          Duplicate a datatype


          Return type: *note Datatype: c7.

      -- Method: Free ()

          Free the datatype


          Return type: None(44)

      -- Method: classmethod Free_keyval (keyval)

          Free an attribute key for datatypes


          Parameters: ‘keyval’ (int(45)) –


          Return type: int(46)

      -- Method: Get_attr (keyval)

          Retrieve attribute value by key


          Parameters: ‘keyval’ (int(47)) –


          Return type: Optional[Union[int(48), Any]]

      -- Method: Get_contents ()

          Retrieve the actual arguments used in the call that created a
          datatype


          Return type: Tuple[List[int(49)], List[int(50)], List[*note
          Datatype: c7.]]

      -- Method: Get_envelope ()

          Return information on the number and type of input arguments
          used in the call that created a datatype


          Return type: Tuple[int(51), int(52), int(53), int(54)]

      -- Method: Get_extent ()

          Return lower bound and extent of datatype


          Return type: Tuple[int(55), int(56)]

      -- Method: Get_name ()

          Get the print name for this datatype


          Return type: str(57)

      -- Method: Get_size ()

          Return the number of bytes occupied by entries in the datatype


          Return type: int(58)

      -- Method: Get_true_extent ()

          Return the true lower bound and extent of a datatype


          Return type: Tuple[int(59), int(60)]

      -- Method: classmethod Match_size (typeclass, size)

          Find a datatype matching a specified size in bytes


          Parameters:

             * ‘typeclass’ (int(61)) –

             * ‘size’ (int(62)) –


          Return type: *note Datatype: c7.

      -- Method: Pack (inbuf, outbuf, position, comm)

          Pack into contiguous memory according to datatype.


          Parameters:

             * ‘inbuf’ (‘BufSpec’) –

             * ‘outbuf’ (‘BufSpec’) –

             * ‘position’ (int(63)) –

             * ‘comm’ (*note Comm: 1a.) –


          Return type: int(64)

      -- Method: Pack_external (datarep, inbuf, outbuf, position)

          Pack into contiguous memory according to datatype, using a
          portable data representation (`external32').


          Parameters:

             * ‘datarep’ (str(65)) –

             * ‘inbuf’ (‘BufSpec’) –

             * ‘outbuf’ (‘BufSpec’) –

             * ‘position’ (int(66)) –


          Return type: int(67)

      -- Method: Pack_external_size (datarep, count)

          Return the upper bound on the amount of space (in bytes)
          needed to pack a message according to datatype, using a
          portable data representation (`external32').


          Parameters:

             * ‘datarep’ (str(68)) –

             * ‘count’ (int(69)) –


          Return type: int(70)

      -- Method: Pack_size (count, comm)

          Return the upper bound on the amount of space (in bytes)
          needed to pack a message according to datatype.


          Parameters:

             * ‘count’ (int(71)) –

             * ‘comm’ (*note Comm: 1a.) –


          Return type: int(72)

      -- Method: Set_attr (keyval, attrval)

          Store attribute value associated with a key


          Parameters:

             * ‘keyval’ (int(73)) –

             * ‘attrval’ (‘Any’) –


          Return type: None(74)

      -- Method: Set_name (name)

          Set the print name for this datatype


          Parameters: ‘name’ (str(75)) –


          Return type: None(76)

      -- Method: Unpack (inbuf, position, outbuf, comm)

          Unpack from contiguous memory according to datatype.


          Parameters:

             * ‘inbuf’ (‘BufSpec’) –

             * ‘position’ (int(77)) –

             * ‘outbuf’ (‘BufSpec’) –

             * ‘comm’ (*note Comm: 1a.) –


          Return type: int(78)

      -- Method: Unpack_external (datarep, inbuf, position, outbuf)

          Unpack from contiguous memory according to datatype, using a
          portable data representation (`external32').


          Parameters:

             * ‘datarep’ (str(79)) –

             * ‘inbuf’ (‘BufSpec’) –

             * ‘position’ (int(80)) –

             * ‘outbuf’ (‘BufSpec’) –


          Return type: int(81)

      -- Method: decode ()

          Convenience method for decoding a datatype


          Return type: Tuple[*note Datatype: c7, str(82), Dict[str(83),
          Any]]

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(84)) –


          Return type: *note Datatype: c7.

      -- Method: py2f ()


          Return type: int(85)

     Attributes Documentation
     ........................

      -- Attribute: combiner

          datatype combiner

      -- Attribute: contents

          datatype contents

      -- Attribute: envelope

          datatype envelope

      -- Attribute: extent

      -- Attribute: is_named

          is a named datatype

      -- Attribute: is_predefined

          is a predefined datatype

      -- Attribute: lb

          lower bound

      -- Attribute: name

          datatype name

      -- Attribute: size

      -- Attribute: true_extent

          true extent

      -- Attribute: true_lb

          true lower bound

      -- Attribute: true_ub

          true upper bound

      -- Attribute: ub

          upper bound

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/functions.html#int

   (20) https://docs.python.org/3/library/functions.html#int

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/functions.html#int

   (24) https://docs.python.org/3/library/functions.html#int

   (25) https://docs.python.org/3/library/functions.html#int

   (26) https://docs.python.org/3/library/functions.html#int

   (27) https://docs.python.org/3/library/functions.html#int

   (28) https://docs.python.org/3/library/constants.html#None

   (29) https://docs.python.org/3/library/functions.html#bool

   (30) https://docs.python.org/3/library/functions.html#int

   (31) https://docs.python.org/3/library/functions.html#int

   (32) https://docs.python.org/3/library/functions.html#int

   (33) https://docs.python.org/3/library/functions.html#int

   (34) https://docs.python.org/3/library/functions.html#int

   (35) https://docs.python.org/3/library/functions.html#int

   (36) https://docs.python.org/3/library/functions.html#int

   (37) https://docs.python.org/3/library/functions.html#int

   (38) https://docs.python.org/3/library/functions.html#int

   (39) https://docs.python.org/3/library/functions.html#int

   (40) https://docs.python.org/3/library/functions.html#int

   (41) https://docs.python.org/3/library/functions.html#int

   (42) https://docs.python.org/3/library/functions.html#int

   (43) https://docs.python.org/3/library/constants.html#None

   (44) https://docs.python.org/3/library/constants.html#None

   (45) https://docs.python.org/3/library/functions.html#int

   (46) https://docs.python.org/3/library/functions.html#int

   (47) https://docs.python.org/3/library/functions.html#int

   (48) https://docs.python.org/3/library/functions.html#int

   (49) https://docs.python.org/3/library/functions.html#int

   (50) https://docs.python.org/3/library/functions.html#int

   (51) https://docs.python.org/3/library/functions.html#int

   (52) https://docs.python.org/3/library/functions.html#int

   (53) https://docs.python.org/3/library/functions.html#int

   (54) https://docs.python.org/3/library/functions.html#int

   (55) https://docs.python.org/3/library/functions.html#int

   (56) https://docs.python.org/3/library/functions.html#int

   (57) https://docs.python.org/3/library/stdtypes.html#str

   (58) https://docs.python.org/3/library/functions.html#int

   (59) https://docs.python.org/3/library/functions.html#int

   (60) https://docs.python.org/3/library/functions.html#int

   (61) https://docs.python.org/3/library/functions.html#int

   (62) https://docs.python.org/3/library/functions.html#int

   (63) https://docs.python.org/3/library/functions.html#int

   (64) https://docs.python.org/3/library/functions.html#int

   (65) https://docs.python.org/3/library/stdtypes.html#str

   (66) https://docs.python.org/3/library/functions.html#int

   (67) https://docs.python.org/3/library/functions.html#int

   (68) https://docs.python.org/3/library/stdtypes.html#str

   (69) https://docs.python.org/3/library/functions.html#int

   (70) https://docs.python.org/3/library/functions.html#int

   (71) https://docs.python.org/3/library/functions.html#int

   (72) https://docs.python.org/3/library/functions.html#int

   (73) https://docs.python.org/3/library/functions.html#int

   (74) https://docs.python.org/3/library/constants.html#None

   (75) https://docs.python.org/3/library/stdtypes.html#str

   (76) https://docs.python.org/3/library/constants.html#None

   (77) https://docs.python.org/3/library/functions.html#int

   (78) https://docs.python.org/3/library/functions.html#int

   (79) https://docs.python.org/3/library/stdtypes.html#str

   (80) https://docs.python.org/3/library/functions.html#int

   (81) https://docs.python.org/3/library/functions.html#int

   (82) https://docs.python.org/3/library/stdtypes.html#str

   (83) https://docs.python.org/3/library/stdtypes.html#str

   (84) https://docs.python.org/3/library/functions.html#int

   (85) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Distgraphcomm,  Next: mpi4py MPI Errhandler,  Prev: mpi4py MPI Datatype,  Up: mpi4py MPI<2>

9.1.4 mpi4py.MPI.Distgraphcomm
------------------------------

 -- Class: mpi4py.MPI.Distgraphcomm (comm=None)

     Bases: *note mpi4py.MPI.Topocomm: cc.

     Distributed graph topology intracommunicator


     Parameters: ‘comm’ (‘Optional’‘[’*note Distgraphcomm: 31.‘]’) –


     Return type: *note Distgraphcomm: 31.

      -- Method: static __new__ (cls, comm=None)


          Parameters: ‘comm’ (‘Optional’‘[’*note Distgraphcomm: 31.‘]’)
          –


          Return type: *note Distgraphcomm: 31.

     Methods Summary
     ...............

     *note Get_dist_neighbors: 2c0.()Return adjacency information for a distributed graph topology
                    
                    
     *note Get_dist_neighbors_count: 2c1.()Return adjacency information for a distributed graph topology
                    

     Methods Documentation
     .....................

      -- Method: Get_dist_neighbors ()

          Return adjacency information for a distributed graph topology


          Return type: Tuple[List[int(1)], List[int(2)],
          Optional[Tuple[List[int(3)], List[int(4)]]]]

      -- Method: Get_dist_neighbors_count ()

          Return adjacency information for a distributed graph topology


          Return type: int(5)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Errhandler,  Next: mpi4py MPI File,  Prev: mpi4py MPI Distgraphcomm,  Up: mpi4py MPI<2>

9.1.5 mpi4py.MPI.Errhandler
---------------------------

 -- Class: mpi4py.MPI.Errhandler (errhandler=None)

     Bases: object(1)

     Error handler


     Parameters: ‘errhandler’ (‘Optional’‘[’*note Errhandler: ce.‘]’) –


     Return type: *note Errhandler: ce.

      -- Method: static __new__ (cls, errhandler=None)


          Parameters: ‘errhandler’ (‘Optional’‘[’*note Errhandler:
          ce.‘]’) –


          Return type: *note Errhandler: ce.

     Methods Summary
     ...............

     *note Free: 2c5.()Free an error handler
                    
                    
     *note f2py: 2c6.(arg)

     *note py2f: 2c7.()

     Methods Documentation
     .....................

      -- Method: Free ()

          Free an error handler


          Return type: None(2)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(3)) –


          Return type: *note Errhandler: ce.

      -- Method: py2f ()


          Return type: int(4)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI File,  Next: mpi4py MPI Graphcomm,  Prev: mpi4py MPI Errhandler,  Up: mpi4py MPI<2>

9.1.6 mpi4py.MPI.File
---------------------

 -- Class: mpi4py.MPI.File (file=None)

     Bases: object(1)

     File handle


     Parameters: ‘file’ (‘Optional’‘[’*note File: 80.‘]’) –


     Return type: *note File: 80.

      -- Method: static __new__ (cls, file=None)


          Parameters: ‘file’ (‘Optional’‘[’*note File: 80.‘]’) –


          Return type: *note File: 80.

     Methods Summary
     ...............

     *note Call_errhandler: 2cb.(errorcode)Call the error handler installed on a file
                    
                    
     *note Close: 82.()Close a file
                    
                    
     *note Delete: 83.(filename[,Delete a file
     info])         

     *note Get_amode: 2cc.()Return the file access mode
                    
                    
     *note Get_atomicity: 2cd.()Return the atomicity mode
                    
                    
     *note Get_byte_offset: 2ce.(offset)Return the absolute byte position in the file corresponding to ‘offset’ etypes relative to
                    the current view
                    
                    
     *note Get_errhandler: 2cf.()Get the error handler for a file
                    
                    
     *note Get_group: 2d0.()Return the group of processes that opened the file
                    
                    
     *note Get_info: 2d1.()Return the hints for a file that that are currently in use
                    
                    
     *note Get_position: 2d2.()Return the current position of the individual file pointer in etype units relative to the
                    current view
                    
                    
     *note Get_position_shared: 2d3.()Return the current position of the shared file pointer in etype units relative to the
                    current view
                    
                    
     *note Get_size: 2d4.()Return the file size
                    
                    
     *note Get_type_extent: 2d5.(datatype)Return the extent of datatype in the file
                    
                    
     *note Get_view: 85.()Return the file view
                    
                    
     *note Iread: 2d6.(buf)Nonblocking read using individual file pointer
                    
                    
     *note Iread_all: 2d7.(buf)Nonblocking collective read using individual file pointer
                    
                    
     *note Iread_at: 2d8.(offset,Nonblocking read using explicit offset
     buf)           

     *note Iread_at_all: 2d9.(offset,Nonblocking collective read using explicit offset
     buf)           

     *note Iread_shared: 2da.(buf)Nonblocking read using shared file pointer
                    
                    
     *note Iwrite: 2db.(buf)Nonblocking write using individual file pointer
                    
                    
     *note Iwrite_all: 2dc.(buf)Nonblocking collective write using individual file pointer
                    
                    
     *note Iwrite_at: 2dd.(offset,Nonblocking write using explicit offset
     buf)           

     *note Iwrite_at_all: 2de.(offset,Nonblocking collective write using explicit offset
     buf)           

     *note Iwrite_shared: 2df.(buf)Nonblocking write using shared file pointer
                    
                    
     *note Open: 81.(comm,Open a file
     filename[,     
     amode,
     info])

     *note Preallocate: 2e0.(size)Preallocate storage space for a file
                    
                    
     *note Read: 2e1.(buf[,Read using individual file pointer
     status])       

     *note Read_all: 2e2.(buf[,Collective read using individual file pointer
     status])       

     *note Read_all_begin: 2e3.(buf)Start a split collective read using individual file pointer
                    
                    
     *note Read_all_end: 2e4.(buf[,Complete a split collective read using individual file pointer
     status])       

     *note Read_at: 2e5.(offset,Read using explicit offset
     buf[,          
     status])

     *note Read_at_all: 2e6.(offset,Collective read using explicit offset
     buf[,          
     status])

     *note Read_at_all_begin: 2e7.(offset,Start a split collective read using explict offset
     buf)           

     *note Read_at_all_end: 2e8.(buf[,Complete a split collective read using explict offset
     status])       

     *note Read_ordered: 2e9.(buf[,Collective read using shared file pointer
     status])       

     *note Read_ordered_begin: 2ea.(buf)Start a split collective read using shared file pointer
                    
                    
     *note Read_ordered_end: 2eb.(buf[,Complete a split collective read using shared file pointer
     status])       

     *note Read_shared: 2ec.(buf[,Read using shared file pointer
     status])       

     *note Seek: 2ed.(offset[,Update the individual file pointer
     whence])       

     *note Seek_shared: 2ee.(offset[,Update the shared file pointer
     whence])       

     *note Set_atomicity: 2ef.(flag)Set the atomicity mode
                    
                    
     *note Set_errhandler: 2f0.(errhandler)Set the error handler for a file
                    
                    
     *note Set_info: 2f1.(info)Set new values for the hints associated with a file
                    
                    
     *note Set_size: 2f2.(size)Sets the file size
                    
                    
     *note Set_view: 84.([disp,Set the file view
     etype,         
     filetype,
     datarep,
     info])

     *note Sync: 2f3.()Causes all previous writes to be transferred to the storage device
                    
                    
     *note Write: 2f4.(buf[,Write using individual file pointer
     status])       

     *note Write_all: 2f5.(buf[,Collective write using individual file pointer
     status])       

     *note Write_all_begin: 2f6.(buf)Start a split collective write using individual file pointer
                    
                    
     *note Write_all_end: 2f7.(buf[,Complete a split collective write using individual file pointer
     status])       

     *note Write_at: 2f8.(offset,Write using explicit offset
     buf[,          
     status])

     *note Write_at_all: 2f9.(offset,Collective write using explicit offset
     buf[,          
     status])

     *note Write_at_all_begin: 2fa.(offset,Start a split collective write using explict offset
     buf)           

     *note Write_at_all_end: 2fb.(buf[,Complete a split collective write using explict offset
     status])       

     *note Write_ordered: 2fc.(buf[,Collective write using shared file pointer
     status])       

     *note Write_ordered_begin: 2fd.(buf)Start a split collective write using shared file pointer
                    
                    
     *note Write_ordered_end: 2fe.(buf[,Complete a split collective write using shared file pointer
     status])       

     *note Write_shared: 2ff.(buf[,Write using shared file pointer
     status])       

     *note f2py: 300.(arg)

     *note py2f: 301.()

     Attributes Summary
     ..................

     *note amode: 302.file access mode
                    
                    
     *note atomicity: 303.

     *note group: 304.file group
                    
                    
     *note info: 305.file info
                    
                    
     *note size: 306.file size
                    

     Methods Documentation
     .....................

      -- Method: Call_errhandler (errorcode)

          Call the error handler installed on a file


          Parameters: ‘errorcode’ (int(2)) –


          Return type: None(3)

      -- Method: Close ()

          Close a file


          Return type: None(4)

      -- Method: classmethod Delete (filename, info=INFO_NULL)

          Delete a file


          Parameters:

             * ‘filename’ (str(5)) –

             * ‘info’ (*note Info: cb.) –


          Return type: None(6)

      -- Method: Get_amode ()

          Return the file access mode


          Return type: int(7)

      -- Method: Get_atomicity ()

          Return the atomicity mode


          Return type: bool(8)

      -- Method: Get_byte_offset (offset)

          Return the absolute byte position in the file corresponding to
          ‘offset’ etypes relative to the current view


          Parameters: ‘offset’ (int(9)) –


          Return type: int(10)

      -- Method: Get_errhandler ()

          Get the error handler for a file


          Return type: *note Errhandler: ce.

      -- Method: Get_group ()

          Return the group of processes that opened the file


          Return type: *note Group: 24.

      -- Method: Get_info ()

          Return the hints for a file that that are currently in use


          Return type: *note Info: cb.

      -- Method: Get_position ()

          Return the current position of the individual file pointer in
          etype units relative to the current view


          Return type: int(11)

      -- Method: Get_position_shared ()

          Return the current position of the shared file pointer in
          etype units relative to the current view


          Return type: int(12)

      -- Method: Get_size ()

          Return the file size


          Return type: int(13)

      -- Method: Get_type_extent (datatype)

          Return the extent of datatype in the file


          Parameters: ‘datatype’ (*note Datatype: c7.) –


          Return type: int(14)

      -- Method: Get_view ()

          Return the file view


          Return type: Tuple[int(15), *note Datatype: c7, *note
          Datatype: c7, str(16)]

      -- Method: Iread (buf)

          Nonblocking read using individual file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: Iread_all (buf)

          Nonblocking collective read using individual file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: Iread_at (offset, buf)

          Nonblocking read using explicit offset


          Parameters:

             * ‘offset’ (int(17)) –

             * ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: Iread_at_all (offset, buf)

          Nonblocking collective read using explicit offset


          Parameters:

             * ‘offset’ (int(18)) –

             * ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: Iread_shared (buf)

          Nonblocking read using shared file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: Iwrite (buf)

          Nonblocking write using individual file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: Iwrite_all (buf)

          Nonblocking collective write using individual file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: Iwrite_at (offset, buf)

          Nonblocking write using explicit offset


          Parameters:

             * ‘offset’ (int(19)) –

             * ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: Iwrite_at_all (offset, buf)

          Nonblocking collective write using explicit offset


          Parameters:

             * ‘offset’ (int(20)) –

             * ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: Iwrite_shared (buf)

          Nonblocking write using shared file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: classmethod Open (comm, filename, amode=MODE_RDONLY,
               info=INFO_NULL)

          Open a file


          Parameters:

             * ‘comm’ (*note Intracomm: 1b.) –

             * ‘filename’ (str(21)) –

             * ‘amode’ (int(22)) –

             * ‘info’ (*note Info: cb.) –


          Return type: *note File: 80.

      -- Method: Preallocate (size)

          Preallocate storage space for a file


          Parameters: ‘size’ (int(23)) –


          Return type: None(24)

      -- Method: Read (buf, status=None)

          Read using individual file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: None(25)

      -- Method: Read_all (buf, status=None)

          Collective read using individual file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: None(26)

      -- Method: Read_all_begin (buf)

          Start a split collective read using individual file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: None(27)

      -- Method: Read_all_end (buf, status=None)

          Complete a split collective read using individual file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: None(28)

      -- Method: Read_at (offset, buf, status=None)

          Read using explicit offset


          Parameters:

             * ‘offset’ (int(29)) –

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: None(30)

      -- Method: Read_at_all (offset, buf, status=None)

          Collective read using explicit offset


          Parameters:

             * ‘offset’ (int(31)) –

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: None(32)

      -- Method: Read_at_all_begin (offset, buf)

          Start a split collective read using explict offset


          Parameters:

             * ‘offset’ (int(33)) –

             * ‘buf’ (‘BufSpec’) –


          Return type: None(34)

      -- Method: Read_at_all_end (buf, status=None)

          Complete a split collective read using explict offset


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: None(35)

      -- Method: Read_ordered (buf, status=None)

          Collective read using shared file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: None(36)

      -- Method: Read_ordered_begin (buf)

          Start a split collective read using shared file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: None(37)

      -- Method: Read_ordered_end (buf, status=None)

          Complete a split collective read using shared file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: None(38)

      -- Method: Read_shared (buf, status=None)

          Read using shared file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: None(39)

      -- Method: Seek (offset, whence=SEEK_SET)

          Update the individual file pointer


          Parameters:

             * ‘offset’ (int(40)) –

             * ‘whence’ (int(41)) –


          Return type: None(42)

      -- Method: Seek_shared (offset, whence=SEEK_SET)

          Update the shared file pointer


          Parameters:

             * ‘offset’ (int(43)) –

             * ‘whence’ (int(44)) –


          Return type: None(45)

      -- Method: Set_atomicity (flag)

          Set the atomicity mode


          Parameters: ‘flag’ (bool(46)) –


          Return type: None(47)

      -- Method: Set_errhandler (errhandler)

          Set the error handler for a file


          Parameters: ‘errhandler’ (*note Errhandler: ce.) –


          Return type: None(48)

      -- Method: Set_info (info)

          Set new values for the hints associated with a file


          Parameters: ‘info’ (*note Info: cb.) –


          Return type: None(49)

      -- Method: Set_size (size)

          Sets the file size


          Parameters: ‘size’ (int(50)) –


          Return type: None(51)

      -- Method: Set_view (disp=0, etype=BYTE, filetype=None,
               datarep='native', info=INFO_NULL)

          Set the file view


          Parameters:

             * ‘disp’ (int(52)) –

             * ‘etype’ (*note Datatype: c7.) –

             * ‘filetype’ (‘Optional’‘[’*note Datatype: c7.‘]’) –

             * ‘datarep’ (str(53)) –

             * ‘info’ (*note Info: cb.) –


          Return type: None(54)

      -- Method: Sync ()

          Causes all previous writes to be transferred to the storage
          device


          Return type: None(55)

      -- Method: Write (buf, status=None)

          Write using individual file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: None(56)

      -- Method: Write_all (buf, status=None)

          Collective write using individual file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: None(57)

      -- Method: Write_all_begin (buf)

          Start a split collective write using individual file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: None(58)

      -- Method: Write_all_end (buf, status=None)

          Complete a split collective write using individual file
          pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: None(59)

      -- Method: Write_at (offset, buf, status=None)

          Write using explicit offset


          Parameters:

             * ‘offset’ (int(60)) –

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: None(61)

      -- Method: Write_at_all (offset, buf, status=None)

          Collective write using explicit offset


          Parameters:

             * ‘offset’ (int(62)) –

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: None(63)

      -- Method: Write_at_all_begin (offset, buf)

          Start a split collective write using explict offset


          Parameters:

             * ‘offset’ (int(64)) –

             * ‘buf’ (‘BufSpec’) –


          Return type: None(65)

      -- Method: Write_at_all_end (buf, status=None)

          Complete a split collective write using explict offset


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: None(66)

      -- Method: Write_ordered (buf, status=None)

          Collective write using shared file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: None(67)

      -- Method: Write_ordered_begin (buf)

          Start a split collective write using shared file pointer


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: None(68)

      -- Method: Write_ordered_end (buf, status=None)

          Complete a split collective write using shared file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: None(69)

      -- Method: Write_shared (buf, status=None)

          Write using shared file pointer


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: None(70)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(71)) –


          Return type: *note File: 80.

      -- Method: py2f ()


          Return type: int(72)

     Attributes Documentation
     ........................

      -- Attribute: amode

          file access mode

      -- Attribute: atomicity

      -- Attribute: group

          file group

      -- Attribute: info

          file info

      -- Attribute: size

          file size

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/stdtypes.html#str

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#bool

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/stdtypes.html#str

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/functions.html#int

   (20) https://docs.python.org/3/library/functions.html#int

   (21) https://docs.python.org/3/library/stdtypes.html#str

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/functions.html#int

   (24) https://docs.python.org/3/library/constants.html#None

   (25) https://docs.python.org/3/library/constants.html#None

   (26) https://docs.python.org/3/library/constants.html#None

   (27) https://docs.python.org/3/library/constants.html#None

   (28) https://docs.python.org/3/library/constants.html#None

   (29) https://docs.python.org/3/library/functions.html#int

   (30) https://docs.python.org/3/library/constants.html#None

   (31) https://docs.python.org/3/library/functions.html#int

   (32) https://docs.python.org/3/library/constants.html#None

   (33) https://docs.python.org/3/library/functions.html#int

   (34) https://docs.python.org/3/library/constants.html#None

   (35) https://docs.python.org/3/library/constants.html#None

   (36) https://docs.python.org/3/library/constants.html#None

   (37) https://docs.python.org/3/library/constants.html#None

   (38) https://docs.python.org/3/library/constants.html#None

   (39) https://docs.python.org/3/library/constants.html#None

   (40) https://docs.python.org/3/library/functions.html#int

   (41) https://docs.python.org/3/library/functions.html#int

   (42) https://docs.python.org/3/library/constants.html#None

   (43) https://docs.python.org/3/library/functions.html#int

   (44) https://docs.python.org/3/library/functions.html#int

   (45) https://docs.python.org/3/library/constants.html#None

   (46) https://docs.python.org/3/library/functions.html#bool

   (47) https://docs.python.org/3/library/constants.html#None

   (48) https://docs.python.org/3/library/constants.html#None

   (49) https://docs.python.org/3/library/constants.html#None

   (50) https://docs.python.org/3/library/functions.html#int

   (51) https://docs.python.org/3/library/constants.html#None

   (52) https://docs.python.org/3/library/functions.html#int

   (53) https://docs.python.org/3/library/stdtypes.html#str

   (54) https://docs.python.org/3/library/constants.html#None

   (55) https://docs.python.org/3/library/constants.html#None

   (56) https://docs.python.org/3/library/constants.html#None

   (57) https://docs.python.org/3/library/constants.html#None

   (58) https://docs.python.org/3/library/constants.html#None

   (59) https://docs.python.org/3/library/constants.html#None

   (60) https://docs.python.org/3/library/functions.html#int

   (61) https://docs.python.org/3/library/constants.html#None

   (62) https://docs.python.org/3/library/functions.html#int

   (63) https://docs.python.org/3/library/constants.html#None

   (64) https://docs.python.org/3/library/functions.html#int

   (65) https://docs.python.org/3/library/constants.html#None

   (66) https://docs.python.org/3/library/constants.html#None

   (67) https://docs.python.org/3/library/constants.html#None

   (68) https://docs.python.org/3/library/constants.html#None

   (69) https://docs.python.org/3/library/constants.html#None

   (70) https://docs.python.org/3/library/constants.html#None

   (71) https://docs.python.org/3/library/functions.html#int

   (72) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Graphcomm,  Next: mpi4py MPI Grequest,  Prev: mpi4py MPI File,  Up: mpi4py MPI<2>

9.1.7 mpi4py.MPI.Graphcomm
--------------------------

 -- Class: mpi4py.MPI.Graphcomm (comm=None)

     Bases: *note mpi4py.MPI.Topocomm: cc.

     General graph topology intracommunicator


     Parameters: ‘comm’ (‘Optional’‘[’*note Graphcomm: 30.‘]’) –


     Return type: *note Graphcomm: 30.

      -- Method: static __new__ (cls, comm=None)


          Parameters: ‘comm’ (‘Optional’‘[’*note Graphcomm: 30.‘]’) –


          Return type: *note Graphcomm: 30.

     Methods Summary
     ...............

     *note Get_dims: 30a.()Return the number of nodes and edges
                    
                    
     *note Get_neighbors: 30b.(rank)Return list of neighbors of a process
                    
                    
     *note Get_neighbors_count: 30c.(rank)Return number of neighbors of a process
                    
                    
     *note Get_topo: 30d.()Return index and edges
                    

     Attributes Summary
     ..................

     *note dims: 30e.number of nodes and edges
                    
                    
     *note edges: 30f.

     *note index: 310.

     *note nedges: 311.number of edges
                    
                    
     *note neighbors: 312.

     *note nneighbors: 313.number of neighbors
                    
                    
     *note nnodes: 314.number of nodes
                    
                    
     *note topo: 315.topology information
                    

     Methods Documentation
     .....................

      -- Method: Get_dims ()

          Return the number of nodes and edges


          Return type: Tuple[int(1), int(2)]

      -- Method: Get_neighbors (rank)

          Return list of neighbors of a process


          Parameters: ‘rank’ (int(3)) –


          Return type: List[int(4)]

      -- Method: Get_neighbors_count (rank)

          Return number of neighbors of a process


          Parameters: ‘rank’ (int(5)) –


          Return type: int(6)

      -- Method: Get_topo ()

          Return index and edges


          Return type: Tuple[List[int(7)], List[int(8)]]

     Attributes Documentation
     ........................

      -- Attribute: dims

          number of nodes and edges

      -- Attribute: edges

      -- Attribute: index

      -- Attribute: nedges

          number of edges

      -- Attribute: neighbors

      -- Attribute: nneighbors

          number of neighbors

      -- Attribute: nnodes

          number of nodes

      -- Attribute: topo

          topology information

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Grequest,  Next: mpi4py MPI Group,  Prev: mpi4py MPI Graphcomm,  Up: mpi4py MPI<2>

9.1.8 mpi4py.MPI.Grequest
-------------------------

 -- Class: mpi4py.MPI.Grequest (request=None)

     Bases: *note mpi4py.MPI.Request: 3f.

     Generalized request handle


     Parameters: ‘request’ (‘Optional’‘[’*note Grequest: c9.‘]’) –


     Return type: *note Grequest: c9.

      -- Method: static __new__ (cls, request=None)


          Parameters: ‘request’ (‘Optional’‘[’*note Grequest: c9.‘]’) –


          Return type: *note Grequest: c9.

     Methods Summary
     ...............

     *note Complete: 319.()Notify that a user-defined request is complete
                    
                    
     *note Start: 31a.(query_fn,Create and return a user-defined request
     free_fn,       
     cancel_fn[,
     args, …])

     Methods Documentation
     .....................

      -- Method: Complete ()

          Notify that a user-defined request is complete


          Return type: None(1)

      -- Method: classmethod Start (query_fn, free_fn, cancel_fn,
               args=None, kargs=None)

          Create and return a user-defined request


          Parameters:

             * ‘query_fn’ (‘Callable’‘[’‘...’‘, ’None(2)‘]’) –

             * ‘free_fn’ (‘Callable’‘[’‘...’‘, ’None(3)‘]’) –

             * ‘cancel_fn’ (‘Callable’‘[’‘...’‘, ’None(4)‘]’) –

             * ‘args’ (‘Optional’‘[’‘Tuple’‘[’‘Any’‘]’‘]’) –

             * ‘kargs’ (‘Optional’‘[’‘Dict’‘[’str(5)‘, ’‘Any’‘]’‘]’) –


          Return type: *note Grequest: c9.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Group,  Next: mpi4py MPI Info,  Prev: mpi4py MPI Grequest,  Up: mpi4py MPI<2>

9.1.9 mpi4py.MPI.Group
----------------------

 -- Class: mpi4py.MPI.Group (group=None)

     Bases: object(1)

     Group of processes


     Parameters: ‘group’ (‘Optional’‘[’*note Group: 24.‘]’) –


     Return type: *note Group: 24.

      -- Method: static __new__ (cls, group=None)


          Parameters: ‘group’ (‘Optional’‘[’*note Group: 24.‘]’) –


          Return type: *note Group: 24.

     Methods Summary
     ...............

     *note Compare: 31e.(group1,Compare two groups
     group2)        

     *note Difference: 27.(group1,Produce a group from the difference of two existing groups
     group2)        

     *note Dup: 31f.()Duplicate a group
                    
                    
     *note Excl: 320.(ranks)Produce a group by reordering an existing group and taking only unlisted members
                    
                    
     *note Free: 321.()Free a group
                    
                    
     *note Get_rank: 322.()Return the rank of this process in a group
                    
                    
     *note Get_size: 323.()Return the size of a group
                    
                    
     *note Incl: 324.(ranks)Produce a group by reordering an existing group and taking only listed members
                    
                    
     *note Intersection: 26.(group1,Produce a group as the intersection of two existing groups
     group2)        

     *note Range_excl: 325.(ranks)Create a new group by excluding ranges of processes from an existing group
                    
                    
     *note Range_incl: 326.(ranks)Create a new group from ranges of of ranks in an existing group
                    
                    
     *note Translate_ranks: 327.(group1,Translate the ranks of processes in one group to those in another group
     ranks1[,       
     group2])

     *note Union: 25.(group1,Produce a group by combining two existing groups
     group2)        

     *note f2py: 328.(arg)

     *note py2f: 329.()

     Attributes Summary
     ..................

     *note rank: 32a.rank of this process in group
                    
                    
     *note size: 32b.number of processes in group
                    

     Methods Documentation
     .....................

      -- Method: classmethod Compare (group1, group2)

          Compare two groups


          Parameters:

             * ‘group1’ (*note Group: 24.) –

             * ‘group2’ (*note Group: 24.) –


          Return type: int(2)

      -- Method: classmethod Difference (group1, group2)

          Produce a group from the difference of two existing groups


          Parameters:

             * ‘group1’ (*note Group: 24.) –

             * ‘group2’ (*note Group: 24.) –


          Return type: *note Group: 24.

      -- Method: Dup ()

          Duplicate a group


          Return type: *note Group: 24.

      -- Method: Excl (ranks)

          Produce a group by reordering an existing group and taking
          only unlisted members


          Parameters: ‘ranks’ (‘Sequence’‘[’int(3)‘]’) –


          Return type: *note Group: 24.

      -- Method: Free ()

          Free a group


          Return type: None(4)

      -- Method: Get_rank ()

          Return the rank of this process in a group


          Return type: int(5)

      -- Method: Get_size ()

          Return the size of a group


          Return type: int(6)

      -- Method: Incl (ranks)

          Produce a group by reordering an existing group and taking
          only listed members


          Parameters: ‘ranks’ (‘Sequence’‘[’int(7)‘]’) –


          Return type: *note Group: 24.

      -- Method: classmethod Intersection (group1, group2)

          Produce a group as the intersection of two existing groups


          Parameters:

             * ‘group1’ (*note Group: 24.) –

             * ‘group2’ (*note Group: 24.) –


          Return type: *note Group: 24.

      -- Method: Range_excl (ranks)

          Create a new group by excluding ranges of processes from an
          existing group


          Parameters: ‘ranks’ (‘Sequence’‘[’‘Tuple’‘[’int(8)‘, ’int(9)‘,
          ’int(10)‘]’‘]’) –


          Return type: *note Group: 24.

      -- Method: Range_incl (ranks)

          Create a new group from ranges of of ranks in an existing
          group


          Parameters: ‘ranks’ (‘Sequence’‘[’‘Tuple’‘[’int(11)‘,
          ’int(12)‘, ’int(13)‘]’‘]’) –


          Return type: *note Group: 24.

      -- Method: classmethod Translate_ranks (group1, ranks1,
               group2=None)

          Translate the ranks of processes in one group to those in
          another group


          Parameters:

             * ‘group1’ (*note Group: 24.) –

             * ‘ranks1’ (‘Sequence’‘[’int(14)‘]’) –

             * ‘group2’ (‘Optional’‘[’*note Group: 24.‘]’) –


          Return type: List[int(15)]

      -- Method: classmethod Union (group1, group2)

          Produce a group by combining two existing groups


          Parameters:

             * ‘group1’ (*note Group: 24.) –

             * ‘group2’ (*note Group: 24.) –


          Return type: *note Group: 24.

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(16)) –


          Return type: *note Group: 24.

      -- Method: py2f ()


          Return type: int(17)

     Attributes Documentation
     ........................

      -- Attribute: rank

          rank of this process in group

      -- Attribute: size

          number of processes in group

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Info,  Next: mpi4py MPI Intercomm,  Prev: mpi4py MPI Group,  Up: mpi4py MPI<2>

9.1.10 mpi4py.MPI.Info
----------------------

 -- Class: mpi4py.MPI.Info (info=None)

     Bases: object(1)

     Info object


     Parameters: ‘info’ (‘Optional’‘[’*note Info: cb.‘]’) –


     Return type: *note Info: cb.

      -- Method: static __new__ (cls, info=None)


          Parameters: ‘info’ (‘Optional’‘[’*note Info: cb.‘]’) –


          Return type: *note Info: cb.

     Methods Summary
     ...............

     *note Create: 32f.()Create a new, empty info object
                    
                    
     *note Delete: 330.(key)Remove a (key, value) pair from info
                    
                    
     *note Dup: 331.()Duplicate an existing info object, creating a new object, with the same (key, value) pairs
                    and the same ordering of keys
                    
                    
     *note Free: 332.()Free a info object
                    
                    
     *note Get: 333.(key[,Retrieve the value associated with a key
     maxlen])       

     *note Get_nkeys: 334.()Return the number of currently defined keys in info
                    
                    
     *note Get_nthkey: 335.(n)Return the nth defined key in info.
                    
                    
     *note Set: 336.(key,Add the (key, value) pair to info, and overrides the value if a value for the same key was
     value)         previously set
                    
                    
     *note clear: 337.()info clear
                    
                    
     *note copy: 338.()info copy
                    
                    
     *note f2py: 339.(arg)

     *note get: 33a.(key[,info get
     default])      

     *note items: 33b.()info items
                    
                    
     *note keys: 33c.()info keys
                    
                    
     *note pop: 33d.(key,info pop
     *default)      

     *note popitem: 33e.()info popitem
                    
                    
     *note py2f: 33f.()

     *note update: 340.([other])info update
                    
                    
     *note values: 341.()info values
                    

     Methods Documentation
     .....................

      -- Method: classmethod Create ()

          Create a new, empty info object


          Return type: *note Info: cb.

      -- Method: Delete (key)

          Remove a (key, value) pair from info


          Parameters: ‘key’ (str(2)) –


          Return type: None(3)

      -- Method: Dup ()

          Duplicate an existing info object, creating a new object, with
          the same (key, value) pairs and the same ordering of keys


          Return type: *note Info: cb.

      -- Method: Free ()

          Free a info object


          Return type: None(4)

      -- Method: Get (key, maxlen=- 1)

          Retrieve the value associated with a key


          Parameters:

             * ‘key’ (str(5)) –

             * ‘maxlen’ (int(6)) –


          Return type: Optional[str(7)]

      -- Method: Get_nkeys ()

          Return the number of currently defined keys in info


          Return type: int(8)

      -- Method: Get_nthkey (n)

          Return the nth defined key in info.  Keys are numbered in the
          range [0, N) where N is the value returned by *note
          Info.Get_nkeys(): 334.


          Parameters: ‘n’ (int(9)) –


          Return type: str(10)

      -- Method: Set (key, value)

          Add the (key, value) pair to info, and overrides the value if
          a value for the same key was previously set


          Parameters:

             * ‘key’ (str(11)) –

             * ‘value’ (str(12)) –


          Return type: None(13)

      -- Method: clear ()

          info clear


          Return type: None(14)

      -- Method: copy ()

          info copy


          Return type: *note Info: cb.

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(15)) –


          Return type: *note Info: cb.

      -- Method: get (key, default=None)

          info get


          Parameters:

             * ‘key’ (str(16)) –

             * ‘default’ (‘Optional’‘[’str(17)‘]’) –


          Return type: Optional[str(18)]

      -- Method: items ()

          info items


          Return type: List[Tuple[str(19), str(20)]]

      -- Method: keys ()

          info keys


          Return type: List[str(21)]

      -- Method: pop (key, *default)

          info pop


          Parameters:

             * ‘key’ (str(22)) –

             * ‘default’ (str(23)) –


          Return type: str(24)

      -- Method: popitem ()

          info popitem


          Return type: Tuple[str(25), str(26)]

      -- Method: py2f ()


          Return type: int(27)

      -- Method: update (other=(), **kwds)

          info update


          Parameters:

             * ‘other’ (‘Union’‘[’*note Info: cb.‘,
               ’‘Mapping’‘[’str(28)‘, ’str(29)‘]’‘,
               ’‘Iterable’‘[’‘Tuple’‘[’str(30)‘, ’str(31)‘]’‘]’‘]’) –

             * ‘kwds’ (str(32)) –


          Return type: None(33)

      -- Method: values ()

          info values


          Return type: List[str(34)]

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/stdtypes.html#str

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/stdtypes.html#str

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/stdtypes.html#str

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/stdtypes.html#str

   (11) https://docs.python.org/3/library/stdtypes.html#str

   (12) https://docs.python.org/3/library/stdtypes.html#str

   (13) https://docs.python.org/3/library/constants.html#None

   (14) https://docs.python.org/3/library/constants.html#None

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/stdtypes.html#str

   (17) https://docs.python.org/3/library/stdtypes.html#str

   (18) https://docs.python.org/3/library/stdtypes.html#str

   (19) https://docs.python.org/3/library/stdtypes.html#str

   (20) https://docs.python.org/3/library/stdtypes.html#str

   (21) https://docs.python.org/3/library/stdtypes.html#str

   (22) https://docs.python.org/3/library/stdtypes.html#str

   (23) https://docs.python.org/3/library/stdtypes.html#str

   (24) https://docs.python.org/3/library/stdtypes.html#str

   (25) https://docs.python.org/3/library/stdtypes.html#str

   (26) https://docs.python.org/3/library/stdtypes.html#str

   (27) https://docs.python.org/3/library/functions.html#int

   (28) https://docs.python.org/3/library/stdtypes.html#str

   (29) https://docs.python.org/3/library/stdtypes.html#str

   (30) https://docs.python.org/3/library/stdtypes.html#str

   (31) https://docs.python.org/3/library/stdtypes.html#str

   (32) https://docs.python.org/3/library/stdtypes.html#str

   (33) https://docs.python.org/3/library/constants.html#None

   (34) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Intercomm,  Next: mpi4py MPI Intracomm,  Prev: mpi4py MPI Info,  Up: mpi4py MPI<2>

9.1.11 mpi4py.MPI.Intercomm
---------------------------

 -- Class: mpi4py.MPI.Intercomm (comm=None)

     Bases: *note mpi4py.MPI.Comm: 1a.

     Intercommunicator


     Parameters: ‘comm’ (‘Optional’‘[’*note Intercomm: 1c.‘]’) –


     Return type: *note Intercomm: 1c.

      -- Method: static __new__ (cls, comm=None)


          Parameters: ‘comm’ (‘Optional’‘[’*note Intercomm: 1c.‘]’) –


          Return type: *note Intercomm: 1c.

     Methods Summary
     ...............

     *note Get_remote_group: 345.()Access the remote group associated with the inter-communicator
                    
                    
     *note Get_remote_size: 346.()Intercommunicator remote size
                    
                    
     *note Merge: 2e.([high])Merge intercommunicator
                    

     Attributes Summary
     ..................

     *note remote_group: 347.remote group
                    
                    
     *note remote_size: 348.number of remote processes
                    

     Methods Documentation
     .....................

      -- Method: Get_remote_group ()

          Access the remote group associated with the inter-communicator


          Return type: *note Group: 24.

      -- Method: Get_remote_size ()

          Intercommunicator remote size


          Return type: int(1)

      -- Method: Merge (high=False)

          Merge intercommunicator


          Parameters: ‘high’ (bool(2)) –


          Return type: *note Intracomm: 1b.

     Attributes Documentation
     ........................

      -- Attribute: remote_group

          remote group

      -- Attribute: remote_size

          number of remote processes

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#bool


File: mpi4py.info,  Node: mpi4py MPI Intracomm,  Next: mpi4py MPI Message,  Prev: mpi4py MPI Intercomm,  Up: mpi4py MPI<2>

9.1.12 mpi4py.MPI.Intracomm
---------------------------

 -- Class: mpi4py.MPI.Intracomm (comm=None)

     Bases: *note mpi4py.MPI.Comm: 1a.

     Intracommunicator


     Parameters: ‘comm’ (‘Optional’‘[’*note Intracomm: 1b.‘]’) –


     Return type: *note Intracomm: 1b.

      -- Method: static __new__ (cls, comm=None)


          Parameters: ‘comm’ (‘Optional’‘[’*note Intracomm: 1b.‘]’) –


          Return type: *note Intracomm: 1b.

     Methods Summary
     ...............

     *note Accept: 6b.(port_name[,Accept a request to form a new intercommunicator
     info, root])   

     *note Cart_map: 34c.(dims[,Return an optimal placement for the calling process on the physical machine
     periods])      

     *note Connect: 6d.(port_name[,Make a request to form a new intercommunicator
     info, root])   

     *note Create_cart: 32.(dims[,Create cartesian communicator
     periods,       
     reorder])

     *note Create_dist_graph: 34d.(sources,Create distributed graph communicator
     degrees,       
     destinations)

     *note Create_dist_graph_adjacent: 34e.(sources,Create distributed graph communicator
     destinations)  

     *note Create_graph: 33.(index,Create graph communicator
     edges[,        
     reorder])

     *note Create_intercomm: 2d.(local_leader,Create intercommunicator
     peer_comm,     
     …)

     *note Exscan: 5c.(sendbuf,Exclusive Scan
     recvbuf[,      
     op])

     *note Graph_map: 34f.(index,Return an optimal placement for the calling process on the physical machine
     edges)         

     *note Iexscan: 350.(sendbuf,Inclusive Scan
     recvbuf[,      
     op])

     *note Iscan: 351.(sendbuf,Inclusive Scan
     recvbuf[,      
     op])

     *note Scan: 5b.(sendbuf,Inclusive Scan
     recvbuf[,      
     op])

     *note Spawn: 67.(command[,Spawn instances of a single MPI application
     args,          
     maxprocs,
     info, root,
     …])

     *note Spawn_multiple: 352.(command[,Spawn instances of multiple MPI applications
     args,          
     maxprocs,
     …])

     *note exscan: 60.(sendobj[,Exclusive Scan
     op])           

     *note scan: 5f.(sendobj[,Inclusive Scan
     op])           

     Methods Documentation
     .....................

      -- Method: Accept (port_name, info=INFO_NULL, root=0)

          Accept a request to form a new intercommunicator


          Parameters:

             * ‘port_name’ (str(1)) –

             * ‘info’ (*note Info: cb.) –

             * ‘root’ (int(2)) –


          Return type: *note Intercomm: 1c.

      -- Method: Cart_map (dims, periods=None)

          Return an optimal placement for the calling process on the
          physical machine


          Parameters:

             * ‘dims’ (‘Sequence’‘[’int(3)‘]’) –

             * ‘periods’ (‘Optional’‘[’‘Sequence’‘[’bool(4)‘]’‘]’) –


          Return type: int(5)

      -- Method: Connect (port_name, info=INFO_NULL, root=0)

          Make a request to form a new intercommunicator


          Parameters:

             * ‘port_name’ (str(6)) –

             * ‘info’ (*note Info: cb.) –

             * ‘root’ (int(7)) –


          Return type: *note Intercomm: 1c.

      -- Method: Create_cart (dims, periods=None, reorder=False)

          Create cartesian communicator


          Parameters:

             * ‘dims’ (‘Sequence’‘[’int(8)‘]’) –

             * ‘periods’ (‘Optional’‘[’‘Sequence’‘[’bool(9)‘]’‘]’) –

             * ‘reorder’ (bool(10)) –


          Return type: *note Cartcomm: 2f.

      -- Method: Create_dist_graph (sources, degrees, destinations,
               weights=None, info=INFO_NULL, reorder=False)

          Create distributed graph communicator


          Parameters:

             * ‘sources’ (‘Sequence’‘[’int(11)‘]’) –

             * ‘degrees’ (‘Sequence’‘[’int(12)‘]’) –

             * ‘destinations’ (‘Sequence’‘[’int(13)‘]’) –

             * ‘weights’ (‘Optional’‘[’‘Sequence’‘[’int(14)‘]’‘]’) –

             * ‘info’ (*note Info: cb.) –

             * ‘reorder’ (bool(15)) –


          Return type: *note Distgraphcomm: 31.

      -- Method: Create_dist_graph_adjacent (sources, destinations,
               sourceweights=None, destweights=None, info=INFO_NULL,
               reorder=False)

          Create distributed graph communicator


          Parameters:

             * ‘sources’ (‘Sequence’‘[’int(16)‘]’) –

             * ‘destinations’ (‘Sequence’‘[’int(17)‘]’) –

             * ‘sourceweights’ (‘Optional’‘[’‘Sequence’‘[’int(18)‘]’‘]’)
               –

             * ‘destweights’ (‘Optional’‘[’‘Sequence’‘[’int(19)‘]’‘]’) –

             * ‘info’ (*note Info: cb.) –

             * ‘reorder’ (bool(20)) –


          Return type: *note Distgraphcomm: 31.

      -- Method: Create_graph (index, edges, reorder=False)

          Create graph communicator


          Parameters:

             * ‘index’ (‘Sequence’‘[’int(21)‘]’) –

             * ‘edges’ (‘Sequence’‘[’int(22)‘]’) –

             * ‘reorder’ (bool(23)) –


          Return type: *note Graphcomm: 30.

      -- Method: Create_intercomm (local_leader, peer_comm,
               remote_leader, tag=0)

          Create intercommunicator


          Parameters:

             * ‘local_leader’ (int(24)) –

             * ‘peer_comm’ (*note Intracomm: 1b.) –

             * ‘remote_leader’ (int(25)) –

             * ‘tag’ (int(26)) –


          Return type: *note Intercomm: 1c.

      -- Method: Exscan (sendbuf, recvbuf, op=SUM)

          Exclusive Scan


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpec’) –

             * ‘op’ (*note Op: ca.) –


          Return type: None(27)

      -- Method: Graph_map (index, edges)

          Return an optimal placement for the calling process on the
          physical machine


          Parameters:

             * ‘index’ (‘Sequence’‘[’int(28)‘]’) –

             * ‘edges’ (‘Sequence’‘[’int(29)‘]’) –


          Return type: int(30)

      -- Method: Iexscan (sendbuf, recvbuf, op=SUM)

          Inclusive Scan


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpec’) –

             * ‘op’ (*note Op: ca.) –


          Return type: *note Request: 3f.

      -- Method: Iscan (sendbuf, recvbuf, op=SUM)

          Inclusive Scan


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpec’) –

             * ‘op’ (*note Op: ca.) –


          Return type: *note Request: 3f.

      -- Method: Scan (sendbuf, recvbuf, op=SUM)

          Inclusive Scan


          Parameters:

             * ‘sendbuf’ (‘Union’‘[’‘BufSpec’‘, ’‘InPlace’‘]’) –

             * ‘recvbuf’ (‘BufSpec’) –

             * ‘op’ (*note Op: ca.) –


          Return type: None(31)

      -- Method: Spawn (command, args=None, maxprocs=1, info=INFO_NULL,
               root=0, errcodes=None)

          Spawn instances of a single MPI application


          Parameters:

             * ‘command’ (str(32)) –

             * ‘args’ (‘Optional’‘[’‘Sequence’‘[’str(33)‘]’‘]’) –

             * ‘maxprocs’ (int(34)) –

             * ‘info’ (*note Info: cb.) –

             * ‘root’ (int(35)) –

             * ‘errcodes’ (‘Optional’‘[’list(36)‘]’) –


          Return type: *note Intercomm: 1c.

      -- Method: Spawn_multiple (command, args=None, maxprocs=None,
               info=INFO_NULL, root=0, errcodes=None)

          Spawn instances of multiple MPI applications


          Parameters:

             * ‘command’ (‘Sequence’‘[’str(37)‘]’) –

             * ‘args’
               (‘Optional’‘[’‘Sequence’‘[’‘Sequence’‘[’str(38)‘]’‘]’‘]’)
               –

             * ‘maxprocs’ (‘Optional’‘[’‘Sequence’‘[’int(39)‘]’‘]’) –

             * ‘info’ (‘Union’‘[’*note Info: cb.‘, ’‘Sequence’‘[’*note
               Info: cb.‘]’‘]’) –

             * ‘root’ (int(40)) –

             * ‘errcodes’ (‘Optional’‘[’list(41)‘]’) –


          Return type: *note Intercomm: 1c.

      -- Method: exscan (sendobj, op=SUM)

          Exclusive Scan


          Parameters:

             * ‘sendobj’ (‘Any’) –

             * ‘op’ (‘Union’‘[’*note Op: ca.‘, ’‘Callable’‘[’‘[’‘Any’‘,
               ’‘Any’‘]’‘, ’‘Any’‘]’‘]’) –


          Return type: Any

      -- Method: scan (sendobj, op=SUM)

          Inclusive Scan


          Parameters:

             * ‘sendobj’ (‘Any’) –

             * ‘op’ (‘Union’‘[’*note Op: ca.‘, ’‘Callable’‘[’‘[’‘Any’‘,
               ’‘Any’‘]’‘, ’‘Any’‘]’‘]’) –


          Return type: Any

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#bool

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/stdtypes.html#str

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#bool

   (10) https://docs.python.org/3/library/functions.html#bool

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/functions.html#bool

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/functions.html#int

   (20) https://docs.python.org/3/library/functions.html#bool

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/functions.html#bool

   (24) https://docs.python.org/3/library/functions.html#int

   (25) https://docs.python.org/3/library/functions.html#int

   (26) https://docs.python.org/3/library/functions.html#int

   (27) https://docs.python.org/3/library/constants.html#None

   (28) https://docs.python.org/3/library/functions.html#int

   (29) https://docs.python.org/3/library/functions.html#int

   (30) https://docs.python.org/3/library/functions.html#int

   (31) https://docs.python.org/3/library/constants.html#None

   (32) https://docs.python.org/3/library/stdtypes.html#str

   (33) https://docs.python.org/3/library/stdtypes.html#str

   (34) https://docs.python.org/3/library/functions.html#int

   (35) https://docs.python.org/3/library/functions.html#int

   (36) https://docs.python.org/3/library/stdtypes.html#list

   (37) https://docs.python.org/3/library/stdtypes.html#str

   (38) https://docs.python.org/3/library/stdtypes.html#str

   (39) https://docs.python.org/3/library/functions.html#int

   (40) https://docs.python.org/3/library/functions.html#int

   (41) https://docs.python.org/3/library/stdtypes.html#list


File: mpi4py.info,  Node: mpi4py MPI Message,  Next: mpi4py MPI Op,  Prev: mpi4py MPI Intracomm,  Up: mpi4py MPI<2>

9.1.13 mpi4py.MPI.Message
-------------------------

 -- Class: mpi4py.MPI.Message (message=None)

     Bases: object(1)

     Matched message handle


     Parameters: ‘message’ (‘Optional’‘[’*note Message: cd.‘]’) –


     Return type: *note Message: cd.

      -- Method: static __new__ (cls, message=None)


          Parameters: ‘message’ (‘Optional’‘[’*note Message: cd.‘]’) –


          Return type: *note Message: cd.

     Methods Summary
     ...............

     *note Iprobe: 356.(comm[,Nonblocking test for a matched message
     source, tag,   
     status])

     *note Irecv: 357.(buf)Nonblocking receive of matched message
                    
                    
     *note Probe: 358.(comm[,Blocking test for a matched message
     source, tag,   
     status])

     *note Recv: 359.(buf[,Blocking receive of matched message
     status])       

     *note f2py: 35a.(arg)

     *note iprobe: 35b.(comm[,Nonblocking test for a matched message
     source, tag,   
     status])

     *note irecv: 35c.()Nonblocking receive of matched message
                    
                    
     *note probe: 35d.(comm[,Blocking test for a matched message
     source, tag,   
     status])

     *note py2f: 35e.()

     *note recv: 35f.([status])Blocking receive of matched message
                    

     Methods Documentation
     .....................

      -- Method: classmethod Iprobe (comm, source=ANY_SOURCE,
               tag=ANY_TAG, status=None)

          Nonblocking test for a matched message


          Parameters:

             * ‘comm’ (*note Comm: 1a.) –

             * ‘source’ (int(2)) –

             * ‘tag’ (int(3)) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: Optional[*note Message: cd.]

      -- Method: Irecv (buf)

          Nonblocking receive of matched message


          Parameters: ‘buf’ (‘BufSpec’) –


          Return type: *note Request: 3f.

      -- Method: classmethod Probe (comm, source=ANY_SOURCE,
               tag=ANY_TAG, status=None)

          Blocking test for a matched message


          Parameters:

             * ‘comm’ (*note Comm: 1a.) –

             * ‘source’ (int(4)) –

             * ‘tag’ (int(5)) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: *note Message: cd.

      -- Method: Recv (buf, status=None)

          Blocking receive of matched message


          Parameters:

             * ‘buf’ (‘BufSpec’) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: None(6)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(7)) –


          Return type: *note Message: cd.

      -- Method: classmethod iprobe (comm, source=ANY_SOURCE,
               tag=ANY_TAG, status=None)

          Nonblocking test for a matched message


          Parameters:

             * ‘comm’ (*note Comm: 1a.) –

             * ‘source’ (int(8)) –

             * ‘tag’ (int(9)) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: Optional[*note Message: cd.]

      -- Method: irecv ()

          Nonblocking receive of matched message


          Return type: *note Request: 3f.

      -- Method: classmethod probe (comm, source=ANY_SOURCE,
               tag=ANY_TAG, status=None)

          Blocking test for a matched message


          Parameters:

             * ‘comm’ (*note Comm: 1a.) –

             * ‘source’ (int(10)) –

             * ‘tag’ (int(11)) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: *note Message: cd.

      -- Method: py2f ()


          Return type: int(12)

      -- Method: recv (status=None)

          Blocking receive of matched message


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: Any

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Op,  Next: mpi4py MPI Pickle,  Prev: mpi4py MPI Message,  Up: mpi4py MPI<2>

9.1.14 mpi4py.MPI.Op
--------------------

 -- Class: mpi4py.MPI.Op (op=None)

     Bases: object(1)

     Operation object


     Parameters: ‘op’ (‘Optional’‘[’*note Op: ca.‘]’) –


     Return type: *note Op: ca.

      -- Method: static __new__ (cls, op=None)


          Parameters: ‘op’ (‘Optional’‘[’*note Op: ca.‘]’) –


          Return type: *note Op: ca.

     Methods Summary
     ...............

     *note Create: 363.(function[,Create a user-defined operation
     commute])      

     *note Free: 364.()Free the operation
                    
                    
     *note Is_commutative: 365.()Query reduction operations for their commutativity
                    
                    
     *note Reduce_local: 366.(inbuf,Apply a reduction operator to local data
     inoutbuf)      

     *note f2py: 367.(arg)

     *note py2f: 368.()

     Attributes Summary
     ..................

     *note is_commutative: 369.is commutative
                    
                    
     *note is_predefined: 36a.is a predefined operation
                    

     Methods Documentation
     .....................

      -- Method: classmethod Create (function, commute=False)

          Create a user-defined operation


          Parameters:

             * ‘function’ (‘Callable’‘[’‘[’‘Buffer’‘, ’‘Buffer’‘, ’*note
               Datatype: c7.‘]’‘, ’None(2)‘]’) –

             * ‘commute’ (bool(3)) –


          Return type: *note Op: ca.

      -- Method: Free ()

          Free the operation


          Return type: None(4)

      -- Method: Is_commutative ()

          Query reduction operations for their commutativity


          Return type: bool(5)

      -- Method: Reduce_local (inbuf, inoutbuf)

          Apply a reduction operator to local data


          Parameters:

             * ‘inbuf’ (‘BufSpec’) –

             * ‘inoutbuf’ (‘BufSpec’) –


          Return type: None(6)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(7)) –


          Return type: *note Op: ca.

      -- Method: py2f ()


          Return type: int(8)

     Attributes Documentation
     ........................

      -- Attribute: is_commutative

          is commutative

      -- Attribute: is_predefined

          is a predefined operation

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/functions.html#bool

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/functions.html#bool

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Pickle,  Next: mpi4py MPI Prequest,  Prev: mpi4py MPI Op,  Up: mpi4py MPI<2>

9.1.15 mpi4py.MPI.Pickle
------------------------

 -- Class: mpi4py.MPI.Pickle (dumps=None, loads=None, protocol=None)

     Bases: object(1)

     Pickle/unpickle Python objects


     Parameters:

        * ‘dumps’ (‘Optional’‘[’‘Callable’‘[’‘[’‘Any’‘, ’int(2)‘]’‘,
          ’bytes(3)‘]’‘]’) –

        * ‘loads’ (‘Optional’‘[’‘Callable’‘[’‘[’‘Buffer’‘]’‘,
          ’‘Any’‘]’‘]’) –

        * ‘protocol’ (‘Optional’‘[’int(4)‘]’) –


     Return type: None(5)

      -- Method: __init__ (dumps=None, loads=None, protocol=None)


          Parameters:

             * ‘dumps’ (‘Optional’‘[’‘Callable’‘[’‘[’‘Any’‘,
               ’int(6)‘]’‘, ’bytes(7)‘]’‘]’) –

             * ‘loads’ (‘Optional’‘[’‘Callable’‘[’‘[’‘Buffer’‘]’‘,
               ’‘Any’‘]’‘]’) –

             * ‘protocol’ (‘Optional’‘[’int(8)‘]’) –


          Return type: None(9)

     Methods Summary
     ...............

     *note dumps: 36e.(obj[,Serialize object to pickle data stream.
     buffer_callback])

     *note loads: 36f.(data[,Deserialize object from pickle data stream.
     buffers])      

     Attributes Summary
     ..................

     *note PROTOCOL: a2.pickle protocol
                    

     Methods Documentation
     .....................

      -- Method: dumps (obj, buffer_callback=None)

          Serialize object to pickle data stream.


          Parameters:

             * ‘obj’ (‘Any’) –

             * ‘buffer_callback’
               (‘Optional’‘[’‘Callable’‘[’‘[’‘Buffer’‘]’‘, ’‘Any’‘]’‘]’)
               –


          Return type: bytes(10)

      -- Method: loads (data, buffers=None)

          Deserialize object from pickle data stream.


          Parameters:

             * ‘data’ (‘Buffer’) –

             * ‘buffers’ (‘Optional’‘[’‘Iterable’‘[’‘Buffer’‘]’‘]’) –


          Return type: Any

     Attributes Documentation
     ........................

      -- Attribute: PROTOCOL

          pickle protocol

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/stdtypes.html#bytes

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/constants.html#None

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/stdtypes.html#bytes

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/constants.html#None

   (10) https://docs.python.org/3/library/stdtypes.html#bytes


File: mpi4py.info,  Node: mpi4py MPI Prequest,  Next: mpi4py MPI Request,  Prev: mpi4py MPI Pickle,  Up: mpi4py MPI<2>

9.1.16 mpi4py.MPI.Prequest
--------------------------

 -- Class: mpi4py.MPI.Prequest (request=None)

     Bases: *note mpi4py.MPI.Request: 3f.

     Persistent request handle


     Parameters: ‘request’ (‘Optional’‘[’*note Prequest: 46.‘]’) –


     Return type: *note Prequest: 46.

      -- Method: static __new__ (cls, request=None)


          Parameters: ‘request’ (‘Optional’‘[’*note Prequest: 46.‘]’) –


          Return type: *note Prequest: 46.

     Methods Summary
     ...............

     *note Start: 47.()Initiate a communication with a persistent request
                    
                    
     *note Startall: 373.(requests)Start a collection of persistent requests
                    

     Methods Documentation
     .....................

      -- Method: Start ()

          Initiate a communication with a persistent request


          Return type: None(1)

      -- Method: classmethod Startall (requests)

          Start a collection of persistent requests


          Parameters: ‘requests’ (‘List’‘[’*note Prequest: 46.‘]’) –


          Return type: None(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None

   (2) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Request,  Next: mpi4py MPI Status,  Prev: mpi4py MPI Prequest,  Up: mpi4py MPI<2>

9.1.17 mpi4py.MPI.Request
-------------------------

 -- Class: mpi4py.MPI.Request (request=None)

     Bases: object(1)

     Request handle


     Parameters: ‘request’ (‘Optional’‘[’*note Request: 3f.‘]’) –


     Return type: *note Request: 3f.

      -- Method: static __new__ (cls, request=None)


          Parameters: ‘request’ (‘Optional’‘[’*note Request: 3f.‘]’) –


          Return type: *note Request: 3f.

     Methods Summary
     ...............

     *note Cancel: 42.()Cancel a communication request
                    
                    
     *note Free: 377.()Free a communication request
                    
                    
     *note Get_status: 378.([status])Non-destructive test for the completion of a request
                    
                    
     *note Test: 40.([status])Test for the completion of a send or receive
                    
                    
     *note Testall: 379.(requests[,Test for completion of all previously initiated requests
     statuses])     

     *note Testany: 37a.(requests[,Test for completion of any previously initiated request
     status])       

     *note Testsome: 37b.(requests[,Test for completion of some previously initiated requests
     statuses])     

     *note Wait: 41.([status])Wait for a send or receive to complete
                    
                    
     *note Waitall: 37c.(requests[,Wait for all previously initiated requests to complete
     statuses])     

     *note Waitany: 37d.(requests[,Wait for any previously initiated request to complete
     status])       

     *note Waitsome: 37e.(requests[,Wait for some previously initiated requests to complete
     statuses])     

     *note cancel: 37f.()Cancel a communication request
                    
                    
     *note f2py: 380.(arg)

     *note get_status: 381.([status])Non-destructive test for the completion of a request
                    
                    
     *note py2f: 382.()

     *note test: 9e.([status])Test for the completion of a send or receive
                    
                    
     *note testall: 383.(requests[,Test for completion of all previously initiated requests
     statuses])     

     *note testany: 384.(requests[,Test for completion of any previously initiated request
     status])       

     *note testsome: 385.(requests[,Test for completion of some previously initiated requests
     statuses])     

     *note wait: 9f.([status])Wait for a send or receive to complete
                    
                    
     *note waitall: 386.(requests[,Wait for all previously initiated requests to complete
     statuses])     

     *note waitany: 387.(requests[,Wait for any previously initiated request to complete
     status])       

     *note waitsome: 388.(requests[,Wait for some previously initiated requests to complete
     statuses])     

     Methods Documentation
     .....................

      -- Method: Cancel ()

          Cancel a communication request


          Return type: None(2)

      -- Method: Free ()

          Free a communication request


          Return type: None(3)

      -- Method: Get_status (status=None)

          Non-destructive test for the completion of a request


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: bool(4)

      -- Method: Test (status=None)

          Test for the completion of a send or receive


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: bool(5)

      -- Method: classmethod Testall (requests, statuses=None)

          Test for completion of all previously initiated requests


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘statuses’ (‘Optional’‘[’‘List’‘[’*note Status:
               c8.‘]’‘]’) –


          Return type: bool(6)

      -- Method: classmethod Testany (requests, status=None)

          Test for completion of any previously initiated request


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: Tuple[int(7), bool(8)]

      -- Method: classmethod Testsome (requests, statuses=None)

          Test for completion of some previously initiated requests


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘statuses’ (‘Optional’‘[’‘List’‘[’*note Status:
               c8.‘]’‘]’) –


          Return type: Optional[List[int(9)]]

      -- Method: Wait (status=None)

          Wait for a send or receive to complete


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: Literal[True]

      -- Method: classmethod Waitall (requests, statuses=None)

          Wait for all previously initiated requests to complete


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘statuses’ (‘Optional’‘[’‘List’‘[’*note Status:
               c8.‘]’‘]’) –


          Return type: Literal[True]

      -- Method: classmethod Waitany (requests, status=None)

          Wait for any previously initiated request to complete


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: int(10)

      -- Method: classmethod Waitsome (requests, statuses=None)

          Wait for some previously initiated requests to complete


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘statuses’ (‘Optional’‘[’‘List’‘[’*note Status:
               c8.‘]’‘]’) –


          Return type: Optional[List[int(11)]]

      -- Method: cancel ()

          Cancel a communication request


          Return type: None(12)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(13)) –


          Return type: *note Request: 3f.

      -- Method: get_status (status=None)

          Non-destructive test for the completion of a request


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: bool(14)

      -- Method: py2f ()


          Return type: int(15)

      -- Method: test (status=None)

          Test for the completion of a send or receive


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: Tuple[bool(16), Optional[Any]]

      -- Method: classmethod testall (requests, statuses=None)

          Test for completion of all previously initiated requests


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘statuses’ (‘Optional’‘[’‘List’‘[’*note Status:
               c8.‘]’‘]’) –


          Return type: Tuple[bool(17), Optional[List[Any]]]

      -- Method: classmethod testany (requests, status=None)

          Test for completion of any previously initiated request


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: Tuple[int(18), bool(19), Optional[Any]]

      -- Method: classmethod testsome (requests, statuses=None)

          Test for completion of some previously initiated requests


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘statuses’ (‘Optional’‘[’‘List’‘[’*note Status:
               c8.‘]’‘]’) –


          Return type: Tuple[Optional[List[int(20)]],
          Optional[List[Any]]]

      -- Method: wait (status=None)

          Wait for a send or receive to complete


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: Any

      -- Method: classmethod waitall (requests, statuses=None)

          Wait for all previously initiated requests to complete


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘statuses’ (‘Optional’‘[’‘List’‘[’*note Status:
               c8.‘]’‘]’) –


          Return type: List[Any]

      -- Method: classmethod waitany (requests, status=None)

          Wait for any previously initiated request to complete


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: Tuple[int(21), Any]

      -- Method: classmethod waitsome (requests, statuses=None)

          Wait for some previously initiated requests to complete


          Parameters:

             * ‘requests’ (‘Sequence’‘[’*note Request: 3f.‘]’) –

             * ‘statuses’ (‘Optional’‘[’‘List’‘[’*note Status:
               c8.‘]’‘]’) –


          Return type: Tuple[Optional[List[int(22)]],
          Optional[List[Any]]]

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/library/functions.html#bool

   (5) https://docs.python.org/3/library/functions.html#bool

   (6) https://docs.python.org/3/library/functions.html#bool

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#bool

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/constants.html#None

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/functions.html#bool

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/functions.html#bool

   (17) https://docs.python.org/3/library/functions.html#bool

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/functions.html#bool

   (20) https://docs.python.org/3/library/functions.html#int

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Status,  Next: mpi4py MPI Topocomm,  Prev: mpi4py MPI Request,  Up: mpi4py MPI<2>

9.1.18 mpi4py.MPI.Status
------------------------

 -- Class: mpi4py.MPI.Status (status=None)

     Bases: object(1)

     Status object


     Parameters: ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


     Return type: *note Status: c8.

      -- Method: static __new__ (cls, status=None)


          Parameters: ‘status’ (‘Optional’‘[’*note Status: c8.‘]’) –


          Return type: *note Status: c8.

     Methods Summary
     ...............

     *note Get_count: 38c.([datatype])Get the number of `top level' elements
                    
                    
     *note Get_elements: 38d.(datatype)Get the number of basic elements in a datatype
                    
                    
     *note Get_error: 38e.()Get message error
                    
                    
     *note Get_source: 38f.()Get message source
                    
                    
     *note Get_tag: 390.()Get message tag
                    
                    
     *note Is_cancelled: 391.()Test to see if a request was cancelled
                    
                    
     *note Set_cancelled: 392.(flag)Set the cancelled state associated with a status
                    
                    
     *note Set_elements: 393.(datatype,Set the number of elements in a status
     count)         

     *note Set_error: 394.(error)Set message error
                    
                    
     *note Set_source: 395.(source)Set message source
                    
                    
     *note Set_tag: 396.(tag)Set message tag
                    
                    
     *note f2py: 397.(arg)

     *note py2f: 398.()

     Attributes Summary
     ..................

     *note cancelled: 399.cancelled state
                    
                    
     *note count: 39a.byte count
                    
                    
     *note error: 39b.

     *note source: 39c.

     *note tag: 39d.

     Methods Documentation
     .....................

      -- Method: Get_count (datatype=BYTE)

          Get the number of `top level' elements


          Parameters: ‘datatype’ (*note Datatype: c7.) –


          Return type: int(2)

      -- Method: Get_elements (datatype)

          Get the number of basic elements in a datatype


          Parameters: ‘datatype’ (*note Datatype: c7.) –


          Return type: int(3)

      -- Method: Get_error ()

          Get message error


          Return type: int(4)

      -- Method: Get_source ()

          Get message source


          Return type: int(5)

      -- Method: Get_tag ()

          Get message tag


          Return type: int(6)

      -- Method: Is_cancelled ()

          Test to see if a request was cancelled


          Return type: bool(7)

      -- Method: Set_cancelled (flag)

          Set the cancelled state associated with a status

               Note: This should be only used when implementing query
               callback functions for generalized requests


          Parameters: ‘flag’ (bool(8)) –


          Return type: None(9)

      -- Method: Set_elements (datatype, count)

          Set the number of elements in a status

               Note: This should be only used when implementing query
               callback functions for generalized requests


          Parameters:

             * ‘datatype’ (*note Datatype: c7.) –

             * ‘count’ (int(10)) –


          Return type: None(11)

      -- Method: Set_error (error)

          Set message error


          Parameters: ‘error’ (int(12)) –


          Return type: None(13)

      -- Method: Set_source (source)

          Set message source


          Parameters: ‘source’ (int(14)) –


          Return type: None(15)

      -- Method: Set_tag (tag)

          Set message tag


          Parameters: ‘tag’ (int(16)) –


          Return type: None(17)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (‘List’‘[’int(18)‘]’) –


          Return type: *note Status: c8.

      -- Method: py2f ()


          Return type: List[int(19)]

     Attributes Documentation
     ........................

      -- Attribute: cancelled

          cancelled state

      -- Attribute: count

          byte count

      -- Attribute: error

      -- Attribute: source

      -- Attribute: tag

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/functions.html#bool

   (8) https://docs.python.org/3/library/functions.html#bool

   (9) https://docs.python.org/3/library/constants.html#None

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/constants.html#None

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/constants.html#None

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/constants.html#None

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/constants.html#None

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Topocomm,  Next: mpi4py MPI Win,  Prev: mpi4py MPI Status,  Up: mpi4py MPI<2>

9.1.19 mpi4py.MPI.Topocomm
--------------------------

 -- Class: mpi4py.MPI.Topocomm (comm=None)

     Bases: *note mpi4py.MPI.Intracomm: 1b.

     Topology intracommunicator


     Parameters: ‘comm’ (‘Optional’‘[’*note Topocomm: cc.‘]’) –


     Return type: *note Topocomm: cc.

      -- Method: static __new__ (cls, comm=None)


          Parameters: ‘comm’ (‘Optional’‘[’*note Topocomm: cc.‘]’) –


          Return type: *note Topocomm: cc.

     Methods Summary
     ...............

     *note Ineighbor_allgather: 3a1.(sendbuf,Nonblocking Neighbor Gather to All
     recvbuf)       

     *note Ineighbor_allgatherv: 3a2.(sendbuf,Nonblocking Neighbor Gather to All Vector
     recvbuf)       

     *note Ineighbor_alltoall: 3a3.(sendbuf,Nonblocking Neighbor All-to-All
     recvbuf)       

     *note Ineighbor_alltoallv: 3a4.(sendbuf,Nonblocking Neighbor All-to-All Vector
     recvbuf)       

     *note Ineighbor_alltoallw: 3a5.(sendbuf,Nonblocking Neighbor All-to-All Generalized
     recvbuf)       

     *note Neighbor_allgather: 3a6.(sendbuf,Neighbor Gather to All
     recvbuf)       

     *note Neighbor_allgatherv: 3a7.(sendbuf,Neighbor Gather to All Vector
     recvbuf)       

     *note Neighbor_alltoall: 3a8.(sendbuf,Neighbor All-to-All
     recvbuf)       

     *note Neighbor_alltoallv: 3a9.(sendbuf,Neighbor All-to-All Vector
     recvbuf)       

     *note Neighbor_alltoallw: 3aa.(sendbuf,Neighbor All-to-All Generalized
     recvbuf)       

     *note neighbor_allgather: 3ab.(sendobj)Neighbor Gather to All
                    
                    
     *note neighbor_alltoall: 3ac.(sendobj)Neighbor All to All Scatter/Gather
                    

     Attributes Summary
     ..................

     *note degrees: 3ad.number of incoming and outgoing neighbors
                    
                    
     *note indegree: 3ae.number of incoming neighbors
                    
                    
     *note inedges: 3af.incoming neighbors
                    
                    
     *note inoutedges: 3b0.incoming and outgoing neighbors
                    
                    
     *note outdegree: 3b1.number of outgoing neighbors
                    
                    
     *note outedges: 3b2.outgoing neighbors
                    

     Methods Documentation
     .....................

      -- Method: Ineighbor_allgather (sendbuf, recvbuf)

          Nonblocking Neighbor Gather to All


          Parameters:

             * ‘sendbuf’ (‘BufSpec’) –

             * ‘recvbuf’ (‘BufSpecB’) –


          Return type: *note Request: 3f.

      -- Method: Ineighbor_allgatherv (sendbuf, recvbuf)

          Nonblocking Neighbor Gather to All Vector


          Parameters:

             * ‘sendbuf’ (‘BufSpec’) –

             * ‘recvbuf’ (‘BufSpecV’) –


          Return type: *note Request: 3f.

      -- Method: Ineighbor_alltoall (sendbuf, recvbuf)

          Nonblocking Neighbor All-to-All


          Parameters:

             * ‘sendbuf’ (‘BufSpecB’) –

             * ‘recvbuf’ (‘BufSpecB’) –


          Return type: *note Request: 3f.

      -- Method: Ineighbor_alltoallv (sendbuf, recvbuf)

          Nonblocking Neighbor All-to-All Vector


          Parameters:

             * ‘sendbuf’ (‘BufSpecV’) –

             * ‘recvbuf’ (‘BufSpecV’) –


          Return type: *note Request: 3f.

      -- Method: Ineighbor_alltoallw (sendbuf, recvbuf)

          Nonblocking Neighbor All-to-All Generalized


          Parameters:

             * ‘sendbuf’ (‘BufSpecW’) –

             * ‘recvbuf’ (‘BufSpecW’) –


          Return type: *note Request: 3f.

      -- Method: Neighbor_allgather (sendbuf, recvbuf)

          Neighbor Gather to All


          Parameters:

             * ‘sendbuf’ (‘BufSpec’) –

             * ‘recvbuf’ (‘BufSpecB’) –


          Return type: None(1)

      -- Method: Neighbor_allgatherv (sendbuf, recvbuf)

          Neighbor Gather to All Vector


          Parameters:

             * ‘sendbuf’ (‘BufSpec’) –

             * ‘recvbuf’ (‘BufSpecV’) –


          Return type: None(2)

      -- Method: Neighbor_alltoall (sendbuf, recvbuf)

          Neighbor All-to-All


          Parameters:

             * ‘sendbuf’ (‘BufSpecB’) –

             * ‘recvbuf’ (‘BufSpecB’) –


          Return type: None(3)

      -- Method: Neighbor_alltoallv (sendbuf, recvbuf)

          Neighbor All-to-All Vector


          Parameters:

             * ‘sendbuf’ (‘BufSpecV’) –

             * ‘recvbuf’ (‘BufSpecV’) –


          Return type: None(4)

      -- Method: Neighbor_alltoallw (sendbuf, recvbuf)

          Neighbor All-to-All Generalized


          Parameters:

             * ‘sendbuf’ (‘BufSpecW’) –

             * ‘recvbuf’ (‘BufSpecW’) –


          Return type: None(5)

      -- Method: neighbor_allgather (sendobj)

          Neighbor Gather to All


          Parameters: ‘sendobj’ (‘Any’) –


          Return type: List[Any]

      -- Method: neighbor_alltoall (sendobj)

          Neighbor All to All Scatter/Gather


          Parameters: ‘sendobj’ (‘List’‘[’‘Any’‘]’) –


          Return type: List[Any]

     Attributes Documentation
     ........................

      -- Attribute: degrees

          number of incoming and outgoing neighbors

      -- Attribute: indegree

          number of incoming neighbors

      -- Attribute: inedges

          incoming neighbors

      -- Attribute: inoutedges

          incoming and outgoing neighbors

      -- Attribute: outdegree

          number of outgoing neighbors

      -- Attribute: outedges

          outgoing neighbors

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Win,  Next: mpi4py MPI memory,  Prev: mpi4py MPI Topocomm,  Up: mpi4py MPI<2>

9.1.20 mpi4py.MPI.Win
---------------------

 -- Class: mpi4py.MPI.Win (win=None)

     Bases: object(1)

     Window handle


     Parameters: ‘win’ (‘Optional’‘[’*note Win: 72.‘]’) –


     Return type: *note Win: 72.

      -- Method: static __new__ (cls, win=None)


          Parameters: ‘win’ (‘Optional’‘[’*note Win: 72.‘]’) –


          Return type: *note Win: 72.

     Methods Summary
     ...............

     *note Accumulate: 77.(origin,Accumulate data into the target process
     target_rank[,  
     target, op])

     *note Allocate: 3b6.(size[,Create an window object for one-sided communication
     disp_unit,     
     info, comm])

     *note Allocate_shared: 3b7.(size[,Create an window object for one-sided communication
     disp_unit,     
     info, comm])

     *note Attach: 3b8.(memory)Attach a local memory region
                    
                    
     *note Call_errhandler: 3b9.(errorcode)Call the error handler installed on a window
                    
                    
     *note Compare_and_swap: 3ba.(origin,Perform one-sided atomic compare-and-swap
     compare,       
     result, …)

     *note Complete: 79.()Completes an RMA operations begun after an *note Win.Start(): 78.
                    
                    
     *note Create: 73.(memory[,Create an window object for one-sided communication
     disp_unit,     
     info, comm])

     *note Create_dynamic: 3bb.([info,Create an window object for one-sided communication
     comm])         

     *note Create_keyval: 3bc.([copy_fn,Create a new attribute key for windows
     delete_fn,     
     nopython])

     *note Delete_attr: 3bd.(keyval)Delete attribute value associated with a key
                    
                    
     *note Detach: 3be.(memory)Detach a local memory region
                    
                    
     *note Fence: 7c.([assertion])Perform an MPI fence synchronization on a window
                    
                    
     *note Fetch_and_op: 3bf.(origin,Perform one-sided read-modify-write
     result,        
     target_rank[,
     …])

     *note Flush: 3c0.(rank)Complete all outstanding RMA operations at the given target
                    
                    
     *note Flush_all: 3c1.()Complete all outstanding RMA operations at all targets
                    
                    
     *note Flush_local: 3c2.(rank)Complete locally all outstanding RMA operations at the given target
                    
                    
     *note Flush_local_all: 3c3.()Complete locally all outstanding RMA opera- tions at all targets
                    
                    
     *note Free: 74.()Free a window
                    
                    
     *note Free_keyval: 3c4.(keyval)Free an attribute key for windows
                    
                    
     *note Get: 76.(origin,Get data from a memory window on a remote process.
     target_rank[,  
     target])

     *note Get_accumulate: 3c5.(origin,Fetch-and-accumulate data into the target process
     result,        
     target_rank)

     *note Get_attr: 3c6.(keyval)Retrieve attribute value by key
                    
                    
     *note Get_errhandler: 3c7.()Get the error handler for a window
                    
                    
     *note Get_group: 3c8.()Return a duplicate of the group of the communicator used to create the window
                    
                    
     *note Get_info: 3c9.()Return the hints for a windows that are currently in use
                    
                    
     *note Get_name: 3ca.()Get the print name associated with the window
                    
                    
     *note Lock: 7d.(rank[,Begin an RMA access epoch at the target process
     lock_type,     
     assertion])

     *note Lock_all: 3cb.([assertion])Begin an RMA access epoch at all processes
                    
                    
     *note Post: 7a.(group[,Start an RMA exposure epoch
     assertion])    

     *note Put: 75.(origin,Put data into a memory window on a remote process.
     target_rank[,  
     target])

     *note Raccumulate: 3cc.(origin,Fetch-and-accumulate data into the target process
     target_rank[,  
     target, op])

     *note Rget: 3cd.(origin,Get data from a memory window on a remote process.
     target_rank[,  
     target])

     *note Rget_accumulate: 3ce.(origin,Accumulate data into the target process using remote memory access.
     result,        
     target_rank)

     *note Rput: 3cf.(origin,Put data into a memory window on a remote process.
     target_rank[,  
     target])

     *note Set_attr: 3d0.(keyval,Store attribute value associated with a key
     attrval)       

     *note Set_errhandler: 3d1.(errhandler)Set the error handler for a window
                    
                    
     *note Set_info: 3d2.(info)Set new values for the hints associated with a window
                    
                    
     *note Set_name: 3d3.(name)Set the print name associated with the window
                    
                    
     *note Shared_query: 3d4.(rank)Query the process-local address for remote memory segments created with
                    *note Win.Allocate_shared(): 3b7.
                    
                    
     *note Start: 78.(group[,Start an RMA access epoch for MPI
     assertion])    

     *note Sync: 3d5.()Synchronize public and private copies of the given window
                    
                    
     *note Test: 3d6.()Test whether an RMA exposure epoch has completed
                    
                    
     *note Unlock: 7e.(rank)Complete an RMA access epoch at the target process
                    
                    
     *note Unlock_all: 3d7.()Complete an RMA access epoch at all processes
                    
                    
     *note Wait: 7b.()Complete an RMA exposure epoch begun with *note Win.Post(): 7a.
                    
                    
     *note f2py: 3d8.(arg)

     *note py2f: 3d9.()

     *note tomemory: 3da.()Return window memory buffer
                    

     Attributes Summary
     ..................

     *note attrs: 3db.window attributes
                    
                    
     *note flavor: 3dc.window create flavor
                    
                    
     *note group: 3dd.window group
                    
                    
     *note info: 3de.window info
                    
                    
     *note model: 3df.window memory model
                    
                    
     *note name: 3e0.window name
                    

     Methods Documentation
     .....................

      -- Method: Accumulate (origin, target_rank, target=None, op=SUM)

          Accumulate data into the target process


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘target_rank’ (int(2)) –

             * ‘target’ (‘Optional’‘[’‘TargetSpec’‘]’) –

             * ‘op’ (*note Op: ca.) –


          Return type: None(3)

      -- Method: classmethod Allocate (size, disp_unit=1,
               info=INFO_NULL, comm=COMM_SELF)

          Create an window object for one-sided communication


          Parameters:

             * ‘size’ (int(4)) –

             * ‘disp_unit’ (int(5)) –

             * ‘info’ (*note Info: cb.) –

             * ‘comm’ (*note Intracomm: 1b.) –


          Return type: *note Win: 72.

      -- Method: classmethod Allocate_shared (size, disp_unit=1,
               info=INFO_NULL, comm=COMM_SELF)

          Create an window object for one-sided communication


          Parameters:

             * ‘size’ (int(6)) –

             * ‘disp_unit’ (int(7)) –

             * ‘info’ (*note Info: cb.) –

             * ‘comm’ (*note Intracomm: 1b.) –


          Return type: *note Win: 72.

      -- Method: Attach (memory)

          Attach a local memory region


          Parameters: ‘memory’ (‘Buffer’) –


          Return type: None(8)

      -- Method: Call_errhandler (errorcode)

          Call the error handler installed on a window


          Parameters: ‘errorcode’ (int(9)) –


          Return type: None(10)

      -- Method: Compare_and_swap (origin, compare, result, target_rank,
               target_disp=0)

          Perform one-sided atomic compare-and-swap


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘compare’ (‘BufSpec’) –

             * ‘result’ (‘BufSpec’) –

             * ‘target_rank’ (int(11)) –

             * ‘target_disp’ (int(12)) –


          Return type: None(13)

      -- Method: Complete ()

          Completes an RMA operations begun after an *note Win.Start():
          78.


          Return type: None(14)

      -- Method: classmethod Create (memory, disp_unit=1,
               info=INFO_NULL, comm=COMM_SELF)

          Create an window object for one-sided communication


          Parameters:

             * ‘memory’ (‘Union’‘[’‘Buffer’‘, ’‘Bottom’‘, ’None(15)‘]’)
               –

             * ‘disp_unit’ (int(16)) –

             * ‘info’ (*note Info: cb.) –

             * ‘comm’ (*note Intracomm: 1b.) –


          Return type: *note Win: 72.

      -- Method: classmethod Create_dynamic (info=INFO_NULL,
               comm=COMM_SELF)

          Create an window object for one-sided communication


          Parameters:

             * ‘info’ (*note Info: cb.) –

             * ‘comm’ (*note Intracomm: 1b.) –


          Return type: *note Win: 72.

      -- Method: classmethod Create_keyval (copy_fn=None,
               delete_fn=None, nopython=False)

          Create a new attribute key for windows


          Parameters:

             * ‘copy_fn’ (‘Optional’‘[’‘Callable’‘[’‘[’*note Win: 72.‘,
               ’int(17)‘, ’‘Any’‘]’‘, ’‘Any’‘]’‘]’) –

             * ‘delete_fn’ (‘Optional’‘[’‘Callable’‘[’‘[’*note Win:
               72.‘, ’int(18)‘, ’‘Any’‘]’‘, ’None(19)‘]’‘]’) –

             * ‘nopython’ (bool(20)) –


          Return type: int(21)

      -- Method: Delete_attr (keyval)

          Delete attribute value associated with a key


          Parameters: ‘keyval’ (int(22)) –


          Return type: None(23)

      -- Method: Detach (memory)

          Detach a local memory region


          Parameters: ‘memory’ (‘Buffer’) –


          Return type: None(24)

      -- Method: Fence (assertion=0)

          Perform an MPI fence synchronization on a window


          Parameters: ‘assertion’ (int(25)) –


          Return type: None(26)

      -- Method: Fetch_and_op (origin, result, target_rank,
               target_disp=0, op=SUM)

          Perform one-sided read-modify-write


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘result’ (‘BufSpec’) –

             * ‘target_rank’ (int(27)) –

             * ‘target_disp’ (int(28)) –

             * ‘op’ (*note Op: ca.) –


          Return type: None(29)

      -- Method: Flush (rank)

          Complete all outstanding RMA operations at the given target


          Parameters: ‘rank’ (int(30)) –


          Return type: None(31)

      -- Method: Flush_all ()

          Complete all outstanding RMA operations at all targets


          Return type: None(32)

      -- Method: Flush_local (rank)

          Complete locally all outstanding RMA operations at the given
          target


          Parameters: ‘rank’ (int(33)) –


          Return type: None(34)

      -- Method: Flush_local_all ()

          Complete locally all outstanding RMA opera- tions at all
          targets


          Return type: None(35)

      -- Method: Free ()

          Free a window


          Return type: None(36)

      -- Method: classmethod Free_keyval (keyval)

          Free an attribute key for windows


          Parameters: ‘keyval’ (int(37)) –


          Return type: int(38)

      -- Method: Get (origin, target_rank, target=None)

          Get data from a memory window on a remote process.


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘target_rank’ (int(39)) –

             * ‘target’ (‘Optional’‘[’‘TargetSpec’‘]’) –


          Return type: None(40)

      -- Method: Get_accumulate (origin, result, target_rank,
               target=None, op=SUM)

          Fetch-and-accumulate data into the target process


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘result’ (‘BufSpec’) –

             * ‘target_rank’ (int(41)) –

             * ‘target’ (‘Optional’‘[’‘TargetSpec’‘]’) –

             * ‘op’ (*note Op: ca.) –


          Return type: None(42)

      -- Method: Get_attr (keyval)

          Retrieve attribute value by key


          Parameters: ‘keyval’ (int(43)) –


          Return type: Optional[Union[int(44), Any]]

      -- Method: Get_errhandler ()

          Get the error handler for a window


          Return type: *note Errhandler: ce.

      -- Method: Get_group ()

          Return a duplicate of the group of the communicator used to
          create the window


          Return type: *note Group: 24.

      -- Method: Get_info ()

          Return the hints for a windows that are currently in use


          Return type: *note Info: cb.

      -- Method: Get_name ()

          Get the print name associated with the window


          Return type: str(45)

      -- Method: Lock (rank, lock_type=LOCK_EXCLUSIVE, assertion=0)

          Begin an RMA access epoch at the target process


          Parameters:

             * ‘rank’ (int(46)) –

             * ‘lock_type’ (int(47)) –

             * ‘assertion’ (int(48)) –


          Return type: None(49)

      -- Method: Lock_all (assertion=0)

          Begin an RMA access epoch at all processes


          Parameters: ‘assertion’ (int(50)) –


          Return type: None(51)

      -- Method: Post (group, assertion=0)

          Start an RMA exposure epoch


          Parameters:

             * ‘group’ (*note Group: 24.) –

             * ‘assertion’ (int(52)) –


          Return type: None(53)

      -- Method: Put (origin, target_rank, target=None)

          Put data into a memory window on a remote process.


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘target_rank’ (int(54)) –

             * ‘target’ (‘Optional’‘[’‘TargetSpec’‘]’) –


          Return type: None(55)

      -- Method: Raccumulate (origin, target_rank, target=None, op=SUM)

          Fetch-and-accumulate data into the target process


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘target_rank’ (int(56)) –

             * ‘target’ (‘Optional’‘[’‘TargetSpec’‘]’) –

             * ‘op’ (*note Op: ca.) –


          Return type: *note Request: 3f.

      -- Method: Rget (origin, target_rank, target=None)

          Get data from a memory window on a remote process.


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘target_rank’ (int(57)) –

             * ‘target’ (‘Optional’‘[’‘TargetSpec’‘]’) –


          Return type: *note Request: 3f.

      -- Method: Rget_accumulate (origin, result, target_rank,
               target=None, op=SUM)

          Accumulate data into the target process using remote memory
          access.


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘result’ (‘BufSpec’) –

             * ‘target_rank’ (int(58)) –

             * ‘target’ (‘Optional’‘[’‘TargetSpec’‘]’) –

             * ‘op’ (*note Op: ca.) –


          Return type: *note Request: 3f.

      -- Method: Rput (origin, target_rank, target=None)

          Put data into a memory window on a remote process.


          Parameters:

             * ‘origin’ (‘BufSpec’) –

             * ‘target_rank’ (int(59)) –

             * ‘target’ (‘Optional’‘[’‘TargetSpec’‘]’) –


          Return type: *note Request: 3f.

      -- Method: Set_attr (keyval, attrval)

          Store attribute value associated with a key


          Parameters:

             * ‘keyval’ (int(60)) –

             * ‘attrval’ (‘Any’) –


          Return type: None(61)

      -- Method: Set_errhandler (errhandler)

          Set the error handler for a window


          Parameters: ‘errhandler’ (*note Errhandler: ce.) –


          Return type: None(62)

      -- Method: Set_info (info)

          Set new values for the hints associated with a window


          Parameters: ‘info’ (*note Info: cb.) –


          Return type: None(63)

      -- Method: Set_name (name)

          Set the print name associated with the window


          Parameters: ‘name’ (str(64)) –


          Return type: None(65)

      -- Method: Shared_query (rank)

          Query the process-local address for remote memory segments
          created with *note Win.Allocate_shared(): 3b7.


          Parameters: ‘rank’ (int(66)) –


          Return type: Tuple[*note memory: d0, int(67)]

      -- Method: Start (group, assertion=0)

          Start an RMA access epoch for MPI


          Parameters:

             * ‘group’ (*note Group: 24.) –

             * ‘assertion’ (int(68)) –


          Return type: None(69)

      -- Method: Sync ()

          Synchronize public and private copies of the given window


          Return type: None(70)

      -- Method: Test ()

          Test whether an RMA exposure epoch has completed


          Return type: bool(71)

      -- Method: Unlock (rank)

          Complete an RMA access epoch at the target process


          Parameters: ‘rank’ (int(72)) –


          Return type: None(73)

      -- Method: Unlock_all ()

          Complete an RMA access epoch at all processes


          Return type: None(74)

      -- Method: Wait ()

          Complete an RMA exposure epoch begun with *note Win.Post():
          7a.


          Return type: Literal[True]

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(75)) –


          Return type: *note Win: 72.

      -- Method: py2f ()


          Return type: int(76)

      -- Method: tomemory ()

          Return window memory buffer


          Return type: *note memory: d0.

     Attributes Documentation
     ........................

      -- Attribute: attrs

          window attributes

      -- Attribute: flavor

          window create flavor

      -- Attribute: group

          window group

      -- Attribute: info

          window info

      -- Attribute: model

          window memory model

      -- Attribute: name

          window name

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/constants.html#None

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/constants.html#None

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/constants.html#None

   (14) https://docs.python.org/3/library/constants.html#None

   (15) https://docs.python.org/3/library/constants.html#None

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/constants.html#None

   (20) https://docs.python.org/3/library/functions.html#bool

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/constants.html#None

   (24) https://docs.python.org/3/library/constants.html#None

   (25) https://docs.python.org/3/library/functions.html#int

   (26) https://docs.python.org/3/library/constants.html#None

   (27) https://docs.python.org/3/library/functions.html#int

   (28) https://docs.python.org/3/library/functions.html#int

   (29) https://docs.python.org/3/library/constants.html#None

   (30) https://docs.python.org/3/library/functions.html#int

   (31) https://docs.python.org/3/library/constants.html#None

   (32) https://docs.python.org/3/library/constants.html#None

   (33) https://docs.python.org/3/library/functions.html#int

   (34) https://docs.python.org/3/library/constants.html#None

   (35) https://docs.python.org/3/library/constants.html#None

   (36) https://docs.python.org/3/library/constants.html#None

   (37) https://docs.python.org/3/library/functions.html#int

   (38) https://docs.python.org/3/library/functions.html#int

   (39) https://docs.python.org/3/library/functions.html#int

   (40) https://docs.python.org/3/library/constants.html#None

   (41) https://docs.python.org/3/library/functions.html#int

   (42) https://docs.python.org/3/library/constants.html#None

   (43) https://docs.python.org/3/library/functions.html#int

   (44) https://docs.python.org/3/library/functions.html#int

   (45) https://docs.python.org/3/library/stdtypes.html#str

   (46) https://docs.python.org/3/library/functions.html#int

   (47) https://docs.python.org/3/library/functions.html#int

   (48) https://docs.python.org/3/library/functions.html#int

   (49) https://docs.python.org/3/library/constants.html#None

   (50) https://docs.python.org/3/library/functions.html#int

   (51) https://docs.python.org/3/library/constants.html#None

   (52) https://docs.python.org/3/library/functions.html#int

   (53) https://docs.python.org/3/library/constants.html#None

   (54) https://docs.python.org/3/library/functions.html#int

   (55) https://docs.python.org/3/library/constants.html#None

   (56) https://docs.python.org/3/library/functions.html#int

   (57) https://docs.python.org/3/library/functions.html#int

   (58) https://docs.python.org/3/library/functions.html#int

   (59) https://docs.python.org/3/library/functions.html#int

   (60) https://docs.python.org/3/library/functions.html#int

   (61) https://docs.python.org/3/library/constants.html#None

   (62) https://docs.python.org/3/library/constants.html#None

   (63) https://docs.python.org/3/library/constants.html#None

   (64) https://docs.python.org/3/library/stdtypes.html#str

   (65) https://docs.python.org/3/library/constants.html#None

   (66) https://docs.python.org/3/library/functions.html#int

   (67) https://docs.python.org/3/library/functions.html#int

   (68) https://docs.python.org/3/library/functions.html#int

   (69) https://docs.python.org/3/library/constants.html#None

   (70) https://docs.python.org/3/library/constants.html#None

   (71) https://docs.python.org/3/library/functions.html#bool

   (72) https://docs.python.org/3/library/functions.html#int

   (73) https://docs.python.org/3/library/constants.html#None

   (74) https://docs.python.org/3/library/constants.html#None

   (75) https://docs.python.org/3/library/functions.html#int

   (76) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI memory,  Next: mpi4py MPI Exception,  Prev: mpi4py MPI Win,  Up: mpi4py MPI<2>

9.1.21 mpi4py.MPI.memory
------------------------

 -- Class: mpi4py.MPI.memory (buf)

     Bases: object(1)

     Memory buffer


     Parameters: ‘buf’ (‘Buffer’) –


     Return type: *note memory: d0.

      -- Method: static __new__ (cls, buf)


          Parameters: ‘buf’ (‘Buffer’) –


          Return type: *note memory: d0.

     Methods Summary
     ...............

     *note allocate: 3e4.(nbytes[,Memory allocation
     clear])        

     *note fromaddress: 3e5.(address,Memory from address and size in bytes
     nbytes[,       
     readonly])

     *note frombuffer: 3e6.(obj[,Memory from buffer-like object
     readonly])     

     *note release: 3e7.()Release the underlying buffer exposed by the memory object
                    
                    
     *note tobytes: 3e8.([order])Return the data in the buffer as a byte string
                    
                    
     *note toreadonly: 3e9.()Return a readonly version of the memory object
                    

     Attributes Summary
     ..................

     *note address: 3ea.Memory address
                    
                    
     *note format: 3eb.A string with the format of each element
                    
                    
     *note itemsize: 3ec.The size in bytes of each element
                    
                    
     *note nbytes: 3ed.Memory size (in bytes)
                    
                    
     *note obj: 3ee.The underlying object of the memory
                    
                    
     *note readonly: 3ef.Boolean indicating whether the memory is read-only
                    

     Methods Documentation
     .....................

      -- Method: static allocate (nbytes, clear=False)

          Memory allocation


          Parameters:

             * ‘nbytes’ (int(2)) –

             * ‘clear’ (bool(3)) –


          Return type: *note memory: d0.

      -- Method: static fromaddress (address, nbytes, readonly=False)

          Memory from address and size in bytes


          Parameters:

             * ‘address’ (int(4)) –

             * ‘nbytes’ (int(5)) –

             * ‘readonly’ (bool(6)) –


          Return type: *note memory: d0.

      -- Method: static frombuffer (obj, readonly=False)

          Memory from buffer-like object


          Parameters:

             * ‘obj’ (‘Buffer’) –

             * ‘readonly’ (bool(7)) –


          Return type: *note memory: d0.

      -- Method: release ()

          Release the underlying buffer exposed by the memory object


          Return type: None(8)

      -- Method: tobytes (order=None)

          Return the data in the buffer as a byte string


          Parameters: ‘order’ (‘Optional’‘[’str(9)‘]’) –


          Return type: bytes(10)

      -- Method: toreadonly ()

          Return a readonly version of the memory object


          Return type: *note memory: d0.

     Attributes Documentation
     ........................

      -- Attribute: address

          Memory address

      -- Attribute: format

          A string with the format of each element

      -- Attribute: itemsize

          The size in bytes of each element

      -- Attribute: nbytes

          Memory size (in bytes)

      -- Attribute: obj

          The underlying object of the memory

      -- Attribute: readonly

          Boolean indicating whether the memory is read-only

Exceptions
..........

*note Exception: 99.([ierr])Exception class
               

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#bool

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#bool

   (7) https://docs.python.org/3/library/functions.html#bool

   (8) https://docs.python.org/3/library/constants.html#None

   (9) https://docs.python.org/3/library/stdtypes.html#str

   (10) https://docs.python.org/3/library/stdtypes.html#bytes


File: mpi4py.info,  Node: mpi4py MPI Exception,  Next: mpi4py MPI Add_error_class,  Prev: mpi4py MPI memory,  Up: mpi4py MPI<2>

9.1.22 mpi4py.MPI.Exception
---------------------------

 -- Exception: mpi4py.MPI.Exception (ierr=SUCCESS)

     Bases: RuntimeError(1)

     Exception class


     Parameters: ‘ierr’ (int(2)) –


     Return type: *note Exception: 99.

      -- Method: static __new__ (cls, ierr=SUCCESS)


          Parameters: ‘ierr’ (int(3)) –


          Return type: *note Exception: 99.

     Methods Summary
     ...............

     *note Get_error_class: 3f3.()Error class
                    
                    
     *note Get_error_code: 3f4.()Error code
                    
                    
     *note Get_error_string: 3f5.()Error string
                    

     Attributes Summary
     ..................

     *note error_class: 3f6.error class
                    
                    
     *note error_code: 3f7.error code
                    
                    
     *note error_string: 3f8.error string
                    

     Methods Documentation
     .....................

      -- Method: Get_error_class ()

          Error class


          Return type: int(4)

      -- Method: Get_error_code ()

          Error code


          Return type: int(5)

      -- Method: Get_error_string ()

          Error string


          Return type: str(6)

     Attributes Documentation
     ........................

      -- Attribute: error_class

          error class

      -- Attribute: error_code

          error code

      -- Attribute: error_string

          error string

Functions
.........

*note Add_error_class: dc.()Add an `error class' to the known error classes
               
               
*note Add_error_code: dd.(errorclass)Add an `error code' to an `error class'
               
               
*note Add_error_string: de.(errorcode,Associate an `error string' with an `error class' or `errorcode'
string)        

*note Aint_add: d8.(base,Return the sum of base address and displacement
disp)          

*note Aint_diff: d9.(addr1,Return the difference between absolute addresses
addr2)         

*note Alloc_mem: d5.(size[,Allocate memory for message passing and RMA
info])         

*note Attach_buffer: df.(buf)Attach a user-provided buffer for sending in buffered mode
               
               
*note Close_port: 70.(port_name)Close a port
               
               
*note Compute_dims: e1.(nnodes,Return a balanced distribution of processes per coordinate direction
dims)          

*note Detach_buffer: e0.()Remove an existing attached buffer
               
               
*note Finalize: 8a.()Terminate the MPI execution environment
               
               
*note Free_mem: d6.(mem)Free memory allocated with *note Alloc_mem(): d5.
               
               
*note Get_address: d7.(location)Get the address of a location in memory
               
               
*note Get_error_class: da.(errorcode)Convert an `error code' into an `error class'
               
               
*note Get_error_string: db.(errorcode)Return the `error string' for a given `error class' or `error code'
               
               
*note Get_library_version: d2.()Obtain the version string of the MPI library
               
               
*note Get_processor_name: 8f.()Obtain the name of the calling processor
               
               
*note Get_version: 8e.()Obtain the version number of the MPI standard supported by the implementation as a tuple
               ‘(version, subversion)’
               
               
*note Init: 88.()Initialize the MPI execution environment
               
               
*note Init_thread: 89.([required])Initialize the MPI execution environment
               
               
*note Is_finalized: 8c.()Indicates whether *note Finalize: 8a. has completed
               
               
*note Is_initialized: 8b.()Indicates whether *note Init: 88. has been called
               
               
*note Is_thread_main: d4.()Indicate whether this thread called *note Init: 88. or *note Init_thread: 89.
               
               
*note Lookup_name: 6c.(service_name[,Lookup a port name given a service name
info])         

*note Open_port: 69.([info])Return an address that can be used to establish connections between groups of MPI processes
               
               
*note Pcontrol: e3.(level)Control profiling
               
               
*note Publish_name: 6a.(service_name,Publish a service name
port_name[,    
info])

*note Query_thread: d3.()Return the level of thread support provided by the MPI library
               
               
*note Register_datarep: e2.(datarep,Register user-defined data representations
read_fn,       
write_fn, …)

*note Unpublish_name: 6f.(service_name,Unpublish a service name
port_name[,    
info])

*note Wtick: 93.()Return the resolution of *note Wtime: 92.
               
               
*note Wtime: 92.()Return an elapsed time on the calling processor
               
               
*note get_vendor: e4.()Infomation about the underlying MPI implementation
               

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/exceptions.html#RuntimeError

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Add_error_class,  Next: mpi4py MPI Add_error_code,  Prev: mpi4py MPI Exception,  Up: mpi4py MPI<2>

9.1.23 mpi4py.MPI.Add_error_class
---------------------------------

 -- Function: mpi4py.MPI.Add_error_class ()

     Add an `error class' to the known error classes


     Return type: int(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Add_error_code,  Next: mpi4py MPI Add_error_string,  Prev: mpi4py MPI Add_error_class,  Up: mpi4py MPI<2>

9.1.24 mpi4py.MPI.Add_error_code
--------------------------------

 -- Function: mpi4py.MPI.Add_error_code (errorclass)

     Add an `error code' to an `error class'


     Parameters: ‘errorclass’ (int(1)) –


     Return type: int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Add_error_string,  Next: mpi4py MPI Aint_add,  Prev: mpi4py MPI Add_error_code,  Up: mpi4py MPI<2>

9.1.25 mpi4py.MPI.Add_error_string
----------------------------------

 -- Function: mpi4py.MPI.Add_error_string (errorcode, string)

     Associate an `error string' with an `error class' or `errorcode'


     Parameters:

        * ‘errorcode’ (int(1)) –

        * ‘string’ (str(2)) –


     Return type: None(3)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/stdtypes.html#str

   (3) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Aint_add,  Next: mpi4py MPI Aint_diff,  Prev: mpi4py MPI Add_error_string,  Up: mpi4py MPI<2>

9.1.26 mpi4py.MPI.Aint_add
--------------------------

 -- Function: mpi4py.MPI.Aint_add (base, disp)

     Return the sum of base address and displacement


     Parameters:

        * ‘base’ (int(1)) –

        * ‘disp’ (int(2)) –


     Return type: int(3)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Aint_diff,  Next: mpi4py MPI Alloc_mem,  Prev: mpi4py MPI Aint_add,  Up: mpi4py MPI<2>

9.1.27 mpi4py.MPI.Aint_diff
---------------------------

 -- Function: mpi4py.MPI.Aint_diff (addr1, addr2)

     Return the difference between absolute addresses


     Parameters:

        * ‘addr1’ (int(1)) –

        * ‘addr2’ (int(2)) –


     Return type: int(3)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Alloc_mem,  Next: mpi4py MPI Attach_buffer,  Prev: mpi4py MPI Aint_diff,  Up: mpi4py MPI<2>

9.1.28 mpi4py.MPI.Alloc_mem
---------------------------

 -- Function: mpi4py.MPI.Alloc_mem (size, info=INFO_NULL)

     Allocate memory for message passing and RMA


     Parameters:

        * ‘size’ (int(1)) –

        * ‘info’ (*note Info: cb.) –


     Return type: *note memory: d0.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Attach_buffer,  Next: mpi4py MPI Close_port,  Prev: mpi4py MPI Alloc_mem,  Up: mpi4py MPI<2>

9.1.29 mpi4py.MPI.Attach_buffer
-------------------------------

 -- Function: mpi4py.MPI.Attach_buffer (buf)

     Attach a user-provided buffer for sending in buffered mode


     Parameters: ‘buf’ (‘Buffer’) –


     Return type: None(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Close_port,  Next: mpi4py MPI Compute_dims,  Prev: mpi4py MPI Attach_buffer,  Up: mpi4py MPI<2>

9.1.30 mpi4py.MPI.Close_port
----------------------------

 -- Function: mpi4py.MPI.Close_port (port_name)

     Close a port


     Parameters: ‘port_name’ (str(1)) –


     Return type: None(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Compute_dims,  Next: mpi4py MPI Detach_buffer,  Prev: mpi4py MPI Close_port,  Up: mpi4py MPI<2>

9.1.31 mpi4py.MPI.Compute_dims
------------------------------

 -- Function: mpi4py.MPI.Compute_dims (nnodes, dims)

     Return a balanced distribution of processes per coordinate
     direction


     Parameters:

        * ‘nnodes’ (int(1)) –

        * ‘dims’ (‘Union’‘[’int(2)‘, ’‘Sequence’‘[’int(3)‘]’‘]’) –


     Return type: List[int(4)]

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Detach_buffer,  Next: mpi4py MPI Finalize,  Prev: mpi4py MPI Compute_dims,  Up: mpi4py MPI<2>

9.1.32 mpi4py.MPI.Detach_buffer
-------------------------------

 -- Function: mpi4py.MPI.Detach_buffer ()

     Remove an existing attached buffer


     Return type: Buffer


File: mpi4py.info,  Node: mpi4py MPI Finalize,  Next: mpi4py MPI Free_mem,  Prev: mpi4py MPI Detach_buffer,  Up: mpi4py MPI<2>

9.1.33 mpi4py.MPI.Finalize
--------------------------

 -- Function: mpi4py.MPI.Finalize ()

     Terminate the MPI execution environment


     Return type: None(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Free_mem,  Next: mpi4py MPI Get_address,  Prev: mpi4py MPI Finalize,  Up: mpi4py MPI<2>

9.1.34 mpi4py.MPI.Free_mem
--------------------------

 -- Function: mpi4py.MPI.Free_mem (mem)

     Free memory allocated with *note Alloc_mem(): d5.


     Parameters: ‘mem’ (*note memory: d0.) –


     Return type: None(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Get_address,  Next: mpi4py MPI Get_error_class,  Prev: mpi4py MPI Free_mem,  Up: mpi4py MPI<2>

9.1.35 mpi4py.MPI.Get_address
-----------------------------

 -- Function: mpi4py.MPI.Get_address (location)

     Get the address of a location in memory


     Parameters: ‘location’ (‘Union’‘[’‘Buffer’‘, ’‘Bottom’‘]’) –


     Return type: int(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Get_error_class,  Next: mpi4py MPI Get_error_string,  Prev: mpi4py MPI Get_address,  Up: mpi4py MPI<2>

9.1.36 mpi4py.MPI.Get_error_class
---------------------------------

 -- Function: mpi4py.MPI.Get_error_class (errorcode)

     Convert an `error code' into an `error class'


     Parameters: ‘errorcode’ (int(1)) –


     Return type: int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Get_error_string,  Next: mpi4py MPI Get_library_version,  Prev: mpi4py MPI Get_error_class,  Up: mpi4py MPI<2>

9.1.37 mpi4py.MPI.Get_error_string
----------------------------------

 -- Function: mpi4py.MPI.Get_error_string (errorcode)

     Return the `error string' for a given `error class' or `error code'


     Parameters: ‘errorcode’ (int(1)) –


     Return type: str(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Get_library_version,  Next: mpi4py MPI Get_processor_name,  Prev: mpi4py MPI Get_error_string,  Up: mpi4py MPI<2>

9.1.38 mpi4py.MPI.Get_library_version
-------------------------------------

 -- Function: mpi4py.MPI.Get_library_version ()

     Obtain the version string of the MPI library


     Return type: str(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Get_processor_name,  Next: mpi4py MPI Get_version,  Prev: mpi4py MPI Get_library_version,  Up: mpi4py MPI<2>

9.1.39 mpi4py.MPI.Get_processor_name
------------------------------------

 -- Function: mpi4py.MPI.Get_processor_name ()

     Obtain the name of the calling processor


     Return type: str(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Get_version,  Next: mpi4py MPI Init,  Prev: mpi4py MPI Get_processor_name,  Up: mpi4py MPI<2>

9.1.40 mpi4py.MPI.Get_version
-----------------------------

 -- Function: mpi4py.MPI.Get_version ()

     Obtain the version number of the MPI standard supported by the
     implementation as a tuple ‘(version, subversion)’


     Return type: Tuple[int(1), int(2)]

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Init,  Next: mpi4py MPI Init_thread,  Prev: mpi4py MPI Get_version,  Up: mpi4py MPI<2>

9.1.41 mpi4py.MPI.Init
----------------------

 -- Function: mpi4py.MPI.Init ()

     Initialize the MPI execution environment


     Return type: None(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Init_thread,  Next: mpi4py MPI Is_finalized,  Prev: mpi4py MPI Init,  Up: mpi4py MPI<2>

9.1.42 mpi4py.MPI.Init_thread
-----------------------------

 -- Function: mpi4py.MPI.Init_thread (required=THREAD_MULTIPLE)

     Initialize the MPI execution environment


     Parameters: ‘required’ (int(1)) –


     Return type: int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Is_finalized,  Next: mpi4py MPI Is_initialized,  Prev: mpi4py MPI Init_thread,  Up: mpi4py MPI<2>

9.1.43 mpi4py.MPI.Is_finalized
------------------------------

 -- Function: mpi4py.MPI.Is_finalized ()

     Indicates whether *note Finalize: 8a. has completed


     Return type: bool(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#bool


File: mpi4py.info,  Node: mpi4py MPI Is_initialized,  Next: mpi4py MPI Is_thread_main,  Prev: mpi4py MPI Is_finalized,  Up: mpi4py MPI<2>

9.1.44 mpi4py.MPI.Is_initialized
--------------------------------

 -- Function: mpi4py.MPI.Is_initialized ()

     Indicates whether *note Init: 88. has been called


     Return type: bool(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#bool


File: mpi4py.info,  Node: mpi4py MPI Is_thread_main,  Next: mpi4py MPI Lookup_name,  Prev: mpi4py MPI Is_initialized,  Up: mpi4py MPI<2>

9.1.45 mpi4py.MPI.Is_thread_main
--------------------------------

 -- Function: mpi4py.MPI.Is_thread_main ()

     Indicate whether this thread called *note Init: 88. or *note
     Init_thread: 89.


     Return type: bool(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#bool


File: mpi4py.info,  Node: mpi4py MPI Lookup_name,  Next: mpi4py MPI Open_port,  Prev: mpi4py MPI Is_thread_main,  Up: mpi4py MPI<2>

9.1.46 mpi4py.MPI.Lookup_name
-----------------------------

 -- Function: mpi4py.MPI.Lookup_name (service_name, info=INFO_NULL)

     Lookup a port name given a service name


     Parameters:

        * ‘service_name’ (str(1)) –

        * ‘info’ (*note Info: cb.) –


     Return type: str(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Open_port,  Next: mpi4py MPI Pcontrol,  Prev: mpi4py MPI Lookup_name,  Up: mpi4py MPI<2>

9.1.47 mpi4py.MPI.Open_port
---------------------------

 -- Function: mpi4py.MPI.Open_port (info=INFO_NULL)

     Return an address that can be used to establish connections between
     groups of MPI processes


     Parameters: ‘info’ (*note Info: cb.) –


     Return type: str(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Pcontrol,  Next: mpi4py MPI Publish_name,  Prev: mpi4py MPI Open_port,  Up: mpi4py MPI<2>

9.1.48 mpi4py.MPI.Pcontrol
--------------------------

 -- Function: mpi4py.MPI.Pcontrol (level)

     Control profiling


     Parameters: ‘level’ (int(1)) –


     Return type: None(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Publish_name,  Next: mpi4py MPI Query_thread,  Prev: mpi4py MPI Pcontrol,  Up: mpi4py MPI<2>

9.1.49 mpi4py.MPI.Publish_name
------------------------------

 -- Function: mpi4py.MPI.Publish_name (service_name, port_name,
          info=INFO_NULL)

     Publish a service name


     Parameters:

        * ‘service_name’ (str(1)) –

        * ‘port_name’ (str(2)) –

        * ‘info’ (*note Info: cb.) –


     Return type: None(3)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/stdtypes.html#str

   (3) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Query_thread,  Next: mpi4py MPI Register_datarep,  Prev: mpi4py MPI Publish_name,  Up: mpi4py MPI<2>

9.1.50 mpi4py.MPI.Query_thread
------------------------------

 -- Function: mpi4py.MPI.Query_thread ()

     Return the level of thread support provided by the MPI library


     Return type: int(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Register_datarep,  Next: mpi4py MPI Unpublish_name,  Prev: mpi4py MPI Query_thread,  Up: mpi4py MPI<2>

9.1.51 mpi4py.MPI.Register_datarep
----------------------------------

 -- Function: mpi4py.MPI.Register_datarep (datarep, read_fn, write_fn,
          extent_fn)

     Register user-defined data representations


     Parameters:

        * ‘datarep’ (str(1)) –

        * ‘read_fn’ (‘Callable’‘[’‘[’‘Buffer’‘, ’*note Datatype: c7.‘,
          ’int(2)‘, ’‘Buffer’‘, ’int(3)‘]’‘, ’None(4)‘]’) –

        * ‘write_fn’ (‘Callable’‘[’‘[’‘Buffer’‘, ’*note Datatype: c7.‘,
          ’int(5)‘, ’‘Buffer’‘, ’int(6)‘]’‘, ’None(7)‘]’) –

        * ‘extent_fn’ (‘Callable’‘[’‘[’*note Datatype: c7.‘]’‘,
          ’int(8)‘]’) –


     Return type: None(9)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/constants.html#None

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Unpublish_name,  Next: mpi4py MPI Wtick,  Prev: mpi4py MPI Register_datarep,  Up: mpi4py MPI<2>

9.1.52 mpi4py.MPI.Unpublish_name
--------------------------------

 -- Function: mpi4py.MPI.Unpublish_name (service_name, port_name,
          info=INFO_NULL)

     Unpublish a service name


     Parameters:

        * ‘service_name’ (str(1)) –

        * ‘port_name’ (str(2)) –

        * ‘info’ (*note Info: cb.) –


     Return type: None(3)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/stdtypes.html#str

   (3) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Wtick,  Next: mpi4py MPI Wtime,  Prev: mpi4py MPI Unpublish_name,  Up: mpi4py MPI<2>

9.1.53 mpi4py.MPI.Wtick
-----------------------

 -- Function: mpi4py.MPI.Wtick ()

     Return the resolution of *note Wtime: 92.


     Return type: float(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#float


File: mpi4py.info,  Node: mpi4py MPI Wtime,  Next: mpi4py MPI get_vendor,  Prev: mpi4py MPI Wtick,  Up: mpi4py MPI<2>

9.1.54 mpi4py.MPI.Wtime
-----------------------

 -- Function: mpi4py.MPI.Wtime ()

     Return an elapsed time on the calling processor


     Return type: float(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#float


File: mpi4py.info,  Node: mpi4py MPI get_vendor,  Next: mpi4py MPI UNDEFINED,  Prev: mpi4py MPI Wtime,  Up: mpi4py MPI<2>

9.1.55 mpi4py.MPI.get_vendor
----------------------------

 -- Function: mpi4py.MPI.get_vendor ()

     Infomation about the underlying MPI implementation


     Returns:

        - a string with the name of the MPI implementation

        - an integer 3-tuple version ‘(major, minor, micro)’


     Return type: Tuple[str(1), Tuple[int(2), int(3), int(4)]]

Attributes
..........

*note UNDEFINED: e6.int(5) ‘UNDEFINED’
               
               
*note ANY_SOURCE: e7.int(6) ‘ANY_SOURCE’
               
               
*note ANY_TAG: e8.int(7) ‘ANY_TAG’
               
               
*note PROC_NULL: e9.int(8) ‘PROC_NULL’
               
               
*note ROOT: ea.int(9) ‘ROOT’
               
               
*note BOTTOM: eb.‘Bottom’ ‘BOTTOM’
               
               
*note IN_PLACE: ec.‘InPlace’ ‘IN_PLACE’
               
               
*note KEYVAL_INVALID: ed.int(10) ‘KEYVAL_INVALID’
               
               
*note TAG_UB: ee.int(11) ‘TAG_UB’
               
               
*note HOST: ef.int(12) ‘HOST’
               
               
*note IO: f0.  int(13) ‘IO’
               
               
*note WTIME_IS_GLOBAL: f1.int(14) ‘WTIME_IS_GLOBAL’
               
               
*note UNIVERSE_SIZE: f2.int(15) ‘UNIVERSE_SIZE’
               
               
*note APPNUM: f3.int(16) ‘APPNUM’
               
               
*note LASTUSEDCODE: f4.int(17) ‘LASTUSEDCODE’
               
               
*note WIN_BASE: f5.int(18) ‘WIN_BASE’
               
               
*note WIN_SIZE: f6.int(19) ‘WIN_SIZE’
               
               
*note WIN_DISP_UNIT: f7.int(20) ‘WIN_DISP_UNIT’
               
               
*note WIN_CREATE_FLAVOR: f8.int(21) ‘WIN_CREATE_FLAVOR’
               
               
*note WIN_FLAVOR: f9.int(22) ‘WIN_FLAVOR’
               
               
*note WIN_MODEL: fa.int(23) ‘WIN_MODEL’
               
               
*note SUCCESS: fb.int(24) ‘SUCCESS’
               
               
*note ERR_LASTCODE: fc.int(25) ‘ERR_LASTCODE’
               
               
*note ERR_COMM: fd.int(26) ‘ERR_COMM’
               
               
*note ERR_GROUP: fe.int(27) ‘ERR_GROUP’
               
               
*note ERR_TYPE: ff.int(28) ‘ERR_TYPE’
               
               
*note ERR_REQUEST: 100.int(29) ‘ERR_REQUEST’
               
               
*note ERR_OP: 101.int(30) ‘ERR_OP’
               
               
*note ERR_BUFFER: 102.int(31) ‘ERR_BUFFER’
               
               
*note ERR_COUNT: 103.int(32) ‘ERR_COUNT’
               
               
*note ERR_TAG: 104.int(33) ‘ERR_TAG’
               
               
*note ERR_RANK: 105.int(34) ‘ERR_RANK’
               
               
*note ERR_ROOT: 106.int(35) ‘ERR_ROOT’
               
               
*note ERR_TRUNCATE: 107.int(36) ‘ERR_TRUNCATE’
               
               
*note ERR_IN_STATUS: 108.int(37) ‘ERR_IN_STATUS’
               
               
*note ERR_PENDING: 109.int(38) ‘ERR_PENDING’
               
               
*note ERR_TOPOLOGY: 10a.int(39) ‘ERR_TOPOLOGY’
               
               
*note ERR_DIMS: 10b.int(40) ‘ERR_DIMS’
               
               
*note ERR_ARG: 10c.int(41) ‘ERR_ARG’
               
               
*note ERR_OTHER: 10d.int(42) ‘ERR_OTHER’
               
               
*note ERR_UNKNOWN: 10e.int(43) ‘ERR_UNKNOWN’
               
               
*note ERR_INTERN: 10f.int(44) ‘ERR_INTERN’
               
               
*note ERR_INFO: 110.int(45) ‘ERR_INFO’
               
               
*note ERR_FILE: 111.int(46) ‘ERR_FILE’
               
               
*note ERR_WIN: 112.int(47) ‘ERR_WIN’
               
               
*note ERR_KEYVAL: 113.int(48) ‘ERR_KEYVAL’
               
               
*note ERR_INFO_KEY: 114.int(49) ‘ERR_INFO_KEY’
               
               
*note ERR_INFO_VALUE: 115.int(50) ‘ERR_INFO_VALUE’
               
               
*note ERR_INFO_NOKEY: 116.int(51) ‘ERR_INFO_NOKEY’
               
               
*note ERR_ACCESS: 117.int(52) ‘ERR_ACCESS’
               
               
*note ERR_AMODE: 118.int(53) ‘ERR_AMODE’
               
               
*note ERR_BAD_FILE: 119.int(54) ‘ERR_BAD_FILE’
               
               
*note ERR_FILE_EXISTS: 11a.int(55) ‘ERR_FILE_EXISTS’
               
               
*note ERR_FILE_IN_USE: 11b.int(56) ‘ERR_FILE_IN_USE’
               
               
*note ERR_NO_SPACE: 11c.int(57) ‘ERR_NO_SPACE’
               
               
*note ERR_NO_SUCH_FILE: 11d.int(58) ‘ERR_NO_SUCH_FILE’
               
               
*note ERR_IO: 11e.int(59) ‘ERR_IO’
               
               
*note ERR_READ_ONLY: 11f.int(60) ‘ERR_READ_ONLY’
               
               
*note ERR_CONVERSION: 120.int(61) ‘ERR_CONVERSION’
               
               
*note ERR_DUP_DATAREP: 121.int(62) ‘ERR_DUP_DATAREP’
               
               
*note ERR_UNSUPPORTED_DATAREP: 122.int(63) ‘ERR_UNSUPPORTED_DATAREP’
               
               
*note ERR_UNSUPPORTED_OPERATION: 123.int(64) ‘ERR_UNSUPPORTED_OPERATION’
               
               
*note ERR_NAME: 124.int(65) ‘ERR_NAME’
               
               
*note ERR_NO_MEM: 125.int(66) ‘ERR_NO_MEM’
               
               
*note ERR_NOT_SAME: 126.int(67) ‘ERR_NOT_SAME’
               
               
*note ERR_PORT: 127.int(68) ‘ERR_PORT’
               
               
*note ERR_QUOTA: 128.int(69) ‘ERR_QUOTA’
               
               
*note ERR_SERVICE: 129.int(70) ‘ERR_SERVICE’
               
               
*note ERR_SPAWN: 12a.int(71) ‘ERR_SPAWN’
               
               
*note ERR_BASE: 12b.int(72) ‘ERR_BASE’
               
               
*note ERR_SIZE: 12c.int(73) ‘ERR_SIZE’
               
               
*note ERR_DISP: 12d.int(74) ‘ERR_DISP’
               
               
*note ERR_ASSERT: 12e.int(75) ‘ERR_ASSERT’
               
               
*note ERR_LOCKTYPE: 12f.int(76) ‘ERR_LOCKTYPE’
               
               
*note ERR_RMA_CONFLICT: 130.int(77) ‘ERR_RMA_CONFLICT’
               
               
*note ERR_RMA_SYNC: 131.int(78) ‘ERR_RMA_SYNC’
               
               
*note ERR_RMA_RANGE: 132.int(79) ‘ERR_RMA_RANGE’
               
               
*note ERR_RMA_ATTACH: 133.int(80) ‘ERR_RMA_ATTACH’
               
               
*note ERR_RMA_SHARED: 134.int(81) ‘ERR_RMA_SHARED’
               
               
*note ERR_RMA_FLAVOR: 135.int(82) ‘ERR_RMA_FLAVOR’
               
               
*note ORDER_C: 136.int(83) ‘ORDER_C’
               
               
*note ORDER_FORTRAN: 138.int(84) ‘ORDER_FORTRAN’
               
               
*note ORDER_F: 137.int(85) ‘ORDER_F’
               
               
*note TYPECLASS_INTEGER: 139.int(86) ‘TYPECLASS_INTEGER’
               
               
*note TYPECLASS_REAL: 13a.int(87) ‘TYPECLASS_REAL’
               
               
*note TYPECLASS_COMPLEX: 13b.int(88) ‘TYPECLASS_COMPLEX’
               
               
*note DISTRIBUTE_NONE: 13c.int(89) ‘DISTRIBUTE_NONE’
               
               
*note DISTRIBUTE_BLOCK: 13d.int(90) ‘DISTRIBUTE_BLOCK’
               
               
*note DISTRIBUTE_CYCLIC: 13e.int(91) ‘DISTRIBUTE_CYCLIC’
               
               
*note DISTRIBUTE_DFLT_DARG: 13f.int(92) ‘DISTRIBUTE_DFLT_DARG’
               
               
*note COMBINER_NAMED: 140.int(93) ‘COMBINER_NAMED’
               
               
*note COMBINER_DUP: 141.int(94) ‘COMBINER_DUP’
               
               
*note COMBINER_CONTIGUOUS: 142.int(95) ‘COMBINER_CONTIGUOUS’
               
               
*note COMBINER_VECTOR: 143.int(96) ‘COMBINER_VECTOR’
               
               
*note COMBINER_HVECTOR: 144.int(97) ‘COMBINER_HVECTOR’
               
               
*note COMBINER_INDEXED: 145.int(98) ‘COMBINER_INDEXED’
               
               
*note COMBINER_HINDEXED: 146.int(99) ‘COMBINER_HINDEXED’
               
               
*note COMBINER_INDEXED_BLOCK: 147.int(100) ‘COMBINER_INDEXED_BLOCK’
               
               
*note COMBINER_HINDEXED_BLOCK: 148.int(101) ‘COMBINER_HINDEXED_BLOCK’
               
               
*note COMBINER_STRUCT: 149.int(102) ‘COMBINER_STRUCT’
               
               
*note COMBINER_SUBARRAY: 14a.int(103) ‘COMBINER_SUBARRAY’
               
               
*note COMBINER_DARRAY: 14b.int(104) ‘COMBINER_DARRAY’
               
               
*note COMBINER_RESIZED: 14c.int(105) ‘COMBINER_RESIZED’
               
               
*note COMBINER_F90_REAL: 14d.int(106) ‘COMBINER_F90_REAL’
               
               
*note COMBINER_F90_COMPLEX: 14e.int(107) ‘COMBINER_F90_COMPLEX’
               
               
*note COMBINER_F90_INTEGER: 14f.int(108) ‘COMBINER_F90_INTEGER’
               
               
*note IDENT: 150.int(109) ‘IDENT’
               
               
*note CONGRUENT: 151.int(110) ‘CONGRUENT’
               
               
*note SIMILAR: 152.int(111) ‘SIMILAR’
               
               
*note UNEQUAL: 153.int(112) ‘UNEQUAL’
               
               
*note CART: 154.int(113) ‘CART’
               
               
*note GRAPH: 155.int(114) ‘GRAPH’
               
               
*note DIST_GRAPH: 156.int(115) ‘DIST_GRAPH’
               
               
*note UNWEIGHTED: 157.int(116) ‘UNWEIGHTED’
               
               
*note WEIGHTS_EMPTY: 158.int(117) ‘WEIGHTS_EMPTY’
               
               
*note COMM_TYPE_SHARED: 159.int(118) ‘COMM_TYPE_SHARED’
               
               
*note BSEND_OVERHEAD: 15a.int(119) ‘BSEND_OVERHEAD’
               
               
*note WIN_FLAVOR_CREATE: 15b.int(120) ‘WIN_FLAVOR_CREATE’
               
               
*note WIN_FLAVOR_ALLOCATE: 15c.int(121) ‘WIN_FLAVOR_ALLOCATE’
               
               
*note WIN_FLAVOR_DYNAMIC: 15d.int(122) ‘WIN_FLAVOR_DYNAMIC’
               
               
*note WIN_FLAVOR_SHARED: 15e.int(123) ‘WIN_FLAVOR_SHARED’
               
               
*note WIN_SEPARATE: 15f.int(124) ‘WIN_SEPARATE’
               
               
*note WIN_UNIFIED: 160.int(125) ‘WIN_UNIFIED’
               
               
*note MODE_NOCHECK: 161.int(126) ‘MODE_NOCHECK’
               
               
*note MODE_NOSTORE: 162.int(127) ‘MODE_NOSTORE’
               
               
*note MODE_NOPUT: 163.int(128) ‘MODE_NOPUT’
               
               
*note MODE_NOPRECEDE: 164.int(129) ‘MODE_NOPRECEDE’
               
               
*note MODE_NOSUCCEED: 165.int(130) ‘MODE_NOSUCCEED’
               
               
*note LOCK_EXCLUSIVE: 166.int(131) ‘LOCK_EXCLUSIVE’
               
               
*note LOCK_SHARED: 167.int(132) ‘LOCK_SHARED’
               
               
*note MODE_RDONLY: 168.int(133) ‘MODE_RDONLY’
               
               
*note MODE_WRONLY: 169.int(134) ‘MODE_WRONLY’
               
               
*note MODE_RDWR: 16a.int(135) ‘MODE_RDWR’
               
               
*note MODE_CREATE: 16b.int(136) ‘MODE_CREATE’
               
               
*note MODE_EXCL: 16c.int(137) ‘MODE_EXCL’
               
               
*note MODE_DELETE_ON_CLOSE: 16d.int(138) ‘MODE_DELETE_ON_CLOSE’
               
               
*note MODE_UNIQUE_OPEN: 16e.int(139) ‘MODE_UNIQUE_OPEN’
               
               
*note MODE_SEQUENTIAL: 16f.int(140) ‘MODE_SEQUENTIAL’
               
               
*note MODE_APPEND: 170.int(141) ‘MODE_APPEND’
               
               
*note SEEK_SET: 171.int(142) ‘SEEK_SET’
               
               
*note SEEK_CUR: 172.int(143) ‘SEEK_CUR’
               
               
*note SEEK_END: 173.int(144) ‘SEEK_END’
               
               
*note DISPLACEMENT_CURRENT: 174.int(145) ‘DISPLACEMENT_CURRENT’
               
               
*note DISP_CUR: 175.int(146) ‘DISP_CUR’
               
               
*note THREAD_SINGLE: 176.int(147) ‘THREAD_SINGLE’
               
               
*note THREAD_FUNNELED: 177.int(148) ‘THREAD_FUNNELED’
               
               
*note THREAD_SERIALIZED: 178.int(149) ‘THREAD_SERIALIZED’
               
               
*note THREAD_MULTIPLE: 179.int(150) ‘THREAD_MULTIPLE’
               
               
*note VERSION: 17a.int(151) ‘VERSION’
               
               
*note SUBVERSION: 17b.int(152) ‘SUBVERSION’
               
               
*note MAX_PROCESSOR_NAME: 17c.int(153) ‘MAX_PROCESSOR_NAME’
               
               
*note MAX_ERROR_STRING: 17d.int(154) ‘MAX_ERROR_STRING’
               
               
*note MAX_PORT_NAME: 17e.int(155) ‘MAX_PORT_NAME’
               
               
*note MAX_INFO_KEY: 17f.int(156) ‘MAX_INFO_KEY’
               
               
*note MAX_INFO_VAL: 180.int(157) ‘MAX_INFO_VAL’
               
               
*note MAX_OBJECT_NAME: 181.int(158) ‘MAX_OBJECT_NAME’
               
               
*note MAX_DATAREP_STRING: 182.int(159) ‘MAX_DATAREP_STRING’
               
               
*note MAX_LIBRARY_VERSION_STRING: 183.int(160) ‘MAX_LIBRARY_VERSION_STRING’
               
               
*note DATATYPE_NULL: 184.*note Datatype: c7. ‘DATATYPE_NULL’
               
               
*note UB: 185. *note Datatype: c7. ‘UB’
               
               
*note LB: 186. *note Datatype: c7. ‘LB’
               
               
*note PACKED: 187.*note Datatype: c7. ‘PACKED’
               
               
*note BYTE: 188.*note Datatype: c7. ‘BYTE’
               
               
*note AINT: 189.*note Datatype: c7. ‘AINT’
               
               
*note OFFSET: 18a.*note Datatype: c7. ‘OFFSET’
               
               
*note COUNT: 18b.*note Datatype: c7. ‘COUNT’
               
               
*note CHAR: 18c.*note Datatype: c7. ‘CHAR’
               
               
*note WCHAR: 18d.*note Datatype: c7. ‘WCHAR’
               
               
*note SIGNED_CHAR: 18e.*note Datatype: c7. ‘SIGNED_CHAR’
               
               
*note SHORT: 18f.*note Datatype: c7. ‘SHORT’
               
               
*note INT: 190.*note Datatype: c7. ‘INT’
               
               
*note LONG: 191.*note Datatype: c7. ‘LONG’
               
               
*note LONG_LONG: 192.*note Datatype: c7. ‘LONG_LONG’
               
               
*note UNSIGNED_CHAR: 193.*note Datatype: c7. ‘UNSIGNED_CHAR’
               
               
*note UNSIGNED_SHORT: 194.*note Datatype: c7. ‘UNSIGNED_SHORT’
               
               
*note UNSIGNED: 195.*note Datatype: c7. ‘UNSIGNED’
               
               
*note UNSIGNED_LONG: 196.*note Datatype: c7. ‘UNSIGNED_LONG’
               
               
*note UNSIGNED_LONG_LONG: 197.*note Datatype: c7. ‘UNSIGNED_LONG_LONG’
               
               
*note FLOAT: 198.*note Datatype: c7. ‘FLOAT’
               
               
*note DOUBLE: 199.*note Datatype: c7. ‘DOUBLE’
               
               
*note LONG_DOUBLE: 19a.*note Datatype: c7. ‘LONG_DOUBLE’
               
               
*note C_BOOL: 19b.*note Datatype: c7. ‘C_BOOL’
               
               
*note INT8_T: 19c.*note Datatype: c7. ‘INT8_T’
               
               
*note INT16_T: 19d.*note Datatype: c7. ‘INT16_T’
               
               
*note INT32_T: 19e.*note Datatype: c7. ‘INT32_T’
               
               
*note INT64_T: 19f.*note Datatype: c7. ‘INT64_T’
               
               
*note UINT8_T: 1a0.*note Datatype: c7. ‘UINT8_T’
               
               
*note UINT16_T: 1a1.*note Datatype: c7. ‘UINT16_T’
               
               
*note UINT32_T: 1a2.*note Datatype: c7. ‘UINT32_T’
               
               
*note UINT64_T: 1a3.*note Datatype: c7. ‘UINT64_T’
               
               
*note C_COMPLEX: 1a4.*note Datatype: c7. ‘C_COMPLEX’
               
               
*note C_FLOAT_COMPLEX: 1a5.*note Datatype: c7. ‘C_FLOAT_COMPLEX’
               
               
*note C_DOUBLE_COMPLEX: 1a6.*note Datatype: c7. ‘C_DOUBLE_COMPLEX’
               
               
*note C_LONG_DOUBLE_COMPLEX: 1a7.*note Datatype: c7. ‘C_LONG_DOUBLE_COMPLEX’
               
               
*note CXX_BOOL: 1a8.*note Datatype: c7. ‘CXX_BOOL’
               
               
*note CXX_FLOAT_COMPLEX: 1a9.*note Datatype: c7. ‘CXX_FLOAT_COMPLEX’
               
               
*note CXX_DOUBLE_COMPLEX: 1aa.*note Datatype: c7. ‘CXX_DOUBLE_COMPLEX’
               
               
*note CXX_LONG_DOUBLE_COMPLEX: 1ab.*note Datatype: c7. ‘CXX_LONG_DOUBLE_COMPLEX’
               
               
*note SHORT_INT: 1ac.*note Datatype: c7. ‘SHORT_INT’
               
               
*note INT_INT: 1ad.*note Datatype: c7. ‘INT_INT’
               
               
*note TWOINT: 1ae.*note Datatype: c7. ‘TWOINT’
               
               
*note LONG_INT: 1af.*note Datatype: c7. ‘LONG_INT’
               
               
*note FLOAT_INT: 1b0.*note Datatype: c7. ‘FLOAT_INT’
               
               
*note DOUBLE_INT: 1b1.*note Datatype: c7. ‘DOUBLE_INT’
               
               
*note LONG_DOUBLE_INT: 1b2.*note Datatype: c7. ‘LONG_DOUBLE_INT’
               
               
*note CHARACTER: 1b3.*note Datatype: c7. ‘CHARACTER’
               
               
*note LOGICAL: 1b4.*note Datatype: c7. ‘LOGICAL’
               
               
*note INTEGER: 1b5.*note Datatype: c7. ‘INTEGER’
               
               
*note REAL: 1b6.*note Datatype: c7. ‘REAL’
               
               
*note DOUBLE_PRECISION: 1b7.*note Datatype: c7. ‘DOUBLE_PRECISION’
               
               
*note COMPLEX: 1b8.*note Datatype: c7. ‘COMPLEX’
               
               
*note DOUBLE_COMPLEX: 1b9.*note Datatype: c7. ‘DOUBLE_COMPLEX’
               
               
*note LOGICAL1: 1ba.*note Datatype: c7. ‘LOGICAL1’
               
               
*note LOGICAL2: 1bb.*note Datatype: c7. ‘LOGICAL2’
               
               
*note LOGICAL4: 1bc.*note Datatype: c7. ‘LOGICAL4’
               
               
*note LOGICAL8: 1bd.*note Datatype: c7. ‘LOGICAL8’
               
               
*note INTEGER1: 1be.*note Datatype: c7. ‘INTEGER1’
               
               
*note INTEGER2: 1bf.*note Datatype: c7. ‘INTEGER2’
               
               
*note INTEGER4: 1c0.*note Datatype: c7. ‘INTEGER4’
               
               
*note INTEGER8: 1c1.*note Datatype: c7. ‘INTEGER8’
               
               
*note INTEGER16: 1c2.*note Datatype: c7. ‘INTEGER16’
               
               
*note REAL2: 1c3.*note Datatype: c7. ‘REAL2’
               
               
*note REAL4: 1c4.*note Datatype: c7. ‘REAL4’
               
               
*note REAL8: 1c5.*note Datatype: c7. ‘REAL8’
               
               
*note REAL16: 1c6.*note Datatype: c7. ‘REAL16’
               
               
*note COMPLEX4: 1c7.*note Datatype: c7. ‘COMPLEX4’
               
               
*note COMPLEX8: 1c8.*note Datatype: c7. ‘COMPLEX8’
               
               
*note COMPLEX16: 1c9.*note Datatype: c7. ‘COMPLEX16’
               
               
*note COMPLEX32: 1ca.*note Datatype: c7. ‘COMPLEX32’
               
               
*note UNSIGNED_INT: 1cb.*note Datatype: c7. ‘UNSIGNED_INT’
               
               
*note SIGNED_SHORT: 1cc.*note Datatype: c7. ‘SIGNED_SHORT’
               
               
*note SIGNED_INT: 1cd.*note Datatype: c7. ‘SIGNED_INT’
               
               
*note SIGNED_LONG: 1ce.*note Datatype: c7. ‘SIGNED_LONG’
               
               
*note SIGNED_LONG_LONG: 1cf.*note Datatype: c7. ‘SIGNED_LONG_LONG’
               
               
*note BOOL: 1d0.*note Datatype: c7. ‘BOOL’
               
               
*note SINT8_T: 1d1.*note Datatype: c7. ‘SINT8_T’
               
               
*note SINT16_T: 1d2.*note Datatype: c7. ‘SINT16_T’
               
               
*note SINT32_T: 1d3.*note Datatype: c7. ‘SINT32_T’
               
               
*note SINT64_T: 1d4.*note Datatype: c7. ‘SINT64_T’
               
               
*note F_BOOL: 1d5.*note Datatype: c7. ‘F_BOOL’
               
               
*note F_INT: 1d6.*note Datatype: c7. ‘F_INT’
               
               
*note F_FLOAT: 1d7.*note Datatype: c7. ‘F_FLOAT’
               
               
*note F_DOUBLE: 1d8.*note Datatype: c7. ‘F_DOUBLE’
               
               
*note F_COMPLEX: 1d9.*note Datatype: c7. ‘F_COMPLEX’
               
               
*note F_FLOAT_COMPLEX: 1da.*note Datatype: c7. ‘F_FLOAT_COMPLEX’
               
               
*note F_DOUBLE_COMPLEX: 1db.*note Datatype: c7. ‘F_DOUBLE_COMPLEX’
               
               
*note REQUEST_NULL: 1dc.*note Request: 3f. ‘REQUEST_NULL’
               
               
*note MESSAGE_NULL: 1dd.*note Message: cd. ‘MESSAGE_NULL’
               
               
*note MESSAGE_NO_PROC: 1de.*note Message: cd. ‘MESSAGE_NO_PROC’
               
               
*note OP_NULL: 1df.*note Op: ca. ‘OP_NULL’
               
               
*note MAX: 63. *note Op: ca. ‘MAX’
               
               
*note MIN: 1e0.*note Op: ca. ‘MIN’
               
               
*note SUM: 61. *note Op: ca. ‘SUM’
               
               
*note PROD: 62.*note Op: ca. ‘PROD’
               
               
*note LAND: 1e1.*note Op: ca. ‘LAND’
               
               
*note BAND: 1e2.*note Op: ca. ‘BAND’
               
               
*note LOR: 1e3.*note Op: ca. ‘LOR’
               
               
*note BOR: 1e4.*note Op: ca. ‘BOR’
               
               
*note LXOR: 1e5.*note Op: ca. ‘LXOR’
               
               
*note BXOR: 1e6.*note Op: ca. ‘BXOR’
               
               
*note MAXLOC: 1e7.*note Op: ca. ‘MAXLOC’
               
               
*note MINLOC: 1e8.*note Op: ca. ‘MINLOC’
               
               
*note REPLACE: 1e9.*note Op: ca. ‘REPLACE’
               
               
*note NO_OP: 1ea.*note Op: ca. ‘NO_OP’
               
               
*note GROUP_NULL: 1eb.*note Group: 24. ‘GROUP_NULL’
               
               
*note GROUP_EMPTY: 1ec.*note Group: 24. ‘GROUP_EMPTY’
               
               
*note INFO_NULL: 1ed.*note Info: cb. ‘INFO_NULL’
               
               
*note INFO_ENV: 1ee.*note Info: cb. ‘INFO_ENV’
               
               
*note ERRHANDLER_NULL: 1ef.*note Errhandler: ce. ‘ERRHANDLER_NULL’
               
               
*note ERRORS_RETURN: 95.*note Errhandler: ce. ‘ERRORS_RETURN’
               
               
*note ERRORS_ARE_FATAL: 96.*note Errhandler: ce. ‘ERRORS_ARE_FATAL’
               
               
*note COMM_NULL: 1f0.*note Comm: 1a. ‘COMM_NULL’
               
               
*note COMM_SELF: 1f.*note Intracomm: 1b. ‘COMM_SELF’
               
               
*note COMM_WORLD: 20.*note Intracomm: 1b. ‘COMM_WORLD’
               
               
*note WIN_NULL: 1f1.*note Win: 72. ‘WIN_NULL’
               
               
*note FILE_NULL: 1f2.*note File: 80. ‘FILE_NULL’
               
               
*note pickle: a3.*note Pickle: cf. ‘pickle’
               

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/functions.html#int

   (20) https://docs.python.org/3/library/functions.html#int

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/functions.html#int

   (24) https://docs.python.org/3/library/functions.html#int

   (25) https://docs.python.org/3/library/functions.html#int

   (26) https://docs.python.org/3/library/functions.html#int

   (27) https://docs.python.org/3/library/functions.html#int

   (28) https://docs.python.org/3/library/functions.html#int

   (29) https://docs.python.org/3/library/functions.html#int

   (30) https://docs.python.org/3/library/functions.html#int

   (31) https://docs.python.org/3/library/functions.html#int

   (32) https://docs.python.org/3/library/functions.html#int

   (33) https://docs.python.org/3/library/functions.html#int

   (34) https://docs.python.org/3/library/functions.html#int

   (35) https://docs.python.org/3/library/functions.html#int

   (36) https://docs.python.org/3/library/functions.html#int

   (37) https://docs.python.org/3/library/functions.html#int

   (38) https://docs.python.org/3/library/functions.html#int

   (39) https://docs.python.org/3/library/functions.html#int

   (40) https://docs.python.org/3/library/functions.html#int

   (41) https://docs.python.org/3/library/functions.html#int

   (42) https://docs.python.org/3/library/functions.html#int

   (43) https://docs.python.org/3/library/functions.html#int

   (44) https://docs.python.org/3/library/functions.html#int

   (45) https://docs.python.org/3/library/functions.html#int

   (46) https://docs.python.org/3/library/functions.html#int

   (47) https://docs.python.org/3/library/functions.html#int

   (48) https://docs.python.org/3/library/functions.html#int

   (49) https://docs.python.org/3/library/functions.html#int

   (50) https://docs.python.org/3/library/functions.html#int

   (51) https://docs.python.org/3/library/functions.html#int

   (52) https://docs.python.org/3/library/functions.html#int

   (53) https://docs.python.org/3/library/functions.html#int

   (54) https://docs.python.org/3/library/functions.html#int

   (55) https://docs.python.org/3/library/functions.html#int

   (56) https://docs.python.org/3/library/functions.html#int

   (57) https://docs.python.org/3/library/functions.html#int

   (58) https://docs.python.org/3/library/functions.html#int

   (59) https://docs.python.org/3/library/functions.html#int

   (60) https://docs.python.org/3/library/functions.html#int

   (61) https://docs.python.org/3/library/functions.html#int

   (62) https://docs.python.org/3/library/functions.html#int

   (63) https://docs.python.org/3/library/functions.html#int

   (64) https://docs.python.org/3/library/functions.html#int

   (65) https://docs.python.org/3/library/functions.html#int

   (66) https://docs.python.org/3/library/functions.html#int

   (67) https://docs.python.org/3/library/functions.html#int

   (68) https://docs.python.org/3/library/functions.html#int

   (69) https://docs.python.org/3/library/functions.html#int

   (70) https://docs.python.org/3/library/functions.html#int

   (71) https://docs.python.org/3/library/functions.html#int

   (72) https://docs.python.org/3/library/functions.html#int

   (73) https://docs.python.org/3/library/functions.html#int

   (74) https://docs.python.org/3/library/functions.html#int

   (75) https://docs.python.org/3/library/functions.html#int

   (76) https://docs.python.org/3/library/functions.html#int

   (77) https://docs.python.org/3/library/functions.html#int

   (78) https://docs.python.org/3/library/functions.html#int

   (79) https://docs.python.org/3/library/functions.html#int

   (80) https://docs.python.org/3/library/functions.html#int

   (81) https://docs.python.org/3/library/functions.html#int

   (82) https://docs.python.org/3/library/functions.html#int

   (83) https://docs.python.org/3/library/functions.html#int

   (84) https://docs.python.org/3/library/functions.html#int

   (85) https://docs.python.org/3/library/functions.html#int

   (86) https://docs.python.org/3/library/functions.html#int

   (87) https://docs.python.org/3/library/functions.html#int

   (88) https://docs.python.org/3/library/functions.html#int

   (89) https://docs.python.org/3/library/functions.html#int

   (90) https://docs.python.org/3/library/functions.html#int

   (91) https://docs.python.org/3/library/functions.html#int

   (92) https://docs.python.org/3/library/functions.html#int

   (93) https://docs.python.org/3/library/functions.html#int

   (94) https://docs.python.org/3/library/functions.html#int

   (95) https://docs.python.org/3/library/functions.html#int

   (96) https://docs.python.org/3/library/functions.html#int

   (97) https://docs.python.org/3/library/functions.html#int

   (98) https://docs.python.org/3/library/functions.html#int

   (99) https://docs.python.org/3/library/functions.html#int

   (100) https://docs.python.org/3/library/functions.html#int

   (101) https://docs.python.org/3/library/functions.html#int

   (102) https://docs.python.org/3/library/functions.html#int

   (103) https://docs.python.org/3/library/functions.html#int

   (104) https://docs.python.org/3/library/functions.html#int

   (105) https://docs.python.org/3/library/functions.html#int

   (106) https://docs.python.org/3/library/functions.html#int

   (107) https://docs.python.org/3/library/functions.html#int

   (108) https://docs.python.org/3/library/functions.html#int

   (109) https://docs.python.org/3/library/functions.html#int

   (110) https://docs.python.org/3/library/functions.html#int

   (111) https://docs.python.org/3/library/functions.html#int

   (112) https://docs.python.org/3/library/functions.html#int

   (113) https://docs.python.org/3/library/functions.html#int

   (114) https://docs.python.org/3/library/functions.html#int

   (115) https://docs.python.org/3/library/functions.html#int

   (116) https://docs.python.org/3/library/functions.html#int

   (117) https://docs.python.org/3/library/functions.html#int

   (118) https://docs.python.org/3/library/functions.html#int

   (119) https://docs.python.org/3/library/functions.html#int

   (120) https://docs.python.org/3/library/functions.html#int

   (121) https://docs.python.org/3/library/functions.html#int

   (122) https://docs.python.org/3/library/functions.html#int

   (123) https://docs.python.org/3/library/functions.html#int

   (124) https://docs.python.org/3/library/functions.html#int

   (125) https://docs.python.org/3/library/functions.html#int

   (126) https://docs.python.org/3/library/functions.html#int

   (127) https://docs.python.org/3/library/functions.html#int

   (128) https://docs.python.org/3/library/functions.html#int

   (129) https://docs.python.org/3/library/functions.html#int

   (130) https://docs.python.org/3/library/functions.html#int

   (131) https://docs.python.org/3/library/functions.html#int

   (132) https://docs.python.org/3/library/functions.html#int

   (133) https://docs.python.org/3/library/functions.html#int

   (134) https://docs.python.org/3/library/functions.html#int

   (135) https://docs.python.org/3/library/functions.html#int

   (136) https://docs.python.org/3/library/functions.html#int

   (137) https://docs.python.org/3/library/functions.html#int

   (138) https://docs.python.org/3/library/functions.html#int

   (139) https://docs.python.org/3/library/functions.html#int

   (140) https://docs.python.org/3/library/functions.html#int

   (141) https://docs.python.org/3/library/functions.html#int

   (142) https://docs.python.org/3/library/functions.html#int

   (143) https://docs.python.org/3/library/functions.html#int

   (144) https://docs.python.org/3/library/functions.html#int

   (145) https://docs.python.org/3/library/functions.html#int

   (146) https://docs.python.org/3/library/functions.html#int

   (147) https://docs.python.org/3/library/functions.html#int

   (148) https://docs.python.org/3/library/functions.html#int

   (149) https://docs.python.org/3/library/functions.html#int

   (150) https://docs.python.org/3/library/functions.html#int

   (151) https://docs.python.org/3/library/functions.html#int

   (152) https://docs.python.org/3/library/functions.html#int

   (153) https://docs.python.org/3/library/functions.html#int

   (154) https://docs.python.org/3/library/functions.html#int

   (155) https://docs.python.org/3/library/functions.html#int

   (156) https://docs.python.org/3/library/functions.html#int

   (157) https://docs.python.org/3/library/functions.html#int

   (158) https://docs.python.org/3/library/functions.html#int

   (159) https://docs.python.org/3/library/functions.html#int

   (160) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI UNDEFINED,  Next: mpi4py MPI ANY_SOURCE,  Prev: mpi4py MPI get_vendor,  Up: mpi4py MPI<2>

9.1.56 mpi4py.MPI.UNDEFINED
---------------------------

 -- Data: mpi4py.MPI.UNDEFINED: int(1) = UNDEFINED

     int(2) ‘UNDEFINED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ANY_SOURCE,  Next: mpi4py MPI ANY_TAG,  Prev: mpi4py MPI UNDEFINED,  Up: mpi4py MPI<2>

9.1.57 mpi4py.MPI.ANY_SOURCE
----------------------------

 -- Data: mpi4py.MPI.ANY_SOURCE: int(1) = ANY_SOURCE

     int(2) ‘ANY_SOURCE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ANY_TAG,  Next: mpi4py MPI PROC_NULL,  Prev: mpi4py MPI ANY_SOURCE,  Up: mpi4py MPI<2>

9.1.58 mpi4py.MPI.ANY_TAG
-------------------------

 -- Data: mpi4py.MPI.ANY_TAG: int(1) = ANY_TAG

     int(2) ‘ANY_TAG’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI PROC_NULL,  Next: mpi4py MPI ROOT,  Prev: mpi4py MPI ANY_TAG,  Up: mpi4py MPI<2>

9.1.59 mpi4py.MPI.PROC_NULL
---------------------------

 -- Data: mpi4py.MPI.PROC_NULL: int(1) = PROC_NULL

     int(2) ‘PROC_NULL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ROOT,  Next: mpi4py MPI BOTTOM,  Prev: mpi4py MPI PROC_NULL,  Up: mpi4py MPI<2>

9.1.60 mpi4py.MPI.ROOT
----------------------

 -- Data: mpi4py.MPI.ROOT: int(1) = ROOT

     int(2) ‘ROOT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI BOTTOM,  Next: mpi4py MPI IN_PLACE,  Prev: mpi4py MPI ROOT,  Up: mpi4py MPI<2>

9.1.61 mpi4py.MPI.BOTTOM
------------------------

 -- Data: mpi4py.MPI.BOTTOM: Bottom = BOTTOM

     ‘Bottom’ ‘BOTTOM’


File: mpi4py.info,  Node: mpi4py MPI IN_PLACE,  Next: mpi4py MPI KEYVAL_INVALID,  Prev: mpi4py MPI BOTTOM,  Up: mpi4py MPI<2>

9.1.62 mpi4py.MPI.IN_PLACE
--------------------------

 -- Data: mpi4py.MPI.IN_PLACE: InPlace = IN_PLACE

     ‘InPlace’ ‘IN_PLACE’


File: mpi4py.info,  Node: mpi4py MPI KEYVAL_INVALID,  Next: mpi4py MPI TAG_UB,  Prev: mpi4py MPI IN_PLACE,  Up: mpi4py MPI<2>

9.1.63 mpi4py.MPI.KEYVAL_INVALID
--------------------------------

 -- Data: mpi4py.MPI.KEYVAL_INVALID: int(1) = KEYVAL_INVALID

     int(2) ‘KEYVAL_INVALID’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI TAG_UB,  Next: mpi4py MPI HOST,  Prev: mpi4py MPI KEYVAL_INVALID,  Up: mpi4py MPI<2>

9.1.64 mpi4py.MPI.TAG_UB
------------------------

 -- Data: mpi4py.MPI.TAG_UB: int(1) = TAG_UB

     int(2) ‘TAG_UB’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI HOST,  Next: mpi4py MPI IO,  Prev: mpi4py MPI TAG_UB,  Up: mpi4py MPI<2>

9.1.65 mpi4py.MPI.HOST
----------------------

 -- Data: mpi4py.MPI.HOST: int(1) = HOST

     int(2) ‘HOST’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI IO,  Next: mpi4py MPI WTIME_IS_GLOBAL,  Prev: mpi4py MPI HOST,  Up: mpi4py MPI<2>

9.1.66 mpi4py.MPI.IO
--------------------

 -- Data: mpi4py.MPI.IO: int(1) = IO

     int(2) ‘IO’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WTIME_IS_GLOBAL,  Next: mpi4py MPI UNIVERSE_SIZE,  Prev: mpi4py MPI IO,  Up: mpi4py MPI<2>

9.1.67 mpi4py.MPI.WTIME_IS_GLOBAL
---------------------------------

 -- Data: mpi4py.MPI.WTIME_IS_GLOBAL: int(1) = WTIME_IS_GLOBAL

     int(2) ‘WTIME_IS_GLOBAL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI UNIVERSE_SIZE,  Next: mpi4py MPI APPNUM,  Prev: mpi4py MPI WTIME_IS_GLOBAL,  Up: mpi4py MPI<2>

9.1.68 mpi4py.MPI.UNIVERSE_SIZE
-------------------------------

 -- Data: mpi4py.MPI.UNIVERSE_SIZE: int(1) = UNIVERSE_SIZE

     int(2) ‘UNIVERSE_SIZE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI APPNUM,  Next: mpi4py MPI LASTUSEDCODE,  Prev: mpi4py MPI UNIVERSE_SIZE,  Up: mpi4py MPI<2>

9.1.69 mpi4py.MPI.APPNUM
------------------------

 -- Data: mpi4py.MPI.APPNUM: int(1) = APPNUM

     int(2) ‘APPNUM’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI LASTUSEDCODE,  Next: mpi4py MPI WIN_BASE,  Prev: mpi4py MPI APPNUM,  Up: mpi4py MPI<2>

9.1.70 mpi4py.MPI.LASTUSEDCODE
------------------------------

 -- Data: mpi4py.MPI.LASTUSEDCODE: int(1) = LASTUSEDCODE

     int(2) ‘LASTUSEDCODE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_BASE,  Next: mpi4py MPI WIN_SIZE,  Prev: mpi4py MPI LASTUSEDCODE,  Up: mpi4py MPI<2>

9.1.71 mpi4py.MPI.WIN_BASE
--------------------------

 -- Data: mpi4py.MPI.WIN_BASE: int(1) = WIN_BASE

     int(2) ‘WIN_BASE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_SIZE,  Next: mpi4py MPI WIN_DISP_UNIT,  Prev: mpi4py MPI WIN_BASE,  Up: mpi4py MPI<2>

9.1.72 mpi4py.MPI.WIN_SIZE
--------------------------

 -- Data: mpi4py.MPI.WIN_SIZE: int(1) = WIN_SIZE

     int(2) ‘WIN_SIZE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_DISP_UNIT,  Next: mpi4py MPI WIN_CREATE_FLAVOR,  Prev: mpi4py MPI WIN_SIZE,  Up: mpi4py MPI<2>

9.1.73 mpi4py.MPI.WIN_DISP_UNIT
-------------------------------

 -- Data: mpi4py.MPI.WIN_DISP_UNIT: int(1) = WIN_DISP_UNIT

     int(2) ‘WIN_DISP_UNIT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_CREATE_FLAVOR,  Next: mpi4py MPI WIN_FLAVOR,  Prev: mpi4py MPI WIN_DISP_UNIT,  Up: mpi4py MPI<2>

9.1.74 mpi4py.MPI.WIN_CREATE_FLAVOR
-----------------------------------

 -- Data: mpi4py.MPI.WIN_CREATE_FLAVOR: int(1) = WIN_CREATE_FLAVOR

     int(2) ‘WIN_CREATE_FLAVOR’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_FLAVOR,  Next: mpi4py MPI WIN_MODEL,  Prev: mpi4py MPI WIN_CREATE_FLAVOR,  Up: mpi4py MPI<2>

9.1.75 mpi4py.MPI.WIN_FLAVOR
----------------------------

 -- Data: mpi4py.MPI.WIN_FLAVOR: int(1) = WIN_FLAVOR

     int(2) ‘WIN_FLAVOR’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_MODEL,  Next: mpi4py MPI SUCCESS,  Prev: mpi4py MPI WIN_FLAVOR,  Up: mpi4py MPI<2>

9.1.76 mpi4py.MPI.WIN_MODEL
---------------------------

 -- Data: mpi4py.MPI.WIN_MODEL: int(1) = WIN_MODEL

     int(2) ‘WIN_MODEL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI SUCCESS,  Next: mpi4py MPI ERR_LASTCODE,  Prev: mpi4py MPI WIN_MODEL,  Up: mpi4py MPI<2>

9.1.77 mpi4py.MPI.SUCCESS
-------------------------

 -- Data: mpi4py.MPI.SUCCESS: int(1) = SUCCESS

     int(2) ‘SUCCESS’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_LASTCODE,  Next: mpi4py MPI ERR_COMM,  Prev: mpi4py MPI SUCCESS,  Up: mpi4py MPI<2>

9.1.78 mpi4py.MPI.ERR_LASTCODE
------------------------------

 -- Data: mpi4py.MPI.ERR_LASTCODE: int(1) = ERR_LASTCODE

     int(2) ‘ERR_LASTCODE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_COMM,  Next: mpi4py MPI ERR_GROUP,  Prev: mpi4py MPI ERR_LASTCODE,  Up: mpi4py MPI<2>

9.1.79 mpi4py.MPI.ERR_COMM
--------------------------

 -- Data: mpi4py.MPI.ERR_COMM: int(1) = ERR_COMM

     int(2) ‘ERR_COMM’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_GROUP,  Next: mpi4py MPI ERR_TYPE,  Prev: mpi4py MPI ERR_COMM,  Up: mpi4py MPI<2>

9.1.80 mpi4py.MPI.ERR_GROUP
---------------------------

 -- Data: mpi4py.MPI.ERR_GROUP: int(1) = ERR_GROUP

     int(2) ‘ERR_GROUP’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_TYPE,  Next: mpi4py MPI ERR_REQUEST,  Prev: mpi4py MPI ERR_GROUP,  Up: mpi4py MPI<2>

9.1.81 mpi4py.MPI.ERR_TYPE
--------------------------

 -- Data: mpi4py.MPI.ERR_TYPE: int(1) = ERR_TYPE

     int(2) ‘ERR_TYPE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_REQUEST,  Next: mpi4py MPI ERR_OP,  Prev: mpi4py MPI ERR_TYPE,  Up: mpi4py MPI<2>

9.1.82 mpi4py.MPI.ERR_REQUEST
-----------------------------

 -- Data: mpi4py.MPI.ERR_REQUEST: int(1) = ERR_REQUEST

     int(2) ‘ERR_REQUEST’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_OP,  Next: mpi4py MPI ERR_BUFFER,  Prev: mpi4py MPI ERR_REQUEST,  Up: mpi4py MPI<2>

9.1.83 mpi4py.MPI.ERR_OP
------------------------

 -- Data: mpi4py.MPI.ERR_OP: int(1) = ERR_OP

     int(2) ‘ERR_OP’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_BUFFER,  Next: mpi4py MPI ERR_COUNT,  Prev: mpi4py MPI ERR_OP,  Up: mpi4py MPI<2>

9.1.84 mpi4py.MPI.ERR_BUFFER
----------------------------

 -- Data: mpi4py.MPI.ERR_BUFFER: int(1) = ERR_BUFFER

     int(2) ‘ERR_BUFFER’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_COUNT,  Next: mpi4py MPI ERR_TAG,  Prev: mpi4py MPI ERR_BUFFER,  Up: mpi4py MPI<2>

9.1.85 mpi4py.MPI.ERR_COUNT
---------------------------

 -- Data: mpi4py.MPI.ERR_COUNT: int(1) = ERR_COUNT

     int(2) ‘ERR_COUNT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_TAG,  Next: mpi4py MPI ERR_RANK,  Prev: mpi4py MPI ERR_COUNT,  Up: mpi4py MPI<2>

9.1.86 mpi4py.MPI.ERR_TAG
-------------------------

 -- Data: mpi4py.MPI.ERR_TAG: int(1) = ERR_TAG

     int(2) ‘ERR_TAG’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_RANK,  Next: mpi4py MPI ERR_ROOT,  Prev: mpi4py MPI ERR_TAG,  Up: mpi4py MPI<2>

9.1.87 mpi4py.MPI.ERR_RANK
--------------------------

 -- Data: mpi4py.MPI.ERR_RANK: int(1) = ERR_RANK

     int(2) ‘ERR_RANK’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_ROOT,  Next: mpi4py MPI ERR_TRUNCATE,  Prev: mpi4py MPI ERR_RANK,  Up: mpi4py MPI<2>

9.1.88 mpi4py.MPI.ERR_ROOT
--------------------------

 -- Data: mpi4py.MPI.ERR_ROOT: int(1) = ERR_ROOT

     int(2) ‘ERR_ROOT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_TRUNCATE,  Next: mpi4py MPI ERR_IN_STATUS,  Prev: mpi4py MPI ERR_ROOT,  Up: mpi4py MPI<2>

9.1.89 mpi4py.MPI.ERR_TRUNCATE
------------------------------

 -- Data: mpi4py.MPI.ERR_TRUNCATE: int(1) = ERR_TRUNCATE

     int(2) ‘ERR_TRUNCATE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_IN_STATUS,  Next: mpi4py MPI ERR_PENDING,  Prev: mpi4py MPI ERR_TRUNCATE,  Up: mpi4py MPI<2>

9.1.90 mpi4py.MPI.ERR_IN_STATUS
-------------------------------

 -- Data: mpi4py.MPI.ERR_IN_STATUS: int(1) = ERR_IN_STATUS

     int(2) ‘ERR_IN_STATUS’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_PENDING,  Next: mpi4py MPI ERR_TOPOLOGY,  Prev: mpi4py MPI ERR_IN_STATUS,  Up: mpi4py MPI<2>

9.1.91 mpi4py.MPI.ERR_PENDING
-----------------------------

 -- Data: mpi4py.MPI.ERR_PENDING: int(1) = ERR_PENDING

     int(2) ‘ERR_PENDING’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_TOPOLOGY,  Next: mpi4py MPI ERR_DIMS,  Prev: mpi4py MPI ERR_PENDING,  Up: mpi4py MPI<2>

9.1.92 mpi4py.MPI.ERR_TOPOLOGY
------------------------------

 -- Data: mpi4py.MPI.ERR_TOPOLOGY: int(1) = ERR_TOPOLOGY

     int(2) ‘ERR_TOPOLOGY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_DIMS,  Next: mpi4py MPI ERR_ARG,  Prev: mpi4py MPI ERR_TOPOLOGY,  Up: mpi4py MPI<2>

9.1.93 mpi4py.MPI.ERR_DIMS
--------------------------

 -- Data: mpi4py.MPI.ERR_DIMS: int(1) = ERR_DIMS

     int(2) ‘ERR_DIMS’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_ARG,  Next: mpi4py MPI ERR_OTHER,  Prev: mpi4py MPI ERR_DIMS,  Up: mpi4py MPI<2>

9.1.94 mpi4py.MPI.ERR_ARG
-------------------------

 -- Data: mpi4py.MPI.ERR_ARG: int(1) = ERR_ARG

     int(2) ‘ERR_ARG’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_OTHER,  Next: mpi4py MPI ERR_UNKNOWN,  Prev: mpi4py MPI ERR_ARG,  Up: mpi4py MPI<2>

9.1.95 mpi4py.MPI.ERR_OTHER
---------------------------

 -- Data: mpi4py.MPI.ERR_OTHER: int(1) = ERR_OTHER

     int(2) ‘ERR_OTHER’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_UNKNOWN,  Next: mpi4py MPI ERR_INTERN,  Prev: mpi4py MPI ERR_OTHER,  Up: mpi4py MPI<2>

9.1.96 mpi4py.MPI.ERR_UNKNOWN
-----------------------------

 -- Data: mpi4py.MPI.ERR_UNKNOWN: int(1) = ERR_UNKNOWN

     int(2) ‘ERR_UNKNOWN’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_INTERN,  Next: mpi4py MPI ERR_INFO,  Prev: mpi4py MPI ERR_UNKNOWN,  Up: mpi4py MPI<2>

9.1.97 mpi4py.MPI.ERR_INTERN
----------------------------

 -- Data: mpi4py.MPI.ERR_INTERN: int(1) = ERR_INTERN

     int(2) ‘ERR_INTERN’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_INFO,  Next: mpi4py MPI ERR_FILE,  Prev: mpi4py MPI ERR_INTERN,  Up: mpi4py MPI<2>

9.1.98 mpi4py.MPI.ERR_INFO
--------------------------

 -- Data: mpi4py.MPI.ERR_INFO: int(1) = ERR_INFO

     int(2) ‘ERR_INFO’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_FILE,  Next: mpi4py MPI ERR_WIN,  Prev: mpi4py MPI ERR_INFO,  Up: mpi4py MPI<2>

9.1.99 mpi4py.MPI.ERR_FILE
--------------------------

 -- Data: mpi4py.MPI.ERR_FILE: int(1) = ERR_FILE

     int(2) ‘ERR_FILE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_WIN,  Next: mpi4py MPI ERR_KEYVAL,  Prev: mpi4py MPI ERR_FILE,  Up: mpi4py MPI<2>

9.1.100 mpi4py.MPI.ERR_WIN
--------------------------

 -- Data: mpi4py.MPI.ERR_WIN: int(1) = ERR_WIN

     int(2) ‘ERR_WIN’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_KEYVAL,  Next: mpi4py MPI ERR_INFO_KEY,  Prev: mpi4py MPI ERR_WIN,  Up: mpi4py MPI<2>

9.1.101 mpi4py.MPI.ERR_KEYVAL
-----------------------------

 -- Data: mpi4py.MPI.ERR_KEYVAL: int(1) = ERR_KEYVAL

     int(2) ‘ERR_KEYVAL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_INFO_KEY,  Next: mpi4py MPI ERR_INFO_VALUE,  Prev: mpi4py MPI ERR_KEYVAL,  Up: mpi4py MPI<2>

9.1.102 mpi4py.MPI.ERR_INFO_KEY
-------------------------------

 -- Data: mpi4py.MPI.ERR_INFO_KEY: int(1) = ERR_INFO_KEY

     int(2) ‘ERR_INFO_KEY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_INFO_VALUE,  Next: mpi4py MPI ERR_INFO_NOKEY,  Prev: mpi4py MPI ERR_INFO_KEY,  Up: mpi4py MPI<2>

9.1.103 mpi4py.MPI.ERR_INFO_VALUE
---------------------------------

 -- Data: mpi4py.MPI.ERR_INFO_VALUE: int(1) = ERR_INFO_VALUE

     int(2) ‘ERR_INFO_VALUE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_INFO_NOKEY,  Next: mpi4py MPI ERR_ACCESS,  Prev: mpi4py MPI ERR_INFO_VALUE,  Up: mpi4py MPI<2>

9.1.104 mpi4py.MPI.ERR_INFO_NOKEY
---------------------------------

 -- Data: mpi4py.MPI.ERR_INFO_NOKEY: int(1) = ERR_INFO_NOKEY

     int(2) ‘ERR_INFO_NOKEY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_ACCESS,  Next: mpi4py MPI ERR_AMODE,  Prev: mpi4py MPI ERR_INFO_NOKEY,  Up: mpi4py MPI<2>

9.1.105 mpi4py.MPI.ERR_ACCESS
-----------------------------

 -- Data: mpi4py.MPI.ERR_ACCESS: int(1) = ERR_ACCESS

     int(2) ‘ERR_ACCESS’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_AMODE,  Next: mpi4py MPI ERR_BAD_FILE,  Prev: mpi4py MPI ERR_ACCESS,  Up: mpi4py MPI<2>

9.1.106 mpi4py.MPI.ERR_AMODE
----------------------------

 -- Data: mpi4py.MPI.ERR_AMODE: int(1) = ERR_AMODE

     int(2) ‘ERR_AMODE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_BAD_FILE,  Next: mpi4py MPI ERR_FILE_EXISTS,  Prev: mpi4py MPI ERR_AMODE,  Up: mpi4py MPI<2>

9.1.107 mpi4py.MPI.ERR_BAD_FILE
-------------------------------

 -- Data: mpi4py.MPI.ERR_BAD_FILE: int(1) = ERR_BAD_FILE

     int(2) ‘ERR_BAD_FILE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_FILE_EXISTS,  Next: mpi4py MPI ERR_FILE_IN_USE,  Prev: mpi4py MPI ERR_BAD_FILE,  Up: mpi4py MPI<2>

9.1.108 mpi4py.MPI.ERR_FILE_EXISTS
----------------------------------

 -- Data: mpi4py.MPI.ERR_FILE_EXISTS: int(1) = ERR_FILE_EXISTS

     int(2) ‘ERR_FILE_EXISTS’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_FILE_IN_USE,  Next: mpi4py MPI ERR_NO_SPACE,  Prev: mpi4py MPI ERR_FILE_EXISTS,  Up: mpi4py MPI<2>

9.1.109 mpi4py.MPI.ERR_FILE_IN_USE
----------------------------------

 -- Data: mpi4py.MPI.ERR_FILE_IN_USE: int(1) = ERR_FILE_IN_USE

     int(2) ‘ERR_FILE_IN_USE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_NO_SPACE,  Next: mpi4py MPI ERR_NO_SUCH_FILE,  Prev: mpi4py MPI ERR_FILE_IN_USE,  Up: mpi4py MPI<2>

9.1.110 mpi4py.MPI.ERR_NO_SPACE
-------------------------------

 -- Data: mpi4py.MPI.ERR_NO_SPACE: int(1) = ERR_NO_SPACE

     int(2) ‘ERR_NO_SPACE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_NO_SUCH_FILE,  Next: mpi4py MPI ERR_IO,  Prev: mpi4py MPI ERR_NO_SPACE,  Up: mpi4py MPI<2>

9.1.111 mpi4py.MPI.ERR_NO_SUCH_FILE
-----------------------------------

 -- Data: mpi4py.MPI.ERR_NO_SUCH_FILE: int(1) = ERR_NO_SUCH_FILE

     int(2) ‘ERR_NO_SUCH_FILE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_IO,  Next: mpi4py MPI ERR_READ_ONLY,  Prev: mpi4py MPI ERR_NO_SUCH_FILE,  Up: mpi4py MPI<2>

9.1.112 mpi4py.MPI.ERR_IO
-------------------------

 -- Data: mpi4py.MPI.ERR_IO: int(1) = ERR_IO

     int(2) ‘ERR_IO’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_READ_ONLY,  Next: mpi4py MPI ERR_CONVERSION,  Prev: mpi4py MPI ERR_IO,  Up: mpi4py MPI<2>

9.1.113 mpi4py.MPI.ERR_READ_ONLY
--------------------------------

 -- Data: mpi4py.MPI.ERR_READ_ONLY: int(1) = ERR_READ_ONLY

     int(2) ‘ERR_READ_ONLY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_CONVERSION,  Next: mpi4py MPI ERR_DUP_DATAREP,  Prev: mpi4py MPI ERR_READ_ONLY,  Up: mpi4py MPI<2>

9.1.114 mpi4py.MPI.ERR_CONVERSION
---------------------------------

 -- Data: mpi4py.MPI.ERR_CONVERSION: int(1) = ERR_CONVERSION

     int(2) ‘ERR_CONVERSION’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_DUP_DATAREP,  Next: mpi4py MPI ERR_UNSUPPORTED_DATAREP,  Prev: mpi4py MPI ERR_CONVERSION,  Up: mpi4py MPI<2>

9.1.115 mpi4py.MPI.ERR_DUP_DATAREP
----------------------------------

 -- Data: mpi4py.MPI.ERR_DUP_DATAREP: int(1) = ERR_DUP_DATAREP

     int(2) ‘ERR_DUP_DATAREP’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_UNSUPPORTED_DATAREP,  Next: mpi4py MPI ERR_UNSUPPORTED_OPERATION,  Prev: mpi4py MPI ERR_DUP_DATAREP,  Up: mpi4py MPI<2>

9.1.116 mpi4py.MPI.ERR_UNSUPPORTED_DATAREP
------------------------------------------

 -- Data: mpi4py.MPI.ERR_UNSUPPORTED_DATAREP: int(1) =
          ERR_UNSUPPORTED_DATAREP

     int(2) ‘ERR_UNSUPPORTED_DATAREP’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_UNSUPPORTED_OPERATION,  Next: mpi4py MPI ERR_NAME,  Prev: mpi4py MPI ERR_UNSUPPORTED_DATAREP,  Up: mpi4py MPI<2>

9.1.117 mpi4py.MPI.ERR_UNSUPPORTED_OPERATION
--------------------------------------------

 -- Data: mpi4py.MPI.ERR_UNSUPPORTED_OPERATION: int(1) =
          ERR_UNSUPPORTED_OPERATION

     int(2) ‘ERR_UNSUPPORTED_OPERATION’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_NAME,  Next: mpi4py MPI ERR_NO_MEM,  Prev: mpi4py MPI ERR_UNSUPPORTED_OPERATION,  Up: mpi4py MPI<2>

9.1.118 mpi4py.MPI.ERR_NAME
---------------------------

 -- Data: mpi4py.MPI.ERR_NAME: int(1) = ERR_NAME

     int(2) ‘ERR_NAME’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_NO_MEM,  Next: mpi4py MPI ERR_NOT_SAME,  Prev: mpi4py MPI ERR_NAME,  Up: mpi4py MPI<2>

9.1.119 mpi4py.MPI.ERR_NO_MEM
-----------------------------

 -- Data: mpi4py.MPI.ERR_NO_MEM: int(1) = ERR_NO_MEM

     int(2) ‘ERR_NO_MEM’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_NOT_SAME,  Next: mpi4py MPI ERR_PORT,  Prev: mpi4py MPI ERR_NO_MEM,  Up: mpi4py MPI<2>

9.1.120 mpi4py.MPI.ERR_NOT_SAME
-------------------------------

 -- Data: mpi4py.MPI.ERR_NOT_SAME: int(1) = ERR_NOT_SAME

     int(2) ‘ERR_NOT_SAME’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_PORT,  Next: mpi4py MPI ERR_QUOTA,  Prev: mpi4py MPI ERR_NOT_SAME,  Up: mpi4py MPI<2>

9.1.121 mpi4py.MPI.ERR_PORT
---------------------------

 -- Data: mpi4py.MPI.ERR_PORT: int(1) = ERR_PORT

     int(2) ‘ERR_PORT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_QUOTA,  Next: mpi4py MPI ERR_SERVICE,  Prev: mpi4py MPI ERR_PORT,  Up: mpi4py MPI<2>

9.1.122 mpi4py.MPI.ERR_QUOTA
----------------------------

 -- Data: mpi4py.MPI.ERR_QUOTA: int(1) = ERR_QUOTA

     int(2) ‘ERR_QUOTA’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_SERVICE,  Next: mpi4py MPI ERR_SPAWN,  Prev: mpi4py MPI ERR_QUOTA,  Up: mpi4py MPI<2>

9.1.123 mpi4py.MPI.ERR_SERVICE
------------------------------

 -- Data: mpi4py.MPI.ERR_SERVICE: int(1) = ERR_SERVICE

     int(2) ‘ERR_SERVICE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_SPAWN,  Next: mpi4py MPI ERR_BASE,  Prev: mpi4py MPI ERR_SERVICE,  Up: mpi4py MPI<2>

9.1.124 mpi4py.MPI.ERR_SPAWN
----------------------------

 -- Data: mpi4py.MPI.ERR_SPAWN: int(1) = ERR_SPAWN

     int(2) ‘ERR_SPAWN’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_BASE,  Next: mpi4py MPI ERR_SIZE,  Prev: mpi4py MPI ERR_SPAWN,  Up: mpi4py MPI<2>

9.1.125 mpi4py.MPI.ERR_BASE
---------------------------

 -- Data: mpi4py.MPI.ERR_BASE: int(1) = ERR_BASE

     int(2) ‘ERR_BASE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_SIZE,  Next: mpi4py MPI ERR_DISP,  Prev: mpi4py MPI ERR_BASE,  Up: mpi4py MPI<2>

9.1.126 mpi4py.MPI.ERR_SIZE
---------------------------

 -- Data: mpi4py.MPI.ERR_SIZE: int(1) = ERR_SIZE

     int(2) ‘ERR_SIZE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_DISP,  Next: mpi4py MPI ERR_ASSERT,  Prev: mpi4py MPI ERR_SIZE,  Up: mpi4py MPI<2>

9.1.127 mpi4py.MPI.ERR_DISP
---------------------------

 -- Data: mpi4py.MPI.ERR_DISP: int(1) = ERR_DISP

     int(2) ‘ERR_DISP’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_ASSERT,  Next: mpi4py MPI ERR_LOCKTYPE,  Prev: mpi4py MPI ERR_DISP,  Up: mpi4py MPI<2>

9.1.128 mpi4py.MPI.ERR_ASSERT
-----------------------------

 -- Data: mpi4py.MPI.ERR_ASSERT: int(1) = ERR_ASSERT

     int(2) ‘ERR_ASSERT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_LOCKTYPE,  Next: mpi4py MPI ERR_RMA_CONFLICT,  Prev: mpi4py MPI ERR_ASSERT,  Up: mpi4py MPI<2>

9.1.129 mpi4py.MPI.ERR_LOCKTYPE
-------------------------------

 -- Data: mpi4py.MPI.ERR_LOCKTYPE: int(1) = ERR_LOCKTYPE

     int(2) ‘ERR_LOCKTYPE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_RMA_CONFLICT,  Next: mpi4py MPI ERR_RMA_SYNC,  Prev: mpi4py MPI ERR_LOCKTYPE,  Up: mpi4py MPI<2>

9.1.130 mpi4py.MPI.ERR_RMA_CONFLICT
-----------------------------------

 -- Data: mpi4py.MPI.ERR_RMA_CONFLICT: int(1) = ERR_RMA_CONFLICT

     int(2) ‘ERR_RMA_CONFLICT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_RMA_SYNC,  Next: mpi4py MPI ERR_RMA_RANGE,  Prev: mpi4py MPI ERR_RMA_CONFLICT,  Up: mpi4py MPI<2>

9.1.131 mpi4py.MPI.ERR_RMA_SYNC
-------------------------------

 -- Data: mpi4py.MPI.ERR_RMA_SYNC: int(1) = ERR_RMA_SYNC

     int(2) ‘ERR_RMA_SYNC’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_RMA_RANGE,  Next: mpi4py MPI ERR_RMA_ATTACH,  Prev: mpi4py MPI ERR_RMA_SYNC,  Up: mpi4py MPI<2>

9.1.132 mpi4py.MPI.ERR_RMA_RANGE
--------------------------------

 -- Data: mpi4py.MPI.ERR_RMA_RANGE: int(1) = ERR_RMA_RANGE

     int(2) ‘ERR_RMA_RANGE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_RMA_ATTACH,  Next: mpi4py MPI ERR_RMA_SHARED,  Prev: mpi4py MPI ERR_RMA_RANGE,  Up: mpi4py MPI<2>

9.1.133 mpi4py.MPI.ERR_RMA_ATTACH
---------------------------------

 -- Data: mpi4py.MPI.ERR_RMA_ATTACH: int(1) = ERR_RMA_ATTACH

     int(2) ‘ERR_RMA_ATTACH’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_RMA_SHARED,  Next: mpi4py MPI ERR_RMA_FLAVOR,  Prev: mpi4py MPI ERR_RMA_ATTACH,  Up: mpi4py MPI<2>

9.1.134 mpi4py.MPI.ERR_RMA_SHARED
---------------------------------

 -- Data: mpi4py.MPI.ERR_RMA_SHARED: int(1) = ERR_RMA_SHARED

     int(2) ‘ERR_RMA_SHARED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_RMA_FLAVOR,  Next: mpi4py MPI ORDER_C,  Prev: mpi4py MPI ERR_RMA_SHARED,  Up: mpi4py MPI<2>

9.1.135 mpi4py.MPI.ERR_RMA_FLAVOR
---------------------------------

 -- Data: mpi4py.MPI.ERR_RMA_FLAVOR: int(1) = ERR_RMA_FLAVOR

     int(2) ‘ERR_RMA_FLAVOR’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ORDER_C,  Next: mpi4py MPI ORDER_FORTRAN,  Prev: mpi4py MPI ERR_RMA_FLAVOR,  Up: mpi4py MPI<2>

9.1.136 mpi4py.MPI.ORDER_C
--------------------------

 -- Data: mpi4py.MPI.ORDER_C: int(1) = ORDER_C

     int(2) ‘ORDER_C’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ORDER_FORTRAN,  Next: mpi4py MPI ORDER_F,  Prev: mpi4py MPI ORDER_C,  Up: mpi4py MPI<2>

9.1.137 mpi4py.MPI.ORDER_FORTRAN
--------------------------------

 -- Data: mpi4py.MPI.ORDER_FORTRAN: int(1) = ORDER_FORTRAN

     int(2) ‘ORDER_FORTRAN’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ORDER_F,  Next: mpi4py MPI TYPECLASS_INTEGER,  Prev: mpi4py MPI ORDER_FORTRAN,  Up: mpi4py MPI<2>

9.1.138 mpi4py.MPI.ORDER_F
--------------------------

 -- Data: mpi4py.MPI.ORDER_F: int(1) = ORDER_F

     int(2) ‘ORDER_F’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI TYPECLASS_INTEGER,  Next: mpi4py MPI TYPECLASS_REAL,  Prev: mpi4py MPI ORDER_F,  Up: mpi4py MPI<2>

9.1.139 mpi4py.MPI.TYPECLASS_INTEGER
------------------------------------

 -- Data: mpi4py.MPI.TYPECLASS_INTEGER: int(1) = TYPECLASS_INTEGER

     int(2) ‘TYPECLASS_INTEGER’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI TYPECLASS_REAL,  Next: mpi4py MPI TYPECLASS_COMPLEX,  Prev: mpi4py MPI TYPECLASS_INTEGER,  Up: mpi4py MPI<2>

9.1.140 mpi4py.MPI.TYPECLASS_REAL
---------------------------------

 -- Data: mpi4py.MPI.TYPECLASS_REAL: int(1) = TYPECLASS_REAL

     int(2) ‘TYPECLASS_REAL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI TYPECLASS_COMPLEX,  Next: mpi4py MPI DISTRIBUTE_NONE,  Prev: mpi4py MPI TYPECLASS_REAL,  Up: mpi4py MPI<2>

9.1.141 mpi4py.MPI.TYPECLASS_COMPLEX
------------------------------------

 -- Data: mpi4py.MPI.TYPECLASS_COMPLEX: int(1) = TYPECLASS_COMPLEX

     int(2) ‘TYPECLASS_COMPLEX’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DISTRIBUTE_NONE,  Next: mpi4py MPI DISTRIBUTE_BLOCK,  Prev: mpi4py MPI TYPECLASS_COMPLEX,  Up: mpi4py MPI<2>

9.1.142 mpi4py.MPI.DISTRIBUTE_NONE
----------------------------------

 -- Data: mpi4py.MPI.DISTRIBUTE_NONE: int(1) = DISTRIBUTE_NONE

     int(2) ‘DISTRIBUTE_NONE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DISTRIBUTE_BLOCK,  Next: mpi4py MPI DISTRIBUTE_CYCLIC,  Prev: mpi4py MPI DISTRIBUTE_NONE,  Up: mpi4py MPI<2>

9.1.143 mpi4py.MPI.DISTRIBUTE_BLOCK
-----------------------------------

 -- Data: mpi4py.MPI.DISTRIBUTE_BLOCK: int(1) = DISTRIBUTE_BLOCK

     int(2) ‘DISTRIBUTE_BLOCK’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DISTRIBUTE_CYCLIC,  Next: mpi4py MPI DISTRIBUTE_DFLT_DARG,  Prev: mpi4py MPI DISTRIBUTE_BLOCK,  Up: mpi4py MPI<2>

9.1.144 mpi4py.MPI.DISTRIBUTE_CYCLIC
------------------------------------

 -- Data: mpi4py.MPI.DISTRIBUTE_CYCLIC: int(1) = DISTRIBUTE_CYCLIC

     int(2) ‘DISTRIBUTE_CYCLIC’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DISTRIBUTE_DFLT_DARG,  Next: mpi4py MPI COMBINER_NAMED,  Prev: mpi4py MPI DISTRIBUTE_CYCLIC,  Up: mpi4py MPI<2>

9.1.145 mpi4py.MPI.DISTRIBUTE_DFLT_DARG
---------------------------------------

 -- Data: mpi4py.MPI.DISTRIBUTE_DFLT_DARG: int(1) = DISTRIBUTE_DFLT_DARG

     int(2) ‘DISTRIBUTE_DFLT_DARG’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_NAMED,  Next: mpi4py MPI COMBINER_DUP,  Prev: mpi4py MPI DISTRIBUTE_DFLT_DARG,  Up: mpi4py MPI<2>

9.1.146 mpi4py.MPI.COMBINER_NAMED
---------------------------------

 -- Data: mpi4py.MPI.COMBINER_NAMED: int(1) = COMBINER_NAMED

     int(2) ‘COMBINER_NAMED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_DUP,  Next: mpi4py MPI COMBINER_CONTIGUOUS,  Prev: mpi4py MPI COMBINER_NAMED,  Up: mpi4py MPI<2>

9.1.147 mpi4py.MPI.COMBINER_DUP
-------------------------------

 -- Data: mpi4py.MPI.COMBINER_DUP: int(1) = COMBINER_DUP

     int(2) ‘COMBINER_DUP’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_CONTIGUOUS,  Next: mpi4py MPI COMBINER_VECTOR,  Prev: mpi4py MPI COMBINER_DUP,  Up: mpi4py MPI<2>

9.1.148 mpi4py.MPI.COMBINER_CONTIGUOUS
--------------------------------------

 -- Data: mpi4py.MPI.COMBINER_CONTIGUOUS: int(1) = COMBINER_CONTIGUOUS

     int(2) ‘COMBINER_CONTIGUOUS’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_VECTOR,  Next: mpi4py MPI COMBINER_HVECTOR,  Prev: mpi4py MPI COMBINER_CONTIGUOUS,  Up: mpi4py MPI<2>

9.1.149 mpi4py.MPI.COMBINER_VECTOR
----------------------------------

 -- Data: mpi4py.MPI.COMBINER_VECTOR: int(1) = COMBINER_VECTOR

     int(2) ‘COMBINER_VECTOR’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_HVECTOR,  Next: mpi4py MPI COMBINER_INDEXED,  Prev: mpi4py MPI COMBINER_VECTOR,  Up: mpi4py MPI<2>

9.1.150 mpi4py.MPI.COMBINER_HVECTOR
-----------------------------------

 -- Data: mpi4py.MPI.COMBINER_HVECTOR: int(1) = COMBINER_HVECTOR

     int(2) ‘COMBINER_HVECTOR’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_INDEXED,  Next: mpi4py MPI COMBINER_HINDEXED,  Prev: mpi4py MPI COMBINER_HVECTOR,  Up: mpi4py MPI<2>

9.1.151 mpi4py.MPI.COMBINER_INDEXED
-----------------------------------

 -- Data: mpi4py.MPI.COMBINER_INDEXED: int(1) = COMBINER_INDEXED

     int(2) ‘COMBINER_INDEXED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_HINDEXED,  Next: mpi4py MPI COMBINER_INDEXED_BLOCK,  Prev: mpi4py MPI COMBINER_INDEXED,  Up: mpi4py MPI<2>

9.1.152 mpi4py.MPI.COMBINER_HINDEXED
------------------------------------

 -- Data: mpi4py.MPI.COMBINER_HINDEXED: int(1) = COMBINER_HINDEXED

     int(2) ‘COMBINER_HINDEXED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_INDEXED_BLOCK,  Next: mpi4py MPI COMBINER_HINDEXED_BLOCK,  Prev: mpi4py MPI COMBINER_HINDEXED,  Up: mpi4py MPI<2>

9.1.153 mpi4py.MPI.COMBINER_INDEXED_BLOCK
-----------------------------------------

 -- Data: mpi4py.MPI.COMBINER_INDEXED_BLOCK: int(1) =
          COMBINER_INDEXED_BLOCK

     int(2) ‘COMBINER_INDEXED_BLOCK’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_HINDEXED_BLOCK,  Next: mpi4py MPI COMBINER_STRUCT,  Prev: mpi4py MPI COMBINER_INDEXED_BLOCK,  Up: mpi4py MPI<2>

9.1.154 mpi4py.MPI.COMBINER_HINDEXED_BLOCK
------------------------------------------

 -- Data: mpi4py.MPI.COMBINER_HINDEXED_BLOCK: int(1) =
          COMBINER_HINDEXED_BLOCK

     int(2) ‘COMBINER_HINDEXED_BLOCK’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_STRUCT,  Next: mpi4py MPI COMBINER_SUBARRAY,  Prev: mpi4py MPI COMBINER_HINDEXED_BLOCK,  Up: mpi4py MPI<2>

9.1.155 mpi4py.MPI.COMBINER_STRUCT
----------------------------------

 -- Data: mpi4py.MPI.COMBINER_STRUCT: int(1) = COMBINER_STRUCT

     int(2) ‘COMBINER_STRUCT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_SUBARRAY,  Next: mpi4py MPI COMBINER_DARRAY,  Prev: mpi4py MPI COMBINER_STRUCT,  Up: mpi4py MPI<2>

9.1.156 mpi4py.MPI.COMBINER_SUBARRAY
------------------------------------

 -- Data: mpi4py.MPI.COMBINER_SUBARRAY: int(1) = COMBINER_SUBARRAY

     int(2) ‘COMBINER_SUBARRAY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_DARRAY,  Next: mpi4py MPI COMBINER_RESIZED,  Prev: mpi4py MPI COMBINER_SUBARRAY,  Up: mpi4py MPI<2>

9.1.157 mpi4py.MPI.COMBINER_DARRAY
----------------------------------

 -- Data: mpi4py.MPI.COMBINER_DARRAY: int(1) = COMBINER_DARRAY

     int(2) ‘COMBINER_DARRAY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_RESIZED,  Next: mpi4py MPI COMBINER_F90_REAL,  Prev: mpi4py MPI COMBINER_DARRAY,  Up: mpi4py MPI<2>

9.1.158 mpi4py.MPI.COMBINER_RESIZED
-----------------------------------

 -- Data: mpi4py.MPI.COMBINER_RESIZED: int(1) = COMBINER_RESIZED

     int(2) ‘COMBINER_RESIZED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_F90_REAL,  Next: mpi4py MPI COMBINER_F90_COMPLEX,  Prev: mpi4py MPI COMBINER_RESIZED,  Up: mpi4py MPI<2>

9.1.159 mpi4py.MPI.COMBINER_F90_REAL
------------------------------------

 -- Data: mpi4py.MPI.COMBINER_F90_REAL: int(1) = COMBINER_F90_REAL

     int(2) ‘COMBINER_F90_REAL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_F90_COMPLEX,  Next: mpi4py MPI COMBINER_F90_INTEGER,  Prev: mpi4py MPI COMBINER_F90_REAL,  Up: mpi4py MPI<2>

9.1.160 mpi4py.MPI.COMBINER_F90_COMPLEX
---------------------------------------

 -- Data: mpi4py.MPI.COMBINER_F90_COMPLEX: int(1) = COMBINER_F90_COMPLEX

     int(2) ‘COMBINER_F90_COMPLEX’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_F90_INTEGER,  Next: mpi4py MPI IDENT,  Prev: mpi4py MPI COMBINER_F90_COMPLEX,  Up: mpi4py MPI<2>

9.1.161 mpi4py.MPI.COMBINER_F90_INTEGER
---------------------------------------

 -- Data: mpi4py.MPI.COMBINER_F90_INTEGER: int(1) = COMBINER_F90_INTEGER

     int(2) ‘COMBINER_F90_INTEGER’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI IDENT,  Next: mpi4py MPI CONGRUENT,  Prev: mpi4py MPI COMBINER_F90_INTEGER,  Up: mpi4py MPI<2>

9.1.162 mpi4py.MPI.IDENT
------------------------

 -- Data: mpi4py.MPI.IDENT: int(1) = IDENT

     int(2) ‘IDENT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI CONGRUENT,  Next: mpi4py MPI SIMILAR,  Prev: mpi4py MPI IDENT,  Up: mpi4py MPI<2>

9.1.163 mpi4py.MPI.CONGRUENT
----------------------------

 -- Data: mpi4py.MPI.CONGRUENT: int(1) = CONGRUENT

     int(2) ‘CONGRUENT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI SIMILAR,  Next: mpi4py MPI UNEQUAL,  Prev: mpi4py MPI CONGRUENT,  Up: mpi4py MPI<2>

9.1.164 mpi4py.MPI.SIMILAR
--------------------------

 -- Data: mpi4py.MPI.SIMILAR: int(1) = SIMILAR

     int(2) ‘SIMILAR’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI UNEQUAL,  Next: mpi4py MPI CART,  Prev: mpi4py MPI SIMILAR,  Up: mpi4py MPI<2>

9.1.165 mpi4py.MPI.UNEQUAL
--------------------------

 -- Data: mpi4py.MPI.UNEQUAL: int(1) = UNEQUAL

     int(2) ‘UNEQUAL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI CART,  Next: mpi4py MPI GRAPH,  Prev: mpi4py MPI UNEQUAL,  Up: mpi4py MPI<2>

9.1.166 mpi4py.MPI.CART
-----------------------

 -- Data: mpi4py.MPI.CART: int(1) = CART

     int(2) ‘CART’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI GRAPH,  Next: mpi4py MPI DIST_GRAPH,  Prev: mpi4py MPI CART,  Up: mpi4py MPI<2>

9.1.167 mpi4py.MPI.GRAPH
------------------------

 -- Data: mpi4py.MPI.GRAPH: int(1) = GRAPH

     int(2) ‘GRAPH’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DIST_GRAPH,  Next: mpi4py MPI UNWEIGHTED,  Prev: mpi4py MPI GRAPH,  Up: mpi4py MPI<2>

9.1.168 mpi4py.MPI.DIST_GRAPH
-----------------------------

 -- Data: mpi4py.MPI.DIST_GRAPH: int(1) = DIST_GRAPH

     int(2) ‘DIST_GRAPH’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI UNWEIGHTED,  Next: mpi4py MPI WEIGHTS_EMPTY,  Prev: mpi4py MPI DIST_GRAPH,  Up: mpi4py MPI<2>

9.1.169 mpi4py.MPI.UNWEIGHTED
-----------------------------

 -- Data: mpi4py.MPI.UNWEIGHTED: int(1) = UNWEIGHTED

     int(2) ‘UNWEIGHTED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WEIGHTS_EMPTY,  Next: mpi4py MPI COMM_TYPE_SHARED,  Prev: mpi4py MPI UNWEIGHTED,  Up: mpi4py MPI<2>

9.1.170 mpi4py.MPI.WEIGHTS_EMPTY
--------------------------------

 -- Data: mpi4py.MPI.WEIGHTS_EMPTY: int(1) = WEIGHTS_EMPTY

     int(2) ‘WEIGHTS_EMPTY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMM_TYPE_SHARED,  Next: mpi4py MPI BSEND_OVERHEAD,  Prev: mpi4py MPI WEIGHTS_EMPTY,  Up: mpi4py MPI<2>

9.1.171 mpi4py.MPI.COMM_TYPE_SHARED
-----------------------------------

 -- Data: mpi4py.MPI.COMM_TYPE_SHARED: int(1) = COMM_TYPE_SHARED

     int(2) ‘COMM_TYPE_SHARED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI BSEND_OVERHEAD,  Next: mpi4py MPI WIN_FLAVOR_CREATE,  Prev: mpi4py MPI COMM_TYPE_SHARED,  Up: mpi4py MPI<2>

9.1.172 mpi4py.MPI.BSEND_OVERHEAD
---------------------------------

 -- Data: mpi4py.MPI.BSEND_OVERHEAD: int(1) = BSEND_OVERHEAD

     int(2) ‘BSEND_OVERHEAD’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_FLAVOR_CREATE,  Next: mpi4py MPI WIN_FLAVOR_ALLOCATE,  Prev: mpi4py MPI BSEND_OVERHEAD,  Up: mpi4py MPI<2>

9.1.173 mpi4py.MPI.WIN_FLAVOR_CREATE
------------------------------------

 -- Data: mpi4py.MPI.WIN_FLAVOR_CREATE: int(1) = WIN_FLAVOR_CREATE

     int(2) ‘WIN_FLAVOR_CREATE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_FLAVOR_ALLOCATE,  Next: mpi4py MPI WIN_FLAVOR_DYNAMIC,  Prev: mpi4py MPI WIN_FLAVOR_CREATE,  Up: mpi4py MPI<2>

9.1.174 mpi4py.MPI.WIN_FLAVOR_ALLOCATE
--------------------------------------

 -- Data: mpi4py.MPI.WIN_FLAVOR_ALLOCATE: int(1) = WIN_FLAVOR_ALLOCATE

     int(2) ‘WIN_FLAVOR_ALLOCATE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_FLAVOR_DYNAMIC,  Next: mpi4py MPI WIN_FLAVOR_SHARED,  Prev: mpi4py MPI WIN_FLAVOR_ALLOCATE,  Up: mpi4py MPI<2>

9.1.175 mpi4py.MPI.WIN_FLAVOR_DYNAMIC
-------------------------------------

 -- Data: mpi4py.MPI.WIN_FLAVOR_DYNAMIC: int(1) = WIN_FLAVOR_DYNAMIC

     int(2) ‘WIN_FLAVOR_DYNAMIC’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_FLAVOR_SHARED,  Next: mpi4py MPI WIN_SEPARATE,  Prev: mpi4py MPI WIN_FLAVOR_DYNAMIC,  Up: mpi4py MPI<2>

9.1.176 mpi4py.MPI.WIN_FLAVOR_SHARED
------------------------------------

 -- Data: mpi4py.MPI.WIN_FLAVOR_SHARED: int(1) = WIN_FLAVOR_SHARED

     int(2) ‘WIN_FLAVOR_SHARED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_SEPARATE,  Next: mpi4py MPI WIN_UNIFIED,  Prev: mpi4py MPI WIN_FLAVOR_SHARED,  Up: mpi4py MPI<2>

9.1.177 mpi4py.MPI.WIN_SEPARATE
-------------------------------

 -- Data: mpi4py.MPI.WIN_SEPARATE: int(1) = WIN_SEPARATE

     int(2) ‘WIN_SEPARATE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_UNIFIED,  Next: mpi4py MPI MODE_NOCHECK,  Prev: mpi4py MPI WIN_SEPARATE,  Up: mpi4py MPI<2>

9.1.178 mpi4py.MPI.WIN_UNIFIED
------------------------------

 -- Data: mpi4py.MPI.WIN_UNIFIED: int(1) = WIN_UNIFIED

     int(2) ‘WIN_UNIFIED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_NOCHECK,  Next: mpi4py MPI MODE_NOSTORE,  Prev: mpi4py MPI WIN_UNIFIED,  Up: mpi4py MPI<2>

9.1.179 mpi4py.MPI.MODE_NOCHECK
-------------------------------

 -- Data: mpi4py.MPI.MODE_NOCHECK: int(1) = MODE_NOCHECK

     int(2) ‘MODE_NOCHECK’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_NOSTORE,  Next: mpi4py MPI MODE_NOPUT,  Prev: mpi4py MPI MODE_NOCHECK,  Up: mpi4py MPI<2>

9.1.180 mpi4py.MPI.MODE_NOSTORE
-------------------------------

 -- Data: mpi4py.MPI.MODE_NOSTORE: int(1) = MODE_NOSTORE

     int(2) ‘MODE_NOSTORE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_NOPUT,  Next: mpi4py MPI MODE_NOPRECEDE,  Prev: mpi4py MPI MODE_NOSTORE,  Up: mpi4py MPI<2>

9.1.181 mpi4py.MPI.MODE_NOPUT
-----------------------------

 -- Data: mpi4py.MPI.MODE_NOPUT: int(1) = MODE_NOPUT

     int(2) ‘MODE_NOPUT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_NOPRECEDE,  Next: mpi4py MPI MODE_NOSUCCEED,  Prev: mpi4py MPI MODE_NOPUT,  Up: mpi4py MPI<2>

9.1.182 mpi4py.MPI.MODE_NOPRECEDE
---------------------------------

 -- Data: mpi4py.MPI.MODE_NOPRECEDE: int(1) = MODE_NOPRECEDE

     int(2) ‘MODE_NOPRECEDE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_NOSUCCEED,  Next: mpi4py MPI LOCK_EXCLUSIVE,  Prev: mpi4py MPI MODE_NOPRECEDE,  Up: mpi4py MPI<2>

9.1.183 mpi4py.MPI.MODE_NOSUCCEED
---------------------------------

 -- Data: mpi4py.MPI.MODE_NOSUCCEED: int(1) = MODE_NOSUCCEED

     int(2) ‘MODE_NOSUCCEED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI LOCK_EXCLUSIVE,  Next: mpi4py MPI LOCK_SHARED,  Prev: mpi4py MPI MODE_NOSUCCEED,  Up: mpi4py MPI<2>

9.1.184 mpi4py.MPI.LOCK_EXCLUSIVE
---------------------------------

 -- Data: mpi4py.MPI.LOCK_EXCLUSIVE: int(1) = LOCK_EXCLUSIVE

     int(2) ‘LOCK_EXCLUSIVE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI LOCK_SHARED,  Next: mpi4py MPI MODE_RDONLY,  Prev: mpi4py MPI LOCK_EXCLUSIVE,  Up: mpi4py MPI<2>

9.1.185 mpi4py.MPI.LOCK_SHARED
------------------------------

 -- Data: mpi4py.MPI.LOCK_SHARED: int(1) = LOCK_SHARED

     int(2) ‘LOCK_SHARED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_RDONLY,  Next: mpi4py MPI MODE_WRONLY,  Prev: mpi4py MPI LOCK_SHARED,  Up: mpi4py MPI<2>

9.1.186 mpi4py.MPI.MODE_RDONLY
------------------------------

 -- Data: mpi4py.MPI.MODE_RDONLY: int(1) = MODE_RDONLY

     int(2) ‘MODE_RDONLY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_WRONLY,  Next: mpi4py MPI MODE_RDWR,  Prev: mpi4py MPI MODE_RDONLY,  Up: mpi4py MPI<2>

9.1.187 mpi4py.MPI.MODE_WRONLY
------------------------------

 -- Data: mpi4py.MPI.MODE_WRONLY: int(1) = MODE_WRONLY

     int(2) ‘MODE_WRONLY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_RDWR,  Next: mpi4py MPI MODE_CREATE,  Prev: mpi4py MPI MODE_WRONLY,  Up: mpi4py MPI<2>

9.1.188 mpi4py.MPI.MODE_RDWR
----------------------------

 -- Data: mpi4py.MPI.MODE_RDWR: int(1) = MODE_RDWR

     int(2) ‘MODE_RDWR’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_CREATE,  Next: mpi4py MPI MODE_EXCL,  Prev: mpi4py MPI MODE_RDWR,  Up: mpi4py MPI<2>

9.1.189 mpi4py.MPI.MODE_CREATE
------------------------------

 -- Data: mpi4py.MPI.MODE_CREATE: int(1) = MODE_CREATE

     int(2) ‘MODE_CREATE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_EXCL,  Next: mpi4py MPI MODE_DELETE_ON_CLOSE,  Prev: mpi4py MPI MODE_CREATE,  Up: mpi4py MPI<2>

9.1.190 mpi4py.MPI.MODE_EXCL
----------------------------

 -- Data: mpi4py.MPI.MODE_EXCL: int(1) = MODE_EXCL

     int(2) ‘MODE_EXCL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_DELETE_ON_CLOSE,  Next: mpi4py MPI MODE_UNIQUE_OPEN,  Prev: mpi4py MPI MODE_EXCL,  Up: mpi4py MPI<2>

9.1.191 mpi4py.MPI.MODE_DELETE_ON_CLOSE
---------------------------------------

 -- Data: mpi4py.MPI.MODE_DELETE_ON_CLOSE: int(1) = MODE_DELETE_ON_CLOSE

     int(2) ‘MODE_DELETE_ON_CLOSE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_UNIQUE_OPEN,  Next: mpi4py MPI MODE_SEQUENTIAL,  Prev: mpi4py MPI MODE_DELETE_ON_CLOSE,  Up: mpi4py MPI<2>

9.1.192 mpi4py.MPI.MODE_UNIQUE_OPEN
-----------------------------------

 -- Data: mpi4py.MPI.MODE_UNIQUE_OPEN: int(1) = MODE_UNIQUE_OPEN

     int(2) ‘MODE_UNIQUE_OPEN’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_SEQUENTIAL,  Next: mpi4py MPI MODE_APPEND,  Prev: mpi4py MPI MODE_UNIQUE_OPEN,  Up: mpi4py MPI<2>

9.1.193 mpi4py.MPI.MODE_SEQUENTIAL
----------------------------------

 -- Data: mpi4py.MPI.MODE_SEQUENTIAL: int(1) = MODE_SEQUENTIAL

     int(2) ‘MODE_SEQUENTIAL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_APPEND,  Next: mpi4py MPI SEEK_SET,  Prev: mpi4py MPI MODE_SEQUENTIAL,  Up: mpi4py MPI<2>

9.1.194 mpi4py.MPI.MODE_APPEND
------------------------------

 -- Data: mpi4py.MPI.MODE_APPEND: int(1) = MODE_APPEND

     int(2) ‘MODE_APPEND’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI SEEK_SET,  Next: mpi4py MPI SEEK_CUR,  Prev: mpi4py MPI MODE_APPEND,  Up: mpi4py MPI<2>

9.1.195 mpi4py.MPI.SEEK_SET
---------------------------

 -- Data: mpi4py.MPI.SEEK_SET: int(1) = SEEK_SET

     int(2) ‘SEEK_SET’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI SEEK_CUR,  Next: mpi4py MPI SEEK_END,  Prev: mpi4py MPI SEEK_SET,  Up: mpi4py MPI<2>

9.1.196 mpi4py.MPI.SEEK_CUR
---------------------------

 -- Data: mpi4py.MPI.SEEK_CUR: int(1) = SEEK_CUR

     int(2) ‘SEEK_CUR’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI SEEK_END,  Next: mpi4py MPI DISPLACEMENT_CURRENT,  Prev: mpi4py MPI SEEK_CUR,  Up: mpi4py MPI<2>

9.1.197 mpi4py.MPI.SEEK_END
---------------------------

 -- Data: mpi4py.MPI.SEEK_END: int(1) = SEEK_END

     int(2) ‘SEEK_END’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DISPLACEMENT_CURRENT,  Next: mpi4py MPI DISP_CUR,  Prev: mpi4py MPI SEEK_END,  Up: mpi4py MPI<2>

9.1.198 mpi4py.MPI.DISPLACEMENT_CURRENT
---------------------------------------

 -- Data: mpi4py.MPI.DISPLACEMENT_CURRENT: int(1) = DISPLACEMENT_CURRENT

     int(2) ‘DISPLACEMENT_CURRENT’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DISP_CUR,  Next: mpi4py MPI THREAD_SINGLE,  Prev: mpi4py MPI DISPLACEMENT_CURRENT,  Up: mpi4py MPI<2>

9.1.199 mpi4py.MPI.DISP_CUR
---------------------------

 -- Data: mpi4py.MPI.DISP_CUR: int(1) = DISP_CUR

     int(2) ‘DISP_CUR’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI THREAD_SINGLE,  Next: mpi4py MPI THREAD_FUNNELED,  Prev: mpi4py MPI DISP_CUR,  Up: mpi4py MPI<2>

9.1.200 mpi4py.MPI.THREAD_SINGLE
--------------------------------

 -- Data: mpi4py.MPI.THREAD_SINGLE: int(1) = THREAD_SINGLE

     int(2) ‘THREAD_SINGLE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI THREAD_FUNNELED,  Next: mpi4py MPI THREAD_SERIALIZED,  Prev: mpi4py MPI THREAD_SINGLE,  Up: mpi4py MPI<2>

9.1.201 mpi4py.MPI.THREAD_FUNNELED
----------------------------------

 -- Data: mpi4py.MPI.THREAD_FUNNELED: int(1) = THREAD_FUNNELED

     int(2) ‘THREAD_FUNNELED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI THREAD_SERIALIZED,  Next: mpi4py MPI THREAD_MULTIPLE,  Prev: mpi4py MPI THREAD_FUNNELED,  Up: mpi4py MPI<2>

9.1.202 mpi4py.MPI.THREAD_SERIALIZED
------------------------------------

 -- Data: mpi4py.MPI.THREAD_SERIALIZED: int(1) = THREAD_SERIALIZED

     int(2) ‘THREAD_SERIALIZED’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI THREAD_MULTIPLE,  Next: mpi4py MPI VERSION,  Prev: mpi4py MPI THREAD_SERIALIZED,  Up: mpi4py MPI<2>

9.1.203 mpi4py.MPI.THREAD_MULTIPLE
----------------------------------

 -- Data: mpi4py.MPI.THREAD_MULTIPLE: int(1) = THREAD_MULTIPLE

     int(2) ‘THREAD_MULTIPLE’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI VERSION,  Next: mpi4py MPI SUBVERSION,  Prev: mpi4py MPI THREAD_MULTIPLE,  Up: mpi4py MPI<2>

9.1.204 mpi4py.MPI.VERSION
--------------------------

 -- Data: mpi4py.MPI.VERSION: int(1) = VERSION

     int(2) ‘VERSION’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI SUBVERSION,  Next: mpi4py MPI MAX_PROCESSOR_NAME,  Prev: mpi4py MPI VERSION,  Up: mpi4py MPI<2>

9.1.205 mpi4py.MPI.SUBVERSION
-----------------------------

 -- Data: mpi4py.MPI.SUBVERSION: int(1) = SUBVERSION

     int(2) ‘SUBVERSION’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_PROCESSOR_NAME,  Next: mpi4py MPI MAX_ERROR_STRING,  Prev: mpi4py MPI SUBVERSION,  Up: mpi4py MPI<2>

9.1.206 mpi4py.MPI.MAX_PROCESSOR_NAME
-------------------------------------

 -- Data: mpi4py.MPI.MAX_PROCESSOR_NAME: int(1) = MAX_PROCESSOR_NAME

     int(2) ‘MAX_PROCESSOR_NAME’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_ERROR_STRING,  Next: mpi4py MPI MAX_PORT_NAME,  Prev: mpi4py MPI MAX_PROCESSOR_NAME,  Up: mpi4py MPI<2>

9.1.207 mpi4py.MPI.MAX_ERROR_STRING
-----------------------------------

 -- Data: mpi4py.MPI.MAX_ERROR_STRING: int(1) = MAX_ERROR_STRING

     int(2) ‘MAX_ERROR_STRING’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_PORT_NAME,  Next: mpi4py MPI MAX_INFO_KEY,  Prev: mpi4py MPI MAX_ERROR_STRING,  Up: mpi4py MPI<2>

9.1.208 mpi4py.MPI.MAX_PORT_NAME
--------------------------------

 -- Data: mpi4py.MPI.MAX_PORT_NAME: int(1) = MAX_PORT_NAME

     int(2) ‘MAX_PORT_NAME’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_INFO_KEY,  Next: mpi4py MPI MAX_INFO_VAL,  Prev: mpi4py MPI MAX_PORT_NAME,  Up: mpi4py MPI<2>

9.1.209 mpi4py.MPI.MAX_INFO_KEY
-------------------------------

 -- Data: mpi4py.MPI.MAX_INFO_KEY: int(1) = MAX_INFO_KEY

     int(2) ‘MAX_INFO_KEY’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_INFO_VAL,  Next: mpi4py MPI MAX_OBJECT_NAME,  Prev: mpi4py MPI MAX_INFO_KEY,  Up: mpi4py MPI<2>

9.1.210 mpi4py.MPI.MAX_INFO_VAL
-------------------------------

 -- Data: mpi4py.MPI.MAX_INFO_VAL: int(1) = MAX_INFO_VAL

     int(2) ‘MAX_INFO_VAL’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_OBJECT_NAME,  Next: mpi4py MPI MAX_DATAREP_STRING,  Prev: mpi4py MPI MAX_INFO_VAL,  Up: mpi4py MPI<2>

9.1.211 mpi4py.MPI.MAX_OBJECT_NAME
----------------------------------

 -- Data: mpi4py.MPI.MAX_OBJECT_NAME: int(1) = MAX_OBJECT_NAME

     int(2) ‘MAX_OBJECT_NAME’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_DATAREP_STRING,  Next: mpi4py MPI MAX_LIBRARY_VERSION_STRING,  Prev: mpi4py MPI MAX_OBJECT_NAME,  Up: mpi4py MPI<2>

9.1.212 mpi4py.MPI.MAX_DATAREP_STRING
-------------------------------------

 -- Data: mpi4py.MPI.MAX_DATAREP_STRING: int(1) = MAX_DATAREP_STRING

     int(2) ‘MAX_DATAREP_STRING’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_LIBRARY_VERSION_STRING,  Next: mpi4py MPI DATATYPE_NULL,  Prev: mpi4py MPI MAX_DATAREP_STRING,  Up: mpi4py MPI<2>

9.1.213 mpi4py.MPI.MAX_LIBRARY_VERSION_STRING
---------------------------------------------

 -- Data: mpi4py.MPI.MAX_LIBRARY_VERSION_STRING: int(1) =
          MAX_LIBRARY_VERSION_STRING

     int(2) ‘MAX_LIBRARY_VERSION_STRING’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DATATYPE_NULL,  Next: mpi4py MPI UB,  Prev: mpi4py MPI MAX_LIBRARY_VERSION_STRING,  Up: mpi4py MPI<2>

9.1.214 mpi4py.MPI.DATATYPE_NULL
--------------------------------

 -- Data: mpi4py.MPI.DATATYPE_NULL: *note Datatype: c7. = DATATYPE_NULL

     *note Datatype: c7. ‘DATATYPE_NULL’


File: mpi4py.info,  Node: mpi4py MPI UB,  Next: mpi4py MPI LB,  Prev: mpi4py MPI DATATYPE_NULL,  Up: mpi4py MPI<2>

9.1.215 mpi4py.MPI.UB
---------------------

 -- Data: mpi4py.MPI.UB: *note Datatype: c7. = UB

     *note Datatype: c7. ‘UB’


File: mpi4py.info,  Node: mpi4py MPI LB,  Next: mpi4py MPI PACKED,  Prev: mpi4py MPI UB,  Up: mpi4py MPI<2>

9.1.216 mpi4py.MPI.LB
---------------------

 -- Data: mpi4py.MPI.LB: *note Datatype: c7. = LB

     *note Datatype: c7. ‘LB’


File: mpi4py.info,  Node: mpi4py MPI PACKED,  Next: mpi4py MPI BYTE,  Prev: mpi4py MPI LB,  Up: mpi4py MPI<2>

9.1.217 mpi4py.MPI.PACKED
-------------------------

 -- Data: mpi4py.MPI.PACKED: *note Datatype: c7. = PACKED

     *note Datatype: c7. ‘PACKED’


File: mpi4py.info,  Node: mpi4py MPI BYTE,  Next: mpi4py MPI AINT,  Prev: mpi4py MPI PACKED,  Up: mpi4py MPI<2>

9.1.218 mpi4py.MPI.BYTE
-----------------------

 -- Data: mpi4py.MPI.BYTE: *note Datatype: c7. = BYTE

     *note Datatype: c7. ‘BYTE’


File: mpi4py.info,  Node: mpi4py MPI AINT,  Next: mpi4py MPI OFFSET,  Prev: mpi4py MPI BYTE,  Up: mpi4py MPI<2>

9.1.219 mpi4py.MPI.AINT
-----------------------

 -- Data: mpi4py.MPI.AINT: *note Datatype: c7. = AINT

     *note Datatype: c7. ‘AINT’


File: mpi4py.info,  Node: mpi4py MPI OFFSET,  Next: mpi4py MPI COUNT,  Prev: mpi4py MPI AINT,  Up: mpi4py MPI<2>

9.1.220 mpi4py.MPI.OFFSET
-------------------------

 -- Data: mpi4py.MPI.OFFSET: *note Datatype: c7. = OFFSET

     *note Datatype: c7. ‘OFFSET’


File: mpi4py.info,  Node: mpi4py MPI COUNT,  Next: mpi4py MPI CHAR,  Prev: mpi4py MPI OFFSET,  Up: mpi4py MPI<2>

9.1.221 mpi4py.MPI.COUNT
------------------------

 -- Data: mpi4py.MPI.COUNT: *note Datatype: c7. = COUNT

     *note Datatype: c7. ‘COUNT’


File: mpi4py.info,  Node: mpi4py MPI CHAR,  Next: mpi4py MPI WCHAR,  Prev: mpi4py MPI COUNT,  Up: mpi4py MPI<2>

9.1.222 mpi4py.MPI.CHAR
-----------------------

 -- Data: mpi4py.MPI.CHAR: *note Datatype: c7. = CHAR

     *note Datatype: c7. ‘CHAR’


File: mpi4py.info,  Node: mpi4py MPI WCHAR,  Next: mpi4py MPI SIGNED_CHAR,  Prev: mpi4py MPI CHAR,  Up: mpi4py MPI<2>

9.1.223 mpi4py.MPI.WCHAR
------------------------

 -- Data: mpi4py.MPI.WCHAR: *note Datatype: c7. = WCHAR

     *note Datatype: c7. ‘WCHAR’


File: mpi4py.info,  Node: mpi4py MPI SIGNED_CHAR,  Next: mpi4py MPI SHORT,  Prev: mpi4py MPI WCHAR,  Up: mpi4py MPI<2>

9.1.224 mpi4py.MPI.SIGNED_CHAR
------------------------------

 -- Data: mpi4py.MPI.SIGNED_CHAR: *note Datatype: c7. = SIGNED_CHAR

     *note Datatype: c7. ‘SIGNED_CHAR’


File: mpi4py.info,  Node: mpi4py MPI SHORT,  Next: mpi4py MPI INT,  Prev: mpi4py MPI SIGNED_CHAR,  Up: mpi4py MPI<2>

9.1.225 mpi4py.MPI.SHORT
------------------------

 -- Data: mpi4py.MPI.SHORT: *note Datatype: c7. = SHORT

     *note Datatype: c7. ‘SHORT’


File: mpi4py.info,  Node: mpi4py MPI INT,  Next: mpi4py MPI LONG,  Prev: mpi4py MPI SHORT,  Up: mpi4py MPI<2>

9.1.226 mpi4py.MPI.INT
----------------------

 -- Data: mpi4py.MPI.INT: *note Datatype: c7. = INT

     *note Datatype: c7. ‘INT’


File: mpi4py.info,  Node: mpi4py MPI LONG,  Next: mpi4py MPI LONG_LONG,  Prev: mpi4py MPI INT,  Up: mpi4py MPI<2>

9.1.227 mpi4py.MPI.LONG
-----------------------

 -- Data: mpi4py.MPI.LONG: *note Datatype: c7. = LONG

     *note Datatype: c7. ‘LONG’


File: mpi4py.info,  Node: mpi4py MPI LONG_LONG,  Next: mpi4py MPI UNSIGNED_CHAR,  Prev: mpi4py MPI LONG,  Up: mpi4py MPI<2>

9.1.228 mpi4py.MPI.LONG_LONG
----------------------------

 -- Data: mpi4py.MPI.LONG_LONG: *note Datatype: c7. = LONG_LONG

     *note Datatype: c7. ‘LONG_LONG’


File: mpi4py.info,  Node: mpi4py MPI UNSIGNED_CHAR,  Next: mpi4py MPI UNSIGNED_SHORT,  Prev: mpi4py MPI LONG_LONG,  Up: mpi4py MPI<2>

9.1.229 mpi4py.MPI.UNSIGNED_CHAR
--------------------------------

 -- Data: mpi4py.MPI.UNSIGNED_CHAR: *note Datatype: c7. = UNSIGNED_CHAR

     *note Datatype: c7. ‘UNSIGNED_CHAR’


File: mpi4py.info,  Node: mpi4py MPI UNSIGNED_SHORT,  Next: mpi4py MPI UNSIGNED,  Prev: mpi4py MPI UNSIGNED_CHAR,  Up: mpi4py MPI<2>

9.1.230 mpi4py.MPI.UNSIGNED_SHORT
---------------------------------

 -- Data: mpi4py.MPI.UNSIGNED_SHORT: *note Datatype: c7. =
          UNSIGNED_SHORT

     *note Datatype: c7. ‘UNSIGNED_SHORT’


File: mpi4py.info,  Node: mpi4py MPI UNSIGNED,  Next: mpi4py MPI UNSIGNED_LONG,  Prev: mpi4py MPI UNSIGNED_SHORT,  Up: mpi4py MPI<2>

9.1.231 mpi4py.MPI.UNSIGNED
---------------------------

 -- Data: mpi4py.MPI.UNSIGNED: *note Datatype: c7. = UNSIGNED

     *note Datatype: c7. ‘UNSIGNED’


File: mpi4py.info,  Node: mpi4py MPI UNSIGNED_LONG,  Next: mpi4py MPI UNSIGNED_LONG_LONG,  Prev: mpi4py MPI UNSIGNED,  Up: mpi4py MPI<2>

9.1.232 mpi4py.MPI.UNSIGNED_LONG
--------------------------------

 -- Data: mpi4py.MPI.UNSIGNED_LONG: *note Datatype: c7. = UNSIGNED_LONG

     *note Datatype: c7. ‘UNSIGNED_LONG’


File: mpi4py.info,  Node: mpi4py MPI UNSIGNED_LONG_LONG,  Next: mpi4py MPI FLOAT,  Prev: mpi4py MPI UNSIGNED_LONG,  Up: mpi4py MPI<2>

9.1.233 mpi4py.MPI.UNSIGNED_LONG_LONG
-------------------------------------

 -- Data: mpi4py.MPI.UNSIGNED_LONG_LONG: *note Datatype: c7. =
          UNSIGNED_LONG_LONG

     *note Datatype: c7. ‘UNSIGNED_LONG_LONG’


File: mpi4py.info,  Node: mpi4py MPI FLOAT,  Next: mpi4py MPI DOUBLE,  Prev: mpi4py MPI UNSIGNED_LONG_LONG,  Up: mpi4py MPI<2>

9.1.234 mpi4py.MPI.FLOAT
------------------------

 -- Data: mpi4py.MPI.FLOAT: *note Datatype: c7. = FLOAT

     *note Datatype: c7. ‘FLOAT’


File: mpi4py.info,  Node: mpi4py MPI DOUBLE,  Next: mpi4py MPI LONG_DOUBLE,  Prev: mpi4py MPI FLOAT,  Up: mpi4py MPI<2>

9.1.235 mpi4py.MPI.DOUBLE
-------------------------

 -- Data: mpi4py.MPI.DOUBLE: *note Datatype: c7. = DOUBLE

     *note Datatype: c7. ‘DOUBLE’


File: mpi4py.info,  Node: mpi4py MPI LONG_DOUBLE,  Next: mpi4py MPI C_BOOL,  Prev: mpi4py MPI DOUBLE,  Up: mpi4py MPI<2>

9.1.236 mpi4py.MPI.LONG_DOUBLE
------------------------------

 -- Data: mpi4py.MPI.LONG_DOUBLE: *note Datatype: c7. = LONG_DOUBLE

     *note Datatype: c7. ‘LONG_DOUBLE’


File: mpi4py.info,  Node: mpi4py MPI C_BOOL,  Next: mpi4py MPI INT8_T,  Prev: mpi4py MPI LONG_DOUBLE,  Up: mpi4py MPI<2>

9.1.237 mpi4py.MPI.C_BOOL
-------------------------

 -- Data: mpi4py.MPI.C_BOOL: *note Datatype: c7. = C_BOOL

     *note Datatype: c7. ‘C_BOOL’


File: mpi4py.info,  Node: mpi4py MPI INT8_T,  Next: mpi4py MPI INT16_T,  Prev: mpi4py MPI C_BOOL,  Up: mpi4py MPI<2>

9.1.238 mpi4py.MPI.INT8_T
-------------------------

 -- Data: mpi4py.MPI.INT8_T: *note Datatype: c7. = INT8_T

     *note Datatype: c7. ‘INT8_T’


File: mpi4py.info,  Node: mpi4py MPI INT16_T,  Next: mpi4py MPI INT32_T,  Prev: mpi4py MPI INT8_T,  Up: mpi4py MPI<2>

9.1.239 mpi4py.MPI.INT16_T
--------------------------

 -- Data: mpi4py.MPI.INT16_T: *note Datatype: c7. = INT16_T

     *note Datatype: c7. ‘INT16_T’


File: mpi4py.info,  Node: mpi4py MPI INT32_T,  Next: mpi4py MPI INT64_T,  Prev: mpi4py MPI INT16_T,  Up: mpi4py MPI<2>

9.1.240 mpi4py.MPI.INT32_T
--------------------------

 -- Data: mpi4py.MPI.INT32_T: *note Datatype: c7. = INT32_T

     *note Datatype: c7. ‘INT32_T’


File: mpi4py.info,  Node: mpi4py MPI INT64_T,  Next: mpi4py MPI UINT8_T,  Prev: mpi4py MPI INT32_T,  Up: mpi4py MPI<2>

9.1.241 mpi4py.MPI.INT64_T
--------------------------

 -- Data: mpi4py.MPI.INT64_T: *note Datatype: c7. = INT64_T

     *note Datatype: c7. ‘INT64_T’


File: mpi4py.info,  Node: mpi4py MPI UINT8_T,  Next: mpi4py MPI UINT16_T,  Prev: mpi4py MPI INT64_T,  Up: mpi4py MPI<2>

9.1.242 mpi4py.MPI.UINT8_T
--------------------------

 -- Data: mpi4py.MPI.UINT8_T: *note Datatype: c7. = UINT8_T

     *note Datatype: c7. ‘UINT8_T’


File: mpi4py.info,  Node: mpi4py MPI UINT16_T,  Next: mpi4py MPI UINT32_T,  Prev: mpi4py MPI UINT8_T,  Up: mpi4py MPI<2>

9.1.243 mpi4py.MPI.UINT16_T
---------------------------

 -- Data: mpi4py.MPI.UINT16_T: *note Datatype: c7. = UINT16_T

     *note Datatype: c7. ‘UINT16_T’


File: mpi4py.info,  Node: mpi4py MPI UINT32_T,  Next: mpi4py MPI UINT64_T,  Prev: mpi4py MPI UINT16_T,  Up: mpi4py MPI<2>

9.1.244 mpi4py.MPI.UINT32_T
---------------------------

 -- Data: mpi4py.MPI.UINT32_T: *note Datatype: c7. = UINT32_T

     *note Datatype: c7. ‘UINT32_T’


File: mpi4py.info,  Node: mpi4py MPI UINT64_T,  Next: mpi4py MPI C_COMPLEX,  Prev: mpi4py MPI UINT32_T,  Up: mpi4py MPI<2>

9.1.245 mpi4py.MPI.UINT64_T
---------------------------

 -- Data: mpi4py.MPI.UINT64_T: *note Datatype: c7. = UINT64_T

     *note Datatype: c7. ‘UINT64_T’


File: mpi4py.info,  Node: mpi4py MPI C_COMPLEX,  Next: mpi4py MPI C_FLOAT_COMPLEX,  Prev: mpi4py MPI UINT64_T,  Up: mpi4py MPI<2>

9.1.246 mpi4py.MPI.C_COMPLEX
----------------------------

 -- Data: mpi4py.MPI.C_COMPLEX: *note Datatype: c7. = C_COMPLEX

     *note Datatype: c7. ‘C_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI C_FLOAT_COMPLEX,  Next: mpi4py MPI C_DOUBLE_COMPLEX,  Prev: mpi4py MPI C_COMPLEX,  Up: mpi4py MPI<2>

9.1.247 mpi4py.MPI.C_FLOAT_COMPLEX
----------------------------------

 -- Data: mpi4py.MPI.C_FLOAT_COMPLEX: *note Datatype: c7. =
          C_FLOAT_COMPLEX

     *note Datatype: c7. ‘C_FLOAT_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI C_DOUBLE_COMPLEX,  Next: mpi4py MPI C_LONG_DOUBLE_COMPLEX,  Prev: mpi4py MPI C_FLOAT_COMPLEX,  Up: mpi4py MPI<2>

9.1.248 mpi4py.MPI.C_DOUBLE_COMPLEX
-----------------------------------

 -- Data: mpi4py.MPI.C_DOUBLE_COMPLEX: *note Datatype: c7. =
          C_DOUBLE_COMPLEX

     *note Datatype: c7. ‘C_DOUBLE_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI C_LONG_DOUBLE_COMPLEX,  Next: mpi4py MPI CXX_BOOL,  Prev: mpi4py MPI C_DOUBLE_COMPLEX,  Up: mpi4py MPI<2>

9.1.249 mpi4py.MPI.C_LONG_DOUBLE_COMPLEX
----------------------------------------

 -- Data: mpi4py.MPI.C_LONG_DOUBLE_COMPLEX: *note Datatype: c7. =
          C_LONG_DOUBLE_COMPLEX

     *note Datatype: c7. ‘C_LONG_DOUBLE_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI CXX_BOOL,  Next: mpi4py MPI CXX_FLOAT_COMPLEX,  Prev: mpi4py MPI C_LONG_DOUBLE_COMPLEX,  Up: mpi4py MPI<2>

9.1.250 mpi4py.MPI.CXX_BOOL
---------------------------

 -- Data: mpi4py.MPI.CXX_BOOL: *note Datatype: c7. = CXX_BOOL

     *note Datatype: c7. ‘CXX_BOOL’


File: mpi4py.info,  Node: mpi4py MPI CXX_FLOAT_COMPLEX,  Next: mpi4py MPI CXX_DOUBLE_COMPLEX,  Prev: mpi4py MPI CXX_BOOL,  Up: mpi4py MPI<2>

9.1.251 mpi4py.MPI.CXX_FLOAT_COMPLEX
------------------------------------

 -- Data: mpi4py.MPI.CXX_FLOAT_COMPLEX: *note Datatype: c7. =
          CXX_FLOAT_COMPLEX

     *note Datatype: c7. ‘CXX_FLOAT_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI CXX_DOUBLE_COMPLEX,  Next: mpi4py MPI CXX_LONG_DOUBLE_COMPLEX,  Prev: mpi4py MPI CXX_FLOAT_COMPLEX,  Up: mpi4py MPI<2>

9.1.252 mpi4py.MPI.CXX_DOUBLE_COMPLEX
-------------------------------------

 -- Data: mpi4py.MPI.CXX_DOUBLE_COMPLEX: *note Datatype: c7. =
          CXX_DOUBLE_COMPLEX

     *note Datatype: c7. ‘CXX_DOUBLE_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI CXX_LONG_DOUBLE_COMPLEX,  Next: mpi4py MPI SHORT_INT,  Prev: mpi4py MPI CXX_DOUBLE_COMPLEX,  Up: mpi4py MPI<2>

9.1.253 mpi4py.MPI.CXX_LONG_DOUBLE_COMPLEX
------------------------------------------

 -- Data: mpi4py.MPI.CXX_LONG_DOUBLE_COMPLEX: *note Datatype: c7. =
          CXX_LONG_DOUBLE_COMPLEX

     *note Datatype: c7. ‘CXX_LONG_DOUBLE_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI SHORT_INT,  Next: mpi4py MPI INT_INT,  Prev: mpi4py MPI CXX_LONG_DOUBLE_COMPLEX,  Up: mpi4py MPI<2>

9.1.254 mpi4py.MPI.SHORT_INT
----------------------------

 -- Data: mpi4py.MPI.SHORT_INT: *note Datatype: c7. = SHORT_INT

     *note Datatype: c7. ‘SHORT_INT’


File: mpi4py.info,  Node: mpi4py MPI INT_INT,  Next: mpi4py MPI TWOINT,  Prev: mpi4py MPI SHORT_INT,  Up: mpi4py MPI<2>

9.1.255 mpi4py.MPI.INT_INT
--------------------------

 -- Data: mpi4py.MPI.INT_INT: *note Datatype: c7. = INT_INT

     *note Datatype: c7. ‘INT_INT’


File: mpi4py.info,  Node: mpi4py MPI TWOINT,  Next: mpi4py MPI LONG_INT,  Prev: mpi4py MPI INT_INT,  Up: mpi4py MPI<2>

9.1.256 mpi4py.MPI.TWOINT
-------------------------

 -- Data: mpi4py.MPI.TWOINT: *note Datatype: c7. = TWOINT

     *note Datatype: c7. ‘TWOINT’


File: mpi4py.info,  Node: mpi4py MPI LONG_INT,  Next: mpi4py MPI FLOAT_INT,  Prev: mpi4py MPI TWOINT,  Up: mpi4py MPI<2>

9.1.257 mpi4py.MPI.LONG_INT
---------------------------

 -- Data: mpi4py.MPI.LONG_INT: *note Datatype: c7. = LONG_INT

     *note Datatype: c7. ‘LONG_INT’


File: mpi4py.info,  Node: mpi4py MPI FLOAT_INT,  Next: mpi4py MPI DOUBLE_INT,  Prev: mpi4py MPI LONG_INT,  Up: mpi4py MPI<2>

9.1.258 mpi4py.MPI.FLOAT_INT
----------------------------

 -- Data: mpi4py.MPI.FLOAT_INT: *note Datatype: c7. = FLOAT_INT

     *note Datatype: c7. ‘FLOAT_INT’


File: mpi4py.info,  Node: mpi4py MPI DOUBLE_INT,  Next: mpi4py MPI LONG_DOUBLE_INT,  Prev: mpi4py MPI FLOAT_INT,  Up: mpi4py MPI<2>

9.1.259 mpi4py.MPI.DOUBLE_INT
-----------------------------

 -- Data: mpi4py.MPI.DOUBLE_INT: *note Datatype: c7. = DOUBLE_INT

     *note Datatype: c7. ‘DOUBLE_INT’


File: mpi4py.info,  Node: mpi4py MPI LONG_DOUBLE_INT,  Next: mpi4py MPI CHARACTER,  Prev: mpi4py MPI DOUBLE_INT,  Up: mpi4py MPI<2>

9.1.260 mpi4py.MPI.LONG_DOUBLE_INT
----------------------------------

 -- Data: mpi4py.MPI.LONG_DOUBLE_INT: *note Datatype: c7. =
          LONG_DOUBLE_INT

     *note Datatype: c7. ‘LONG_DOUBLE_INT’


File: mpi4py.info,  Node: mpi4py MPI CHARACTER,  Next: mpi4py MPI LOGICAL,  Prev: mpi4py MPI LONG_DOUBLE_INT,  Up: mpi4py MPI<2>

9.1.261 mpi4py.MPI.CHARACTER
----------------------------

 -- Data: mpi4py.MPI.CHARACTER: *note Datatype: c7. = CHARACTER

     *note Datatype: c7. ‘CHARACTER’


File: mpi4py.info,  Node: mpi4py MPI LOGICAL,  Next: mpi4py MPI INTEGER,  Prev: mpi4py MPI CHARACTER,  Up: mpi4py MPI<2>

9.1.262 mpi4py.MPI.LOGICAL
--------------------------

 -- Data: mpi4py.MPI.LOGICAL: *note Datatype: c7. = LOGICAL

     *note Datatype: c7. ‘LOGICAL’


File: mpi4py.info,  Node: mpi4py MPI INTEGER,  Next: mpi4py MPI REAL,  Prev: mpi4py MPI LOGICAL,  Up: mpi4py MPI<2>

9.1.263 mpi4py.MPI.INTEGER
--------------------------

 -- Data: mpi4py.MPI.INTEGER: *note Datatype: c7. = INTEGER

     *note Datatype: c7. ‘INTEGER’


File: mpi4py.info,  Node: mpi4py MPI REAL,  Next: mpi4py MPI DOUBLE_PRECISION,  Prev: mpi4py MPI INTEGER,  Up: mpi4py MPI<2>

9.1.264 mpi4py.MPI.REAL
-----------------------

 -- Data: mpi4py.MPI.REAL: *note Datatype: c7. = REAL

     *note Datatype: c7. ‘REAL’


File: mpi4py.info,  Node: mpi4py MPI DOUBLE_PRECISION,  Next: mpi4py MPI COMPLEX,  Prev: mpi4py MPI REAL,  Up: mpi4py MPI<2>

9.1.265 mpi4py.MPI.DOUBLE_PRECISION
-----------------------------------

 -- Data: mpi4py.MPI.DOUBLE_PRECISION: *note Datatype: c7. =
          DOUBLE_PRECISION

     *note Datatype: c7. ‘DOUBLE_PRECISION’


File: mpi4py.info,  Node: mpi4py MPI COMPLEX,  Next: mpi4py MPI DOUBLE_COMPLEX,  Prev: mpi4py MPI DOUBLE_PRECISION,  Up: mpi4py MPI<2>

9.1.266 mpi4py.MPI.COMPLEX
--------------------------

 -- Data: mpi4py.MPI.COMPLEX: *note Datatype: c7. = COMPLEX

     *note Datatype: c7. ‘COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI DOUBLE_COMPLEX,  Next: mpi4py MPI LOGICAL1,  Prev: mpi4py MPI COMPLEX,  Up: mpi4py MPI<2>

9.1.267 mpi4py.MPI.DOUBLE_COMPLEX
---------------------------------

 -- Data: mpi4py.MPI.DOUBLE_COMPLEX: *note Datatype: c7. =
          DOUBLE_COMPLEX

     *note Datatype: c7. ‘DOUBLE_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI LOGICAL1,  Next: mpi4py MPI LOGICAL2,  Prev: mpi4py MPI DOUBLE_COMPLEX,  Up: mpi4py MPI<2>

9.1.268 mpi4py.MPI.LOGICAL1
---------------------------

 -- Data: mpi4py.MPI.LOGICAL1: *note Datatype: c7. = LOGICAL1

     *note Datatype: c7. ‘LOGICAL1’


File: mpi4py.info,  Node: mpi4py MPI LOGICAL2,  Next: mpi4py MPI LOGICAL4,  Prev: mpi4py MPI LOGICAL1,  Up: mpi4py MPI<2>

9.1.269 mpi4py.MPI.LOGICAL2
---------------------------

 -- Data: mpi4py.MPI.LOGICAL2: *note Datatype: c7. = LOGICAL2

     *note Datatype: c7. ‘LOGICAL2’


File: mpi4py.info,  Node: mpi4py MPI LOGICAL4,  Next: mpi4py MPI LOGICAL8,  Prev: mpi4py MPI LOGICAL2,  Up: mpi4py MPI<2>

9.1.270 mpi4py.MPI.LOGICAL4
---------------------------

 -- Data: mpi4py.MPI.LOGICAL4: *note Datatype: c7. = LOGICAL4

     *note Datatype: c7. ‘LOGICAL4’


File: mpi4py.info,  Node: mpi4py MPI LOGICAL8,  Next: mpi4py MPI INTEGER1,  Prev: mpi4py MPI LOGICAL4,  Up: mpi4py MPI<2>

9.1.271 mpi4py.MPI.LOGICAL8
---------------------------

 -- Data: mpi4py.MPI.LOGICAL8: *note Datatype: c7. = LOGICAL8

     *note Datatype: c7. ‘LOGICAL8’


File: mpi4py.info,  Node: mpi4py MPI INTEGER1,  Next: mpi4py MPI INTEGER2,  Prev: mpi4py MPI LOGICAL8,  Up: mpi4py MPI<2>

9.1.272 mpi4py.MPI.INTEGER1
---------------------------

 -- Data: mpi4py.MPI.INTEGER1: *note Datatype: c7. = INTEGER1

     *note Datatype: c7. ‘INTEGER1’


File: mpi4py.info,  Node: mpi4py MPI INTEGER2,  Next: mpi4py MPI INTEGER4,  Prev: mpi4py MPI INTEGER1,  Up: mpi4py MPI<2>

9.1.273 mpi4py.MPI.INTEGER2
---------------------------

 -- Data: mpi4py.MPI.INTEGER2: *note Datatype: c7. = INTEGER2

     *note Datatype: c7. ‘INTEGER2’


File: mpi4py.info,  Node: mpi4py MPI INTEGER4,  Next: mpi4py MPI INTEGER8,  Prev: mpi4py MPI INTEGER2,  Up: mpi4py MPI<2>

9.1.274 mpi4py.MPI.INTEGER4
---------------------------

 -- Data: mpi4py.MPI.INTEGER4: *note Datatype: c7. = INTEGER4

     *note Datatype: c7. ‘INTEGER4’


File: mpi4py.info,  Node: mpi4py MPI INTEGER8,  Next: mpi4py MPI INTEGER16,  Prev: mpi4py MPI INTEGER4,  Up: mpi4py MPI<2>

9.1.275 mpi4py.MPI.INTEGER8
---------------------------

 -- Data: mpi4py.MPI.INTEGER8: *note Datatype: c7. = INTEGER8

     *note Datatype: c7. ‘INTEGER8’


File: mpi4py.info,  Node: mpi4py MPI INTEGER16,  Next: mpi4py MPI REAL2,  Prev: mpi4py MPI INTEGER8,  Up: mpi4py MPI<2>

9.1.276 mpi4py.MPI.INTEGER16
----------------------------

 -- Data: mpi4py.MPI.INTEGER16: *note Datatype: c7. = INTEGER16

     *note Datatype: c7. ‘INTEGER16’


File: mpi4py.info,  Node: mpi4py MPI REAL2,  Next: mpi4py MPI REAL4,  Prev: mpi4py MPI INTEGER16,  Up: mpi4py MPI<2>

9.1.277 mpi4py.MPI.REAL2
------------------------

 -- Data: mpi4py.MPI.REAL2: *note Datatype: c7. = REAL2

     *note Datatype: c7. ‘REAL2’


File: mpi4py.info,  Node: mpi4py MPI REAL4,  Next: mpi4py MPI REAL8,  Prev: mpi4py MPI REAL2,  Up: mpi4py MPI<2>

9.1.278 mpi4py.MPI.REAL4
------------------------

 -- Data: mpi4py.MPI.REAL4: *note Datatype: c7. = REAL4

     *note Datatype: c7. ‘REAL4’


File: mpi4py.info,  Node: mpi4py MPI REAL8,  Next: mpi4py MPI REAL16,  Prev: mpi4py MPI REAL4,  Up: mpi4py MPI<2>

9.1.279 mpi4py.MPI.REAL8
------------------------

 -- Data: mpi4py.MPI.REAL8: *note Datatype: c7. = REAL8

     *note Datatype: c7. ‘REAL8’


File: mpi4py.info,  Node: mpi4py MPI REAL16,  Next: mpi4py MPI COMPLEX4,  Prev: mpi4py MPI REAL8,  Up: mpi4py MPI<2>

9.1.280 mpi4py.MPI.REAL16
-------------------------

 -- Data: mpi4py.MPI.REAL16: *note Datatype: c7. = REAL16

     *note Datatype: c7. ‘REAL16’


File: mpi4py.info,  Node: mpi4py MPI COMPLEX4,  Next: mpi4py MPI COMPLEX8,  Prev: mpi4py MPI REAL16,  Up: mpi4py MPI<2>

9.1.281 mpi4py.MPI.COMPLEX4
---------------------------

 -- Data: mpi4py.MPI.COMPLEX4: *note Datatype: c7. = COMPLEX4

     *note Datatype: c7. ‘COMPLEX4’


File: mpi4py.info,  Node: mpi4py MPI COMPLEX8,  Next: mpi4py MPI COMPLEX16,  Prev: mpi4py MPI COMPLEX4,  Up: mpi4py MPI<2>

9.1.282 mpi4py.MPI.COMPLEX8
---------------------------

 -- Data: mpi4py.MPI.COMPLEX8: *note Datatype: c7. = COMPLEX8

     *note Datatype: c7. ‘COMPLEX8’


File: mpi4py.info,  Node: mpi4py MPI COMPLEX16,  Next: mpi4py MPI COMPLEX32,  Prev: mpi4py MPI COMPLEX8,  Up: mpi4py MPI<2>

9.1.283 mpi4py.MPI.COMPLEX16
----------------------------

 -- Data: mpi4py.MPI.COMPLEX16: *note Datatype: c7. = COMPLEX16

     *note Datatype: c7. ‘COMPLEX16’


File: mpi4py.info,  Node: mpi4py MPI COMPLEX32,  Next: mpi4py MPI UNSIGNED_INT,  Prev: mpi4py MPI COMPLEX16,  Up: mpi4py MPI<2>

9.1.284 mpi4py.MPI.COMPLEX32
----------------------------

 -- Data: mpi4py.MPI.COMPLEX32: *note Datatype: c7. = COMPLEX32

     *note Datatype: c7. ‘COMPLEX32’


File: mpi4py.info,  Node: mpi4py MPI UNSIGNED_INT,  Next: mpi4py MPI SIGNED_SHORT,  Prev: mpi4py MPI COMPLEX32,  Up: mpi4py MPI<2>

9.1.285 mpi4py.MPI.UNSIGNED_INT
-------------------------------

 -- Data: mpi4py.MPI.UNSIGNED_INT: *note Datatype: c7. = UNSIGNED_INT

     *note Datatype: c7. ‘UNSIGNED_INT’


File: mpi4py.info,  Node: mpi4py MPI SIGNED_SHORT,  Next: mpi4py MPI SIGNED_INT,  Prev: mpi4py MPI UNSIGNED_INT,  Up: mpi4py MPI<2>

9.1.286 mpi4py.MPI.SIGNED_SHORT
-------------------------------

 -- Data: mpi4py.MPI.SIGNED_SHORT: *note Datatype: c7. = SIGNED_SHORT

     *note Datatype: c7. ‘SIGNED_SHORT’


File: mpi4py.info,  Node: mpi4py MPI SIGNED_INT,  Next: mpi4py MPI SIGNED_LONG,  Prev: mpi4py MPI SIGNED_SHORT,  Up: mpi4py MPI<2>

9.1.287 mpi4py.MPI.SIGNED_INT
-----------------------------

 -- Data: mpi4py.MPI.SIGNED_INT: *note Datatype: c7. = SIGNED_INT

     *note Datatype: c7. ‘SIGNED_INT’


File: mpi4py.info,  Node: mpi4py MPI SIGNED_LONG,  Next: mpi4py MPI SIGNED_LONG_LONG,  Prev: mpi4py MPI SIGNED_INT,  Up: mpi4py MPI<2>

9.1.288 mpi4py.MPI.SIGNED_LONG
------------------------------

 -- Data: mpi4py.MPI.SIGNED_LONG: *note Datatype: c7. = SIGNED_LONG

     *note Datatype: c7. ‘SIGNED_LONG’


File: mpi4py.info,  Node: mpi4py MPI SIGNED_LONG_LONG,  Next: mpi4py MPI BOOL,  Prev: mpi4py MPI SIGNED_LONG,  Up: mpi4py MPI<2>

9.1.289 mpi4py.MPI.SIGNED_LONG_LONG
-----------------------------------

 -- Data: mpi4py.MPI.SIGNED_LONG_LONG: *note Datatype: c7. =
          SIGNED_LONG_LONG

     *note Datatype: c7. ‘SIGNED_LONG_LONG’


File: mpi4py.info,  Node: mpi4py MPI BOOL,  Next: mpi4py MPI SINT8_T,  Prev: mpi4py MPI SIGNED_LONG_LONG,  Up: mpi4py MPI<2>

9.1.290 mpi4py.MPI.BOOL
-----------------------

 -- Data: mpi4py.MPI.BOOL: *note Datatype: c7. = BOOL

     *note Datatype: c7. ‘BOOL’


File: mpi4py.info,  Node: mpi4py MPI SINT8_T,  Next: mpi4py MPI SINT16_T,  Prev: mpi4py MPI BOOL,  Up: mpi4py MPI<2>

9.1.291 mpi4py.MPI.SINT8_T
--------------------------

 -- Data: mpi4py.MPI.SINT8_T: *note Datatype: c7. = SINT8_T

     *note Datatype: c7. ‘SINT8_T’


File: mpi4py.info,  Node: mpi4py MPI SINT16_T,  Next: mpi4py MPI SINT32_T,  Prev: mpi4py MPI SINT8_T,  Up: mpi4py MPI<2>

9.1.292 mpi4py.MPI.SINT16_T
---------------------------

 -- Data: mpi4py.MPI.SINT16_T: *note Datatype: c7. = SINT16_T

     *note Datatype: c7. ‘SINT16_T’


File: mpi4py.info,  Node: mpi4py MPI SINT32_T,  Next: mpi4py MPI SINT64_T,  Prev: mpi4py MPI SINT16_T,  Up: mpi4py MPI<2>

9.1.293 mpi4py.MPI.SINT32_T
---------------------------

 -- Data: mpi4py.MPI.SINT32_T: *note Datatype: c7. = SINT32_T

     *note Datatype: c7. ‘SINT32_T’


File: mpi4py.info,  Node: mpi4py MPI SINT64_T,  Next: mpi4py MPI F_BOOL,  Prev: mpi4py MPI SINT32_T,  Up: mpi4py MPI<2>

9.1.294 mpi4py.MPI.SINT64_T
---------------------------

 -- Data: mpi4py.MPI.SINT64_T: *note Datatype: c7. = SINT64_T

     *note Datatype: c7. ‘SINT64_T’


File: mpi4py.info,  Node: mpi4py MPI F_BOOL,  Next: mpi4py MPI F_INT,  Prev: mpi4py MPI SINT64_T,  Up: mpi4py MPI<2>

9.1.295 mpi4py.MPI.F_BOOL
-------------------------

 -- Data: mpi4py.MPI.F_BOOL: *note Datatype: c7. = F_BOOL

     *note Datatype: c7. ‘F_BOOL’


File: mpi4py.info,  Node: mpi4py MPI F_INT,  Next: mpi4py MPI F_FLOAT,  Prev: mpi4py MPI F_BOOL,  Up: mpi4py MPI<2>

9.1.296 mpi4py.MPI.F_INT
------------------------

 -- Data: mpi4py.MPI.F_INT: *note Datatype: c7. = F_INT

     *note Datatype: c7. ‘F_INT’


File: mpi4py.info,  Node: mpi4py MPI F_FLOAT,  Next: mpi4py MPI F_DOUBLE,  Prev: mpi4py MPI F_INT,  Up: mpi4py MPI<2>

9.1.297 mpi4py.MPI.F_FLOAT
--------------------------

 -- Data: mpi4py.MPI.F_FLOAT: *note Datatype: c7. = F_FLOAT

     *note Datatype: c7. ‘F_FLOAT’


File: mpi4py.info,  Node: mpi4py MPI F_DOUBLE,  Next: mpi4py MPI F_COMPLEX,  Prev: mpi4py MPI F_FLOAT,  Up: mpi4py MPI<2>

9.1.298 mpi4py.MPI.F_DOUBLE
---------------------------

 -- Data: mpi4py.MPI.F_DOUBLE: *note Datatype: c7. = F_DOUBLE

     *note Datatype: c7. ‘F_DOUBLE’


File: mpi4py.info,  Node: mpi4py MPI F_COMPLEX,  Next: mpi4py MPI F_FLOAT_COMPLEX,  Prev: mpi4py MPI F_DOUBLE,  Up: mpi4py MPI<2>

9.1.299 mpi4py.MPI.F_COMPLEX
----------------------------

 -- Data: mpi4py.MPI.F_COMPLEX: *note Datatype: c7. = F_COMPLEX

     *note Datatype: c7. ‘F_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI F_FLOAT_COMPLEX,  Next: mpi4py MPI F_DOUBLE_COMPLEX,  Prev: mpi4py MPI F_COMPLEX,  Up: mpi4py MPI<2>

9.1.300 mpi4py.MPI.F_FLOAT_COMPLEX
----------------------------------

 -- Data: mpi4py.MPI.F_FLOAT_COMPLEX: *note Datatype: c7. =
          F_FLOAT_COMPLEX

     *note Datatype: c7. ‘F_FLOAT_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI F_DOUBLE_COMPLEX,  Next: mpi4py MPI REQUEST_NULL,  Prev: mpi4py MPI F_FLOAT_COMPLEX,  Up: mpi4py MPI<2>

9.1.301 mpi4py.MPI.F_DOUBLE_COMPLEX
-----------------------------------

 -- Data: mpi4py.MPI.F_DOUBLE_COMPLEX: *note Datatype: c7. =
          F_DOUBLE_COMPLEX

     *note Datatype: c7. ‘F_DOUBLE_COMPLEX’


File: mpi4py.info,  Node: mpi4py MPI REQUEST_NULL,  Next: mpi4py MPI MESSAGE_NULL,  Prev: mpi4py MPI F_DOUBLE_COMPLEX,  Up: mpi4py MPI<2>

9.1.302 mpi4py.MPI.REQUEST_NULL
-------------------------------

 -- Data: mpi4py.MPI.REQUEST_NULL: *note Request: 3f. = REQUEST_NULL

     *note Request: 3f. ‘REQUEST_NULL’


File: mpi4py.info,  Node: mpi4py MPI MESSAGE_NULL,  Next: mpi4py MPI MESSAGE_NO_PROC,  Prev: mpi4py MPI REQUEST_NULL,  Up: mpi4py MPI<2>

9.1.303 mpi4py.MPI.MESSAGE_NULL
-------------------------------

 -- Data: mpi4py.MPI.MESSAGE_NULL: *note Message: cd. = MESSAGE_NULL

     *note Message: cd. ‘MESSAGE_NULL’


File: mpi4py.info,  Node: mpi4py MPI MESSAGE_NO_PROC,  Next: mpi4py MPI OP_NULL,  Prev: mpi4py MPI MESSAGE_NULL,  Up: mpi4py MPI<2>

9.1.304 mpi4py.MPI.MESSAGE_NO_PROC
----------------------------------

 -- Data: mpi4py.MPI.MESSAGE_NO_PROC: *note Message: cd. =
          MESSAGE_NO_PROC

     *note Message: cd. ‘MESSAGE_NO_PROC’


File: mpi4py.info,  Node: mpi4py MPI OP_NULL,  Next: mpi4py MPI MAX,  Prev: mpi4py MPI MESSAGE_NO_PROC,  Up: mpi4py MPI<2>

9.1.305 mpi4py.MPI.OP_NULL
--------------------------

 -- Data: mpi4py.MPI.OP_NULL: *note Op: ca. = OP_NULL

     *note Op: ca. ‘OP_NULL’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI MAX,  Next: mpi4py MPI MIN,  Prev: mpi4py MPI OP_NULL,  Up: mpi4py MPI<2>

9.1.306 mpi4py.MPI.MAX
----------------------

 -- Data: mpi4py.MPI.MAX: *note Op: ca. = MAX

     *note Op: ca. ‘MAX’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI MIN,  Next: mpi4py MPI SUM,  Prev: mpi4py MPI MAX,  Up: mpi4py MPI<2>

9.1.307 mpi4py.MPI.MIN
----------------------

 -- Data: mpi4py.MPI.MIN: *note Op: ca. = MIN

     *note Op: ca. ‘MIN’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI SUM,  Next: mpi4py MPI PROD,  Prev: mpi4py MPI MIN,  Up: mpi4py MPI<2>

9.1.308 mpi4py.MPI.SUM
----------------------

 -- Data: mpi4py.MPI.SUM: *note Op: ca. = SUM

     *note Op: ca. ‘SUM’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI PROD,  Next: mpi4py MPI LAND,  Prev: mpi4py MPI SUM,  Up: mpi4py MPI<2>

9.1.309 mpi4py.MPI.PROD
-----------------------

 -- Data: mpi4py.MPI.PROD: *note Op: ca. = PROD

     *note Op: ca. ‘PROD’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI LAND,  Next: mpi4py MPI BAND,  Prev: mpi4py MPI PROD,  Up: mpi4py MPI<2>

9.1.310 mpi4py.MPI.LAND
-----------------------

 -- Data: mpi4py.MPI.LAND: *note Op: ca. = LAND

     *note Op: ca. ‘LAND’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI BAND,  Next: mpi4py MPI LOR,  Prev: mpi4py MPI LAND,  Up: mpi4py MPI<2>

9.1.311 mpi4py.MPI.BAND
-----------------------

 -- Data: mpi4py.MPI.BAND: *note Op: ca. = BAND

     *note Op: ca. ‘BAND’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI LOR,  Next: mpi4py MPI BOR,  Prev: mpi4py MPI BAND,  Up: mpi4py MPI<2>

9.1.312 mpi4py.MPI.LOR
----------------------

 -- Data: mpi4py.MPI.LOR: *note Op: ca. = LOR

     *note Op: ca. ‘LOR’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI BOR,  Next: mpi4py MPI LXOR,  Prev: mpi4py MPI LOR,  Up: mpi4py MPI<2>

9.1.313 mpi4py.MPI.BOR
----------------------

 -- Data: mpi4py.MPI.BOR: *note Op: ca. = BOR

     *note Op: ca. ‘BOR’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI LXOR,  Next: mpi4py MPI BXOR,  Prev: mpi4py MPI BOR,  Up: mpi4py MPI<2>

9.1.314 mpi4py.MPI.LXOR
-----------------------

 -- Data: mpi4py.MPI.LXOR: *note Op: ca. = LXOR

     *note Op: ca. ‘LXOR’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI BXOR,  Next: mpi4py MPI MAXLOC,  Prev: mpi4py MPI LXOR,  Up: mpi4py MPI<2>

9.1.315 mpi4py.MPI.BXOR
-----------------------

 -- Data: mpi4py.MPI.BXOR: *note Op: ca. = BXOR

     *note Op: ca. ‘BXOR’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI MAXLOC,  Next: mpi4py MPI MINLOC,  Prev: mpi4py MPI BXOR,  Up: mpi4py MPI<2>

9.1.316 mpi4py.MPI.MAXLOC
-------------------------

 -- Data: mpi4py.MPI.MAXLOC: *note Op: ca. = MAXLOC

     *note Op: ca. ‘MAXLOC’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI MINLOC,  Next: mpi4py MPI REPLACE,  Prev: mpi4py MPI MAXLOC,  Up: mpi4py MPI<2>

9.1.317 mpi4py.MPI.MINLOC
-------------------------

 -- Data: mpi4py.MPI.MINLOC: *note Op: ca. = MINLOC

     *note Op: ca. ‘MINLOC’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI REPLACE,  Next: mpi4py MPI NO_OP,  Prev: mpi4py MPI MINLOC,  Up: mpi4py MPI<2>

9.1.318 mpi4py.MPI.REPLACE
--------------------------

 -- Data: mpi4py.MPI.REPLACE: *note Op: ca. = REPLACE

     *note Op: ca. ‘REPLACE’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI NO_OP,  Next: mpi4py MPI GROUP_NULL,  Prev: mpi4py MPI REPLACE,  Up: mpi4py MPI<2>

9.1.319 mpi4py.MPI.NO_OP
------------------------

 -- Data: mpi4py.MPI.NO_OP: *note Op: ca. = NO_OP

     *note Op: ca. ‘NO_OP’


     Parameters:

        * ‘x’ (‘Any’) –

        * ‘y’ (‘Any’) –


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI GROUP_NULL,  Next: mpi4py MPI GROUP_EMPTY,  Prev: mpi4py MPI NO_OP,  Up: mpi4py MPI<2>

9.1.320 mpi4py.MPI.GROUP_NULL
-----------------------------

 -- Data: mpi4py.MPI.GROUP_NULL: *note Group: 24. = GROUP_NULL

     *note Group: 24. ‘GROUP_NULL’


File: mpi4py.info,  Node: mpi4py MPI GROUP_EMPTY,  Next: mpi4py MPI INFO_NULL,  Prev: mpi4py MPI GROUP_NULL,  Up: mpi4py MPI<2>

9.1.321 mpi4py.MPI.GROUP_EMPTY
------------------------------

 -- Data: mpi4py.MPI.GROUP_EMPTY: *note Group: 24. = GROUP_EMPTY

     *note Group: 24. ‘GROUP_EMPTY’


File: mpi4py.info,  Node: mpi4py MPI INFO_NULL,  Next: mpi4py MPI INFO_ENV,  Prev: mpi4py MPI GROUP_EMPTY,  Up: mpi4py MPI<2>

9.1.322 mpi4py.MPI.INFO_NULL
----------------------------

 -- Data: mpi4py.MPI.INFO_NULL: *note Info: cb. = INFO_NULL

     *note Info: cb. ‘INFO_NULL’


File: mpi4py.info,  Node: mpi4py MPI INFO_ENV,  Next: mpi4py MPI ERRHANDLER_NULL,  Prev: mpi4py MPI INFO_NULL,  Up: mpi4py MPI<2>

9.1.323 mpi4py.MPI.INFO_ENV
---------------------------

 -- Data: mpi4py.MPI.INFO_ENV: *note Info: cb. = INFO_ENV

     *note Info: cb. ‘INFO_ENV’


File: mpi4py.info,  Node: mpi4py MPI ERRHANDLER_NULL,  Next: mpi4py MPI ERRORS_RETURN,  Prev: mpi4py MPI INFO_ENV,  Up: mpi4py MPI<2>

9.1.324 mpi4py.MPI.ERRHANDLER_NULL
----------------------------------

 -- Data: mpi4py.MPI.ERRHANDLER_NULL: *note Errhandler: ce. =
          ERRHANDLER_NULL

     *note Errhandler: ce. ‘ERRHANDLER_NULL’


File: mpi4py.info,  Node: mpi4py MPI ERRORS_RETURN,  Next: mpi4py MPI ERRORS_ARE_FATAL,  Prev: mpi4py MPI ERRHANDLER_NULL,  Up: mpi4py MPI<2>

9.1.325 mpi4py.MPI.ERRORS_RETURN
--------------------------------

 -- Data: mpi4py.MPI.ERRORS_RETURN: *note Errhandler: ce. =
          ERRORS_RETURN

     *note Errhandler: ce. ‘ERRORS_RETURN’


File: mpi4py.info,  Node: mpi4py MPI ERRORS_ARE_FATAL,  Next: mpi4py MPI COMM_NULL,  Prev: mpi4py MPI ERRORS_RETURN,  Up: mpi4py MPI<2>

9.1.326 mpi4py.MPI.ERRORS_ARE_FATAL
-----------------------------------

 -- Data: mpi4py.MPI.ERRORS_ARE_FATAL: *note Errhandler: ce. =
          ERRORS_ARE_FATAL

     *note Errhandler: ce. ‘ERRORS_ARE_FATAL’


File: mpi4py.info,  Node: mpi4py MPI COMM_NULL,  Next: mpi4py MPI COMM_SELF,  Prev: mpi4py MPI ERRORS_ARE_FATAL,  Up: mpi4py MPI<2>

9.1.327 mpi4py.MPI.COMM_NULL
----------------------------

 -- Data: mpi4py.MPI.COMM_NULL: *note Comm: 1a. = COMM_NULL

     *note Comm: 1a. ‘COMM_NULL’


File: mpi4py.info,  Node: mpi4py MPI COMM_SELF,  Next: mpi4py MPI COMM_WORLD,  Prev: mpi4py MPI COMM_NULL,  Up: mpi4py MPI<2>

9.1.328 mpi4py.MPI.COMM_SELF
----------------------------

 -- Data: mpi4py.MPI.COMM_SELF: *note Intracomm: 1b. = COMM_SELF

     *note Intracomm: 1b. ‘COMM_SELF’


File: mpi4py.info,  Node: mpi4py MPI COMM_WORLD,  Next: mpi4py MPI WIN_NULL,  Prev: mpi4py MPI COMM_SELF,  Up: mpi4py MPI<2>

9.1.329 mpi4py.MPI.COMM_WORLD
-----------------------------

 -- Data: mpi4py.MPI.COMM_WORLD: *note Intracomm: 1b. = COMM_WORLD

     *note Intracomm: 1b. ‘COMM_WORLD’


File: mpi4py.info,  Node: mpi4py MPI WIN_NULL,  Next: mpi4py MPI FILE_NULL,  Prev: mpi4py MPI COMM_WORLD,  Up: mpi4py MPI<2>

9.1.330 mpi4py.MPI.WIN_NULL
---------------------------

 -- Data: mpi4py.MPI.WIN_NULL: *note Win: 72. = WIN_NULL

     *note Win: 72. ‘WIN_NULL’


File: mpi4py.info,  Node: mpi4py MPI FILE_NULL,  Next: mpi4py MPI pickle,  Prev: mpi4py MPI WIN_NULL,  Up: mpi4py MPI<2>

9.1.331 mpi4py.MPI.FILE_NULL
----------------------------

 -- Data: mpi4py.MPI.FILE_NULL: *note File: 80. = FILE_NULL

     *note File: 80. ‘FILE_NULL’


File: mpi4py.info,  Node: mpi4py MPI pickle,  Prev: mpi4py MPI FILE_NULL,  Up: mpi4py MPI<2>

9.1.332 mpi4py.MPI.pickle
-------------------------

 -- Data: mpi4py.MPI.pickle: *note Pickle: cf. = <mpi4py.MPI.Pickle
          object>

     *note Pickle: cf. ‘pickle’


File: mpi4py.info,  Node: Citation,  Next: Installation,  Prev: Reference,  Up: Top

10 Citation
***********

If MPI for Python been significant to a project that leads to an
academic publication, please acknowledge that fact by citing the
project.

   * L. Dalcin and Y.-L. L. Fang, `mpi4py: Status Update After 12 Years
     of Development', Computing in Science & Engineering, 23(4):47-54,
     2021.  ‘https://doi.org/10.1109/MCSE.2021.3083216’

   * L. Dalcin, P. Kler, R. Paz, and A. Cosimo, `Parallel Distributed
     Computing using Python', Advances in Water Resources,
     34(9):1124-1139, 2011.
     ‘https://doi.org/10.1016/j.advwatres.2011.04.013’

   * L. Dalcin, R. Paz, M. Storti, and J. D’Elia, `MPI for Python:
     performance improvements and MPI-2 extensions', Journal of Parallel
     and Distributed Computing, 68(5):655-662, 2008.
     ‘https://doi.org/10.1016/j.jpdc.2007.09.005’

   * L. Dalcin, R. Paz, and M. Storti, `MPI for Python', Journal of
     Parallel and Distributed Computing, 65(9):1108-1115, 2005.
     ‘https://doi.org/10.1016/j.jpdc.2005.03.010’


File: mpi4py.info,  Node: Installation,  Next: Appendix,  Prev: Citation,  Up: Top

11 Installation
***************

* Menu:

* Requirements::
* Using pip::
* Using distutils::
* Testing::


File: mpi4py.info,  Node: Requirements,  Next: Using pip,  Up: Installation

11.1 Requirements
=================

You need to have the following software properly installed in order to
build `MPI for Python':

   * A working MPI implementation, preferably supporting MPI-3 and built
     with shared/dynamic libraries.

          Note: If you want to build some MPI implementation from
          sources, check the instructions at *note Building MPI from
          sources: 66a. in the appendix.

   * Python 2.7, 3.5 or above.

          Note: Some MPI-1 implementations `do require' the actual
          command line arguments to be passed in ‘MPI_Init()’.  In this
          case, you will need to use a rebuilt, MPI-enabled, Python
          interpreter executable.  `MPI for Python' has some support for
          alleviating you from this task.  Check the instructions at
          *note MPI-enabled Python interpreter: 66b. in the appendix.


File: mpi4py.info,  Node: Using pip,  Next: Using distutils,  Prev: Requirements,  Up: Installation

11.2 Using `pip'
================

If you already have a working MPI (either if you installed it from
sources or by using a pre-built package from your favourite GNU/Linux
distribution) and the ‘mpicc’ compiler wrapper is on your search path,
you can use ‘pip’:

     $ python -m pip install mpi4py

     Note: If the ‘mpicc’ compiler wrapper is not on your search path
     (or if it has a different name) you can use ‘env’ to pass the
     environment variable ‘MPICC’ providing the full path to the MPI
     compiler wrapper executable:

          $ env MPICC=/path/to/mpicc python -m pip install mpi4py

     Warning: ‘pip’ keeps previouly built wheel files on its cache for
     future reuse.  If you want to reinstall the *note mpi4py: 0.
     package using a different or updated MPI implementation, you have
     to either first remove the cached wheel file with:

          $ python -m pip cache remove mpi4py

     or ask ‘pip’ to disable the cache:

          $ python -m pip install --no-cache-dir mpi4py


File: mpi4py.info,  Node: Using distutils,  Next: Testing,  Prev: Using pip,  Up: Installation

11.3 Using `distutils'
======================

The `MPI for Python' package is available for download at the project
website generously hosted by GitHub.  You can use ‘curl’ or ‘wget’ to
get a release tarball.

   * Using ‘curl’:

          $ curl -O https://github.com/mpi4py/mpi4py/releases/download/X.Y.Z/mpi4py-X.Y.Z.tar.gz

   * Using ‘wget’:

          $ wget https://github.com/mpi4py/mpi4py/releases/download/X.Y.Z/mpi4py-X.Y.Z.tar.gz

After unpacking the release tarball:

     $ tar -zxf mpi4py-X.Y.Z.tar.gz
     $ cd mpi4py-X.Y.Z

the package is ready for building.

`MPI for Python' uses a standard distutils-based build system.  However,
some distutils commands (like `build') have additional options:

 -- Program Option: --mpicc=

     Lets you specify a special location or name for the ‘mpicc’
     compiler wrapper.

 -- Program Option: --mpi=

     Lets you pass a section with MPI configuration within a special
     configuration file.

 -- Program Option: --configure

     Runs exhaustive tests for checking about missing MPI types,
     constants, and functions.  This option should be passed in order to
     build `MPI for Python' against old MPI-1 or MPI-2 implementations,
     possibly providing a subset of MPI-3.

If you use a MPI implementation providing a ‘mpicc’ compiler wrapper
(e.g., MPICH, Open MPI), it will be used for compilation and linking.
This is the preferred and easiest way of building `MPI for Python'.

If ‘mpicc’ is located somewhere in your search path, simply run the
`build' command:

     $ python setup.py build

If ‘mpicc’ is not in your search path or the compiler wrapper has a
different name, you can run the `build' command specifying its location:

     $ python setup.py build --mpicc=/where/you/have/mpicc

Alternatively, you can provide all the relevant information about your
MPI implementation by editing the file called ‘mpi.cfg’.  You can use
the default section ‘[mpi]’ or add a new, custom section, for example
‘[other_mpi]’ (see the examples provided in the ‘mpi.cfg’ file as a
starting point to write your own section):

     [mpi]

     include_dirs         = /usr/local/mpi/include
     libraries            = mpi
     library_dirs         = /usr/local/mpi/lib
     runtime_library_dirs = /usr/local/mpi/lib

     [other_mpi]

     include_dirs         = /opt/mpi/include ...
     libraries            = mpi ...
     library_dirs         = /opt/mpi/lib ...
     runtime_library_dirs = /op/mpi/lib ...

     ...

and then run the `build' command, perhaps specifying you custom
configuration section:

     $ python setup.py build --mpi=other_mpi

After building, the package is ready for install.

If you have root privileges (either by log-in as the root user of by
using ‘sudo’) and you want to install `MPI for Python' in your system
for all users, just do:

     $ python setup.py install

The previous steps will install the *note mpi4py: 0. package at standard
location ‘`prefix'/lib/python`X'.`X'/site-packages’.

If you do not have root privileges or you want to install `MPI for
Python' for your private use, just do:

     $ python setup.py install --user


File: mpi4py.info,  Node: Testing,  Prev: Using distutils,  Up: Installation

11.4 Testing
============

To quickly test the installation:

     $ mpiexec -n 5 python -m mpi4py.bench helloworld
     Hello, World! I am process 0 of 5 on localhost.
     Hello, World! I am process 1 of 5 on localhost.
     Hello, World! I am process 2 of 5 on localhost.
     Hello, World! I am process 3 of 5 on localhost.
     Hello, World! I am process 4 of 5 on localhost.

If you installed from source, issuing at the command line:

     $ mpiexec -n 5 python demo/helloworld.py

or (in the case of ancient MPI-1 implementations):

     $ mpirun -np 5 python `pwd`/demo/helloworld.py

will launch a five-process run of the Python interpreter and run the
test script ‘demo/helloworld.py’ from the source distribution.

You can also run all the `unittest' scripts:

     $ mpiexec -n 5 python test/runtests.py

or, if you have nose(1) unit testing framework installed:

     $ mpiexec -n 5 nosetests -w test

or, if you have py.test(2) unit testing framework installed:

     $ mpiexec -n 5 py.test test/

   ---------- Footnotes ----------

   (1) https://nose.readthedocs.io/

   (2) https://docs.pytest.org/


File: mpi4py.info,  Node: Appendix,  Next: Python Module Index,  Prev: Installation,  Up: Top

12 Appendix
***********

* Menu:

* MPI-enabled Python interpreter::
* Building MPI from sources::


File: mpi4py.info,  Node: MPI-enabled Python interpreter,  Next: Building MPI from sources,  Up: Appendix

12.1 MPI-enabled Python interpreter
===================================

          Warning: These days it is no longer required to use the
          MPI-enabled Python interpreter in most cases, and, therefore,
          it is not built by default anymore because it is too difficult
          to reliably build a Python interpreter across different
          distributions.  If you know that you still `really' need it,
          see below on how to use the ‘build_exe’ and ‘install_exe’
          commands.

Some MPI-1 implementations (notably, MPICH 1) `do require' the actual
command line arguments to be passed at the time ‘MPI_Init()’ is called.
In this case, you will need to use a re-built, MPI-enabled, Python
interpreter binary executable.  A basic implementation (targeting Python
2.X) of what is required is shown below:

     #include <Python.h>
     #include <mpi.h>

     int main(int argc, char *argv[])
     {
        int status, flag;
        MPI_Init(&argc, &argv);
        status = Py_Main(argc, argv);
        MPI_Finalized(&flag);
        if (!flag) MPI_Finalize();
        return status;
     }

The source code above is straightforward; compiling it should also be.
However, the linking step is more tricky: special flags have to be
passed to the linker depending on your platform.  In order to alleviate
you for such low-level details, `MPI for Python' provides some
pure-distutils based support to build and install an MPI-enabled Python
interpreter executable:

     $ cd mpi4py-X.X.X
     $ python setup.py build_exe [--mpi=<name>|--mpicc=/path/to/mpicc]
     $ [sudo] python setup.py install_exe [--install-dir=$HOME/bin]

After the above steps you should have the MPI-enabled interpreter
installed as ‘`prefix'/bin/python`X'.`X'-mpi’ (or
‘$HOME/bin/python`X'.`X'-mpi’).  Assuming that ‘`prefix'/bin’ (or
‘$HOME/bin’) is listed on your ‘PATH’, you should be able to enter your
MPI-enabled Python interactively, for example:

     $ python2.7-mpi
     Python 2.7.8 (default, Nov 10 2014, 08:19:18)
     [GCC 4.9.2 20141101 (Red Hat 4.9.2-1)] on linux2
     Type "help", "copyright", "credits" or "license" for more information.
     >>> import sys
     >>> sys.executable
     '/usr/bin/python2.7-mpi'
     >>>


File: mpi4py.info,  Node: Building MPI from sources,  Prev: MPI-enabled Python interpreter,  Up: Appendix

12.2 Building MPI from sources
==============================

In the list below you have some executive instructions for building some
of the open-source MPI implementations out there with support for
shared/dynamic libraries on POSIX environments.

   + `MPICH'

          $ tar -zxf mpich-X.X.X.tar.gz
          $ cd mpich-X.X.X
          $ ./configure --enable-shared --prefix=/usr/local/mpich
          $ make
          $ make install

   + `Open MPI'

          $ tar -zxf openmpi-X.X.X tar.gz
          $ cd openmpi-X.X.X
          $ ./configure --prefix=/usr/local/openmpi
          $ make all
          $ make install

   + `MPICH 1'

          $ tar -zxf mpich-X.X.X.tar.gz
          $ cd mpich-X.X.X
          $ ./configure --enable-sharedlib --prefix=/usr/local/mpich1
          $ make
          $ make install

Perhaps you will need to set the ‘LD_LIBRARY_PATH’ environment variable
(using ‘export’, ‘setenv’ or what applies to your system) pointing to
the directory containing the MPI libraries .  In case of getting runtime
linking errors when running MPI programs, the following lines can be
added to the user login shell script (‘.profile’, ‘.bashrc’, etc.).

   - `MPICH'

          MPI_DIR=/usr/local/mpich
          export LD_LIBRARY_PATH=$MPI_DIR/lib:$LD_LIBRARY_PATH

   - `Open MPI'

          MPI_DIR=/usr/local/openmpi
          export LD_LIBRARY_PATH=$MPI_DIR/lib:$LD_LIBRARY_PATH

   - `MPICH 1'

          MPI_DIR=/usr/local/mpich1
          export LD_LIBRARY_PATH=$MPI_DIR/lib/shared:$LD_LIBRARY_PATH:
          export MPICH_USE_SHLIB=yes

          Warning: MPICH 1 support for dynamic libraries is not
          completely transparent.  Users should set the environment
          variable ‘MPICH_USE_SHLIB’ to ‘yes’ in order to avoid link
          problems when using the ‘mpicc’ compiler wrapper.


File: mpi4py.info,  Node: Python Module Index,  Next: Index,  Prev: Appendix,  Up: Top

Python Module Index
*******************

* Menu:

* mpi4py: 0. The MPI for Python package.
* mpi4py.futures: 1. Execute computations concurrently using MPI processes.
* mpi4py.MPI: 2. Message Passing Interface.
* mpi4py.run: 3. Run Python code using ‘‘-m mpi4py‘‘.
* mpi4py.util: 4. Miscellaneous utilities.
* mpi4py.util.dtlib: 5. Convert NumPy and MPI datatypes.
* mpi4py.util.pkl5: 6. Pickle-based communication using protocol 5.


File: mpi4py.info,  Node: Index,  Prev: Python Module Index,  Up: Top

Index
*****

 [index ]
* Menu:

* __init__() (mpi4py.MPI.Pickle method): mpi4py MPI Pickle.  (line   26)
* __new__() (mpi4py.MPI.Cartcomm static method): mpi4py MPI Cartcomm.
                                                             (line   18)
* __new__() (mpi4py.MPI.Comm static method): mpi4py MPI Comm.
                                                             (line   18)
* __new__() (mpi4py.MPI.Datatype static method): mpi4py MPI Datatype.
                                                             (line   18)
* __new__() (mpi4py.MPI.Distgraphcomm static method): mpi4py MPI Distgraphcomm.
                                                             (line   18)
* __new__() (mpi4py.MPI.Errhandler static method): mpi4py MPI Errhandler.
                                                             (line   18)
* __new__() (mpi4py.MPI.Exception static method): mpi4py MPI Exception.
                                                             (line   18)
* __new__() (mpi4py.MPI.File static method): mpi4py MPI File.
                                                             (line   18)
* __new__() (mpi4py.MPI.Graphcomm static method): mpi4py MPI Graphcomm.
                                                             (line   18)
* __new__() (mpi4py.MPI.Grequest static method): mpi4py MPI Grequest.
                                                             (line   18)
* __new__() (mpi4py.MPI.Group static method): mpi4py MPI Group.
                                                             (line   18)
* __new__() (mpi4py.MPI.Info static method): mpi4py MPI Info.
                                                             (line   18)
* __new__() (mpi4py.MPI.Intercomm static method): mpi4py MPI Intercomm.
                                                             (line   18)
* __new__() (mpi4py.MPI.Intracomm static method): mpi4py MPI Intracomm.
                                                             (line   18)
* __new__() (mpi4py.MPI.memory static method): mpi4py MPI memory.
                                                             (line   18)
* __new__() (mpi4py.MPI.Message static method): mpi4py MPI Message.
                                                             (line   18)
* __new__() (mpi4py.MPI.Op static method): mpi4py MPI Op.    (line   18)
* __new__() (mpi4py.MPI.Prequest static method): mpi4py MPI Prequest.
                                                             (line   18)
* __new__() (mpi4py.MPI.Request static method): mpi4py MPI Request.
                                                             (line   18)
* __new__() (mpi4py.MPI.Status static method): mpi4py MPI Status.
                                                             (line   18)
* __new__() (mpi4py.MPI.Topocomm static method): mpi4py MPI Topocomm.
                                                             (line   18)
* __new__() (mpi4py.MPI.Win static method): mpi4py MPI Win.  (line   18)
* Abort() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line  417)
* Accept() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line   96)
* Accumulate() (mpi4py.MPI.Win method):  mpi4py MPI Win.     (line  215)
* address (mpi4py.MPI.memory attribute): mpi4py MPI memory.  (line  143)
* Add_error_class() (in module mpi4py.MPI): mpi4py MPI Add_error_class.
                                                             (line    6)
* Add_error_code() (in module mpi4py.MPI): mpi4py MPI Add_error_code.
                                                             (line    6)
* Add_error_string() (in module mpi4py.MPI): mpi4py MPI Add_error_string.
                                                             (line    6)
* AINT (in module mpi4py.MPI):           mpi4py MPI AINT.    (line    6)
* Aint_add() (in module mpi4py.MPI):     mpi4py MPI Aint_add.
                                                             (line    6)
* Aint_diff() (in module mpi4py.MPI):    mpi4py MPI Aint_diff.
                                                             (line    6)
* Allgather() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line  429)
* allgather() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line 1569)
* Allgatherv() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line  444)
* allocate() (mpi4py.MPI.memory static method): mpi4py MPI memory.
                                                             (line   72)
* Allocate() (mpi4py.MPI.Win class method): mpi4py MPI Win.  (line  233)
* Allocate_shared() (mpi4py.MPI.Win class method): mpi4py MPI Win.
                                                             (line  252)
* Alloc_mem() (in module mpi4py.MPI):    mpi4py MPI Alloc_mem.
                                                             (line    6)
* Allreduce() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line  460)
* allreduce() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line 1579)
* Alltoall() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line  476)
* alltoall() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1594)
* Alltoallv() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line  491)
* Alltoallw() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line  507)
* amode (mpi4py.MPI.File attribute):     mpi4py MPI File.    (line  944)
* ANY_SOURCE (in module mpi4py.MPI):     mpi4py MPI ANY_SOURCE.
                                                             (line    6)
* ANY_TAG (in module mpi4py.MPI):        mpi4py MPI ANY_TAG. (line    6)
* APPNUM (in module mpi4py.MPI):         mpi4py MPI APPNUM.  (line    6)
* atomicity (mpi4py.MPI.File attribute): mpi4py MPI File.    (line  948)
* Attach() (mpi4py.MPI.Win method):      mpi4py MPI Win.     (line  271)
* Attach_buffer() (in module mpi4py.MPI): mpi4py MPI Attach_buffer.
                                                             (line    6)
* attrs (mpi4py.MPI.Win attribute):      mpi4py MPI Win.     (line  813)
* BAND (in module mpi4py.MPI):           mpi4py MPI BAND.    (line    6)
* Barrier() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line  522)
* barrier() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line 1604)
* Bcast() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line  529)
* bcast() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1611)
* bcast() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.  (line  121)
* BOOL (in module mpi4py.MPI):           mpi4py MPI BOOL.    (line    6)
* bootup() (mpi4py.futures.MPIPoolExecutor method): MPIPoolExecutor.
                                                             (line  192)
* BOR (in module mpi4py.MPI):            mpi4py MPI BOR.     (line    6)
* BOTTOM (in module mpi4py.MPI):         mpi4py MPI BOTTOM.  (line    6)
* Bsend() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line  544)
* bsend() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1625)
* bsend() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.  (line   88)
* Bsend_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line  560)
* BSEND_OVERHEAD (in module mpi4py.MPI): mpi4py MPI BSEND_OVERHEAD.
                                                             (line    6)
* BXOR (in module mpi4py.MPI):           mpi4py MPI BXOR.    (line    6)
* BYTE (in module mpi4py.MPI):           mpi4py MPI BYTE.    (line    6)
* Call_errhandler() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line  576)
* Call_errhandler() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  239)
* Call_errhandler() (mpi4py.MPI.Win method): mpi4py MPI Win. (line  281)
* Cancel() (mpi4py.MPI.Request method):  mpi4py MPI Request. (line   99)
* cancel() (mpi4py.MPI.Request method):  mpi4py MPI Request. (line  231)
* cancel() (mpi4py.util.pkl5.Request method): mpi4py util pkl5.
                                                             (line   47)
* cancelled (mpi4py.MPI.Status attribute): mpi4py MPI Status.
                                                             (line  208)
* CART (in module mpi4py.MPI):           mpi4py MPI CART.    (line    6)
* Cartcomm (class in mpi4py.MPI):        mpi4py MPI Cartcomm.
                                                             (line    6)
* Cart_map() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  112)
* CHAR (in module mpi4py.MPI):           mpi4py MPI CHAR.    (line    6)
* CHARACTER (in module mpi4py.MPI):      mpi4py MPI CHARACTER.
                                                             (line    6)
* clear() (mpi4py.MPI.Info method):      mpi4py MPI Info.    (line  169)
* Clone() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line  586)
* Close() (mpi4py.MPI.File method):      mpi4py MPI File.    (line  249)
* Close_port() (in module mpi4py.MPI):   mpi4py MPI Close_port.
                                                             (line    6)
* combiner (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  703)
* COMBINER_CONTIGUOUS (in module mpi4py.MPI): mpi4py MPI COMBINER_CONTIGUOUS.
                                                             (line    6)
* COMBINER_DARRAY (in module mpi4py.MPI): mpi4py MPI COMBINER_DARRAY.
                                                             (line    6)
* COMBINER_DUP (in module mpi4py.MPI):   mpi4py MPI COMBINER_DUP.
                                                             (line    6)
* COMBINER_F90_COMPLEX (in module mpi4py.MPI): mpi4py MPI COMBINER_F90_COMPLEX.
                                                             (line    6)
* COMBINER_F90_INTEGER (in module mpi4py.MPI): mpi4py MPI COMBINER_F90_INTEGER.
                                                             (line    6)
* COMBINER_F90_REAL (in module mpi4py.MPI): mpi4py MPI COMBINER_F90_REAL.
                                                             (line    6)
* COMBINER_HINDEXED (in module mpi4py.MPI): mpi4py MPI COMBINER_HINDEXED.
                                                             (line    6)
* COMBINER_HINDEXED_BLOCK (in module mpi4py.MPI): mpi4py MPI COMBINER_HINDEXED_BLOCK.
                                                             (line    6)
* COMBINER_HVECTOR (in module mpi4py.MPI): mpi4py MPI COMBINER_HVECTOR.
                                                             (line    6)
* COMBINER_INDEXED (in module mpi4py.MPI): mpi4py MPI COMBINER_INDEXED.
                                                             (line    6)
* COMBINER_INDEXED_BLOCK (in module mpi4py.MPI): mpi4py MPI COMBINER_INDEXED_BLOCK.
                                                             (line    6)
* COMBINER_NAMED (in module mpi4py.MPI): mpi4py MPI COMBINER_NAMED.
                                                             (line    6)
* COMBINER_RESIZED (in module mpi4py.MPI): mpi4py MPI COMBINER_RESIZED.
                                                             (line    6)
* COMBINER_STRUCT (in module mpi4py.MPI): mpi4py MPI COMBINER_STRUCT.
                                                             (line    6)
* COMBINER_SUBARRAY (in module mpi4py.MPI): mpi4py MPI COMBINER_SUBARRAY.
                                                             (line    6)
* COMBINER_VECTOR (in module mpi4py.MPI): mpi4py MPI COMBINER_VECTOR.
                                                             (line    6)
* Comm (class in mpi4py.MPI):            mpi4py MPI Comm.    (line    6)
* Comm (class in mpi4py.util.pkl5):      mpi4py util pkl5.   (line   82)
* command line option; -c <cmd>:         Interface options.  (line   29)
* command line option; –configure:       Using distutils.    (line   38)
* command line option; -m <mod>:         Interface options.  (line   24)
* command line option; –mpi=:            Using distutils.    (line   33)
* command line option; –mpicc=:          Using distutils.    (line   28)
* Commit() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  206)
* COMM_NULL (in module mpi4py.MPI):      mpi4py MPI COMM_NULL.
                                                             (line    6)
* COMM_SELF (in module mpi4py.MPI):      mpi4py MPI COMM_SELF.
                                                             (line    6)
* COMM_TYPE_SHARED (in module mpi4py.MPI): mpi4py MPI COMM_TYPE_SHARED.
                                                             (line    6)
* COMM_WORLD (in module mpi4py.MPI):     mpi4py MPI COMM_WORLD.
                                                             (line    6)
* Compare() (mpi4py.MPI.Comm class method): mpi4py MPI Comm. (line  593)
* Compare() (mpi4py.MPI.Group class method): mpi4py MPI Group.
                                                             (line   85)
* Compare_and_swap() (mpi4py.MPI.Win method): mpi4py MPI Win.
                                                             (line  291)
* Complete() (mpi4py.MPI.Grequest method): mpi4py MPI Grequest.
                                                             (line   40)
* Complete() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  312)
* COMPLEX (in module mpi4py.MPI):        mpi4py MPI COMPLEX. (line    6)
* COMPLEX16 (in module mpi4py.MPI):      mpi4py MPI COMPLEX16.
                                                             (line    6)
* COMPLEX32 (in module mpi4py.MPI):      mpi4py MPI COMPLEX32.
                                                             (line    6)
* COMPLEX4 (in module mpi4py.MPI):       mpi4py MPI COMPLEX4.
                                                             (line    6)
* COMPLEX8 (in module mpi4py.MPI):       mpi4py MPI COMPLEX8.
                                                             (line    6)
* Compute_dims() (in module mpi4py.MPI): mpi4py MPI Compute_dims.
                                                             (line    6)
* CONGRUENT (in module mpi4py.MPI):      mpi4py MPI CONGRUENT.
                                                             (line    6)
* Connect() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  127)
* contents (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  707)
* coords (mpi4py.MPI.Cartcomm attribute): mpi4py MPI Cartcomm.
                                                             (line  134)
* copy() (mpi4py.MPI.Info method):       mpi4py MPI Info.    (line  176)
* COUNT (in module mpi4py.MPI):          mpi4py MPI COUNT.   (line    6)
* count (mpi4py.MPI.Status attribute):   mpi4py MPI Status.  (line  212)
* Create() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line  607)
* Create() (mpi4py.MPI.Info class method): mpi4py MPI Info.  (line   89)
* Create() (mpi4py.MPI.Op class method): mpi4py MPI Op.      (line   57)
* Create() (mpi4py.MPI.Win class method): mpi4py MPI Win.    (line  320)
* Create_cart() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  143)
* Create_contiguous() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  213)
* Create_darray() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  223)
* Create_dist_graph() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  159)
* Create_dist_graph_adjacent() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  182)
* Create_dynamic() (mpi4py.MPI.Win class method): mpi4py MPI Win.
                                                             (line  340)
* Create_f90_complex() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  249)
* Create_f90_integer() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  263)
* Create_f90_real() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  273)
* Create_graph() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  207)
* Create_group() (mpi4py.MPI.Comm method): mpi4py MPI Comm.  (line  617)
* Create_hindexed() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  287)
* Create_hindexed_block() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  301)
* Create_hvector() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  316)
* Create_indexed() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  332)
* Create_indexed_block() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  346)
* Create_intercomm() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  223)
* Create_keyval() (mpi4py.MPI.Comm class method): mpi4py MPI Comm.
                                                             (line  631)
* Create_keyval() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  360)
* Create_keyval() (mpi4py.MPI.Win class method): mpi4py MPI Win.
                                                             (line  355)
* Create_resized() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  379)
* Create_struct() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  393)
* Create_subarray() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  411)
* Create_vector() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  431)
* CXX_BOOL (in module mpi4py.MPI):       mpi4py MPI CXX_BOOL.
                                                             (line    6)
* CXX_DOUBLE_COMPLEX (in module mpi4py.MPI): mpi4py MPI CXX_DOUBLE_COMPLEX.
                                                             (line    6)
* CXX_FLOAT_COMPLEX (in module mpi4py.MPI): mpi4py MPI CXX_FLOAT_COMPLEX.
                                                             (line    6)
* CXX_LONG_DOUBLE_COMPLEX (in module mpi4py.MPI): mpi4py MPI CXX_LONG_DOUBLE_COMPLEX.
                                                             (line    6)
* C_BOOL (in module mpi4py.MPI):         mpi4py MPI C_BOOL.  (line    6)
* C_COMPLEX (in module mpi4py.MPI):      mpi4py MPI C_COMPLEX.
                                                             (line    6)
* C_DOUBLE_COMPLEX (in module mpi4py.MPI): mpi4py MPI C_DOUBLE_COMPLEX.
                                                             (line    6)
* C_FLOAT_COMPLEX (in module mpi4py.MPI): mpi4py MPI C_FLOAT_COMPLEX.
                                                             (line    6)
* C_LONG_DOUBLE_COMPLEX (in module mpi4py.MPI): mpi4py MPI C_LONG_DOUBLE_COMPLEX.
                                                             (line    6)
* Datatype (class in mpi4py.MPI):        mpi4py MPI Datatype.
                                                             (line    6)
* DATATYPE_NULL (in module mpi4py.MPI):  mpi4py MPI DATATYPE_NULL.
                                                             (line    6)
* decode() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  679)
* degrees (mpi4py.MPI.Topocomm attribute): mpi4py MPI Topocomm.
                                                             (line  252)
* Delete() (mpi4py.MPI.File class method): mpi4py MPI File.  (line  256)
* Delete() (mpi4py.MPI.Info method):     mpi4py MPI Info.    (line   96)
* Delete_attr() (mpi4py.MPI.Comm method): mpi4py MPI Comm.   (line  650)
* Delete_attr() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  447)
* Delete_attr() (mpi4py.MPI.Win method): mpi4py MPI Win.     (line  374)
* Detach() (mpi4py.MPI.Win method):      mpi4py MPI Win.     (line  384)
* Detach_buffer() (in module mpi4py.MPI): mpi4py MPI Detach_buffer.
                                                             (line    6)
* Difference() (mpi4py.MPI.Group class method): mpi4py MPI Group.
                                                             (line   99)
* dim (mpi4py.MPI.Cartcomm attribute):   mpi4py MPI Cartcomm.
                                                             (line  138)
* dims (mpi4py.MPI.Cartcomm attribute):  mpi4py MPI Cartcomm.
                                                             (line  142)
* dims (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  105)
* Disconnect() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line  660)
* DISPLACEMENT_CURRENT (in module mpi4py.MPI): mpi4py MPI DISPLACEMENT_CURRENT.
                                                             (line    6)
* DISP_CUR (in module mpi4py.MPI):       mpi4py MPI DISP_CUR.
                                                             (line    6)
* Distgraphcomm (class in mpi4py.MPI):   mpi4py MPI Distgraphcomm.
                                                             (line    6)
* DISTRIBUTE_BLOCK (in module mpi4py.MPI): mpi4py MPI DISTRIBUTE_BLOCK.
                                                             (line    6)
* DISTRIBUTE_CYCLIC (in module mpi4py.MPI): mpi4py MPI DISTRIBUTE_CYCLIC.
                                                             (line    6)
* DISTRIBUTE_DFLT_DARG (in module mpi4py.MPI): mpi4py MPI DISTRIBUTE_DFLT_DARG.
                                                             (line    6)
* DISTRIBUTE_NONE (in module mpi4py.MPI): mpi4py MPI DISTRIBUTE_NONE.
                                                             (line    6)
* DIST_GRAPH (in module mpi4py.MPI):     mpi4py MPI DIST_GRAPH.
                                                             (line    6)
* DOUBLE (in module mpi4py.MPI):         mpi4py MPI DOUBLE.  (line    6)
* DOUBLE_COMPLEX (in module mpi4py.MPI): mpi4py MPI DOUBLE_COMPLEX.
                                                             (line    6)
* DOUBLE_INT (in module mpi4py.MPI):     mpi4py MPI DOUBLE_INT.
                                                             (line    6)
* DOUBLE_PRECISION (in module mpi4py.MPI): mpi4py MPI DOUBLE_PRECISION.
                                                             (line    6)
* dumps() (mpi4py.MPI.Pickle method):    mpi4py MPI Pickle.  (line   60)
* Dup() (mpi4py.MPI.Comm method):        mpi4py MPI Comm.    (line  667)
* Dup() (mpi4py.MPI.Datatype method):    mpi4py MPI Datatype.
                                                             (line  457)
* Dup() (mpi4py.MPI.Group method):       mpi4py MPI Group.   (line  113)
* Dup() (mpi4py.MPI.Info method):        mpi4py MPI Info.    (line  106)
* Dup_with_info() (mpi4py.MPI.Comm method): mpi4py MPI Comm. (line  677)
* edges (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  109)
* envelope (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  711)
* environment variable; LD_LIBRARY_PATH: Building MPI from sources.
                                                             (line   34)
* environment variable; MPI4PY_FUTURES_MAX_WORKERS: MPIPoolExecutor.
                                                             (line   49)
* environment variable; MPI4PY_FUTURES_MAX_WORKERS <1>: Examples.
                                                             (line   83)
* environment variable; MPI4PY_PICKLE_PROTOCOL: Tutorial.    (line   42)
* environment variable; MPI4PY_PICKLE_PROTOCOL <1>: Environment variables.
                                                             (line  117)
* environment variable; MPI4PY_RC_ERRORS: Runtime configuration options.
                                                             (line  147)
* environment variable; MPI4PY_RC_ERRORS <1>: Environment variables.
                                                             (line  100)
* environment variable; MPI4PY_RC_FAST_REDUCE: Runtime configuration options.
                                                             (line  114)
* environment variable; MPI4PY_RC_FAST_REDUCE <1>: Environment variables.
                                                             (line   74)
* environment variable; MPI4PY_RC_FINALIZE: Runtime configuration options.
                                                             (line   99)
* environment variable; MPI4PY_RC_FINALIZE <1>: Environment variables.
                                                             (line   25)
* environment variable; MPI4PY_RC_INITIALIZE: Runtime configuration options.
                                                             (line   51)
* environment variable; MPI4PY_RC_INITIALIZE <1>: Environment variables.
                                                             (line   10)
* environment variable; MPI4PY_RC_RECV_MPROBE: Runtime configuration options.
                                                             (line  129)
* environment variable; MPI4PY_RC_RECV_MPROBE <1>: Environment variables.
                                                             (line   88)
* environment variable; MPI4PY_RC_THREADS: Runtime configuration options.
                                                             (line   66)
* environment variable; MPI4PY_RC_THREADS <1>: Environment variables.
                                                             (line   43)
* environment variable; MPI4PY_RC_THREAD_LEVEL: Runtime configuration options.
                                                             (line   84)
* environment variable; MPI4PY_RC_THREAD_LEVEL <1>: Environment variables.
                                                             (line   57)
* environment variable; MPICC:           Using pip.          (line   15)
* environment variable; MPICH_USE_SHLIB: Building MPI from sources.
                                                             (line   58)
* environment variable; MPIEXEC_UNIVERSE_SIZE: Examples.     (line   72)
* environment variable; PATH:            MPI-enabled Python interpreter.
                                                             (line   47)
* Errhandler (class in mpi4py.MPI):      mpi4py MPI Errhandler.
                                                             (line    6)
* ERRHANDLER_NULL (in module mpi4py.MPI): mpi4py MPI ERRHANDLER_NULL.
                                                             (line    6)
* error (mpi4py.MPI.Status attribute):   mpi4py MPI Status.  (line  216)
* errors (mpi4py.mpi4py.rc attribute):   Runtime configuration options.
                                                             (line  131)
* ERRORS_ARE_FATAL (in module mpi4py.MPI): mpi4py MPI ERRORS_ARE_FATAL.
                                                             (line    6)
* ERRORS_RETURN (in module mpi4py.MPI):  mpi4py MPI ERRORS_RETURN.
                                                             (line    6)
* error_class (mpi4py.MPI.Exception attribute): mpi4py MPI Exception.
                                                             (line   77)
* error_code (mpi4py.MPI.Exception attribute): mpi4py MPI Exception.
                                                             (line   81)
* error_string (mpi4py.MPI.Exception attribute): mpi4py MPI Exception.
                                                             (line   85)
* ERR_ACCESS (in module mpi4py.MPI):     mpi4py MPI ERR_ACCESS.
                                                             (line    6)
* ERR_AMODE (in module mpi4py.MPI):      mpi4py MPI ERR_AMODE.
                                                             (line    6)
* ERR_ARG (in module mpi4py.MPI):        mpi4py MPI ERR_ARG. (line    6)
* ERR_ASSERT (in module mpi4py.MPI):     mpi4py MPI ERR_ASSERT.
                                                             (line    6)
* ERR_BAD_FILE (in module mpi4py.MPI):   mpi4py MPI ERR_BAD_FILE.
                                                             (line    6)
* ERR_BASE (in module mpi4py.MPI):       mpi4py MPI ERR_BASE.
                                                             (line    6)
* ERR_BUFFER (in module mpi4py.MPI):     mpi4py MPI ERR_BUFFER.
                                                             (line    6)
* ERR_COMM (in module mpi4py.MPI):       mpi4py MPI ERR_COMM.
                                                             (line    6)
* ERR_CONVERSION (in module mpi4py.MPI): mpi4py MPI ERR_CONVERSION.
                                                             (line    6)
* ERR_COUNT (in module mpi4py.MPI):      mpi4py MPI ERR_COUNT.
                                                             (line    6)
* ERR_DIMS (in module mpi4py.MPI):       mpi4py MPI ERR_DIMS.
                                                             (line    6)
* ERR_DISP (in module mpi4py.MPI):       mpi4py MPI ERR_DISP.
                                                             (line    6)
* ERR_DUP_DATAREP (in module mpi4py.MPI): mpi4py MPI ERR_DUP_DATAREP.
                                                             (line    6)
* ERR_FILE (in module mpi4py.MPI):       mpi4py MPI ERR_FILE.
                                                             (line    6)
* ERR_FILE_EXISTS (in module mpi4py.MPI): mpi4py MPI ERR_FILE_EXISTS.
                                                             (line    6)
* ERR_FILE_IN_USE (in module mpi4py.MPI): mpi4py MPI ERR_FILE_IN_USE.
                                                             (line    6)
* ERR_GROUP (in module mpi4py.MPI):      mpi4py MPI ERR_GROUP.
                                                             (line    6)
* ERR_INFO (in module mpi4py.MPI):       mpi4py MPI ERR_INFO.
                                                             (line    6)
* ERR_INFO_KEY (in module mpi4py.MPI):   mpi4py MPI ERR_INFO_KEY.
                                                             (line    6)
* ERR_INFO_NOKEY (in module mpi4py.MPI): mpi4py MPI ERR_INFO_NOKEY.
                                                             (line    6)
* ERR_INFO_VALUE (in module mpi4py.MPI): mpi4py MPI ERR_INFO_VALUE.
                                                             (line    6)
* ERR_INTERN (in module mpi4py.MPI):     mpi4py MPI ERR_INTERN.
                                                             (line    6)
* ERR_IN_STATUS (in module mpi4py.MPI):  mpi4py MPI ERR_IN_STATUS.
                                                             (line    6)
* ERR_IO (in module mpi4py.MPI):         mpi4py MPI ERR_IO.  (line    6)
* ERR_KEYVAL (in module mpi4py.MPI):     mpi4py MPI ERR_KEYVAL.
                                                             (line    6)
* ERR_LASTCODE (in module mpi4py.MPI):   mpi4py MPI ERR_LASTCODE.
                                                             (line    6)
* ERR_LOCKTYPE (in module mpi4py.MPI):   mpi4py MPI ERR_LOCKTYPE.
                                                             (line    6)
* ERR_NAME (in module mpi4py.MPI):       mpi4py MPI ERR_NAME.
                                                             (line    6)
* ERR_NOT_SAME (in module mpi4py.MPI):   mpi4py MPI ERR_NOT_SAME.
                                                             (line    6)
* ERR_NO_MEM (in module mpi4py.MPI):     mpi4py MPI ERR_NO_MEM.
                                                             (line    6)
* ERR_NO_SPACE (in module mpi4py.MPI):   mpi4py MPI ERR_NO_SPACE.
                                                             (line    6)
* ERR_NO_SUCH_FILE (in module mpi4py.MPI): mpi4py MPI ERR_NO_SUCH_FILE.
                                                             (line    6)
* ERR_OP (in module mpi4py.MPI):         mpi4py MPI ERR_OP.  (line    6)
* ERR_OTHER (in module mpi4py.MPI):      mpi4py MPI ERR_OTHER.
                                                             (line    6)
* ERR_PENDING (in module mpi4py.MPI):    mpi4py MPI ERR_PENDING.
                                                             (line    6)
* ERR_PORT (in module mpi4py.MPI):       mpi4py MPI ERR_PORT.
                                                             (line    6)
* ERR_QUOTA (in module mpi4py.MPI):      mpi4py MPI ERR_QUOTA.
                                                             (line    6)
* ERR_RANK (in module mpi4py.MPI):       mpi4py MPI ERR_RANK.
                                                             (line    6)
* ERR_READ_ONLY (in module mpi4py.MPI):  mpi4py MPI ERR_READ_ONLY.
                                                             (line    6)
* ERR_REQUEST (in module mpi4py.MPI):    mpi4py MPI ERR_REQUEST.
                                                             (line    6)
* ERR_RMA_ATTACH (in module mpi4py.MPI): mpi4py MPI ERR_RMA_ATTACH.
                                                             (line    6)
* ERR_RMA_CONFLICT (in module mpi4py.MPI): mpi4py MPI ERR_RMA_CONFLICT.
                                                             (line    6)
* ERR_RMA_FLAVOR (in module mpi4py.MPI): mpi4py MPI ERR_RMA_FLAVOR.
                                                             (line    6)
* ERR_RMA_RANGE (in module mpi4py.MPI):  mpi4py MPI ERR_RMA_RANGE.
                                                             (line    6)
* ERR_RMA_SHARED (in module mpi4py.MPI): mpi4py MPI ERR_RMA_SHARED.
                                                             (line    6)
* ERR_RMA_SYNC (in module mpi4py.MPI):   mpi4py MPI ERR_RMA_SYNC.
                                                             (line    6)
* ERR_ROOT (in module mpi4py.MPI):       mpi4py MPI ERR_ROOT.
                                                             (line    6)
* ERR_SERVICE (in module mpi4py.MPI):    mpi4py MPI ERR_SERVICE.
                                                             (line    6)
* ERR_SIZE (in module mpi4py.MPI):       mpi4py MPI ERR_SIZE.
                                                             (line    6)
* ERR_SPAWN (in module mpi4py.MPI):      mpi4py MPI ERR_SPAWN.
                                                             (line    6)
* ERR_TAG (in module mpi4py.MPI):        mpi4py MPI ERR_TAG. (line    6)
* ERR_TOPOLOGY (in module mpi4py.MPI):   mpi4py MPI ERR_TOPOLOGY.
                                                             (line    6)
* ERR_TRUNCATE (in module mpi4py.MPI):   mpi4py MPI ERR_TRUNCATE.
                                                             (line    6)
* ERR_TYPE (in module mpi4py.MPI):       mpi4py MPI ERR_TYPE.
                                                             (line    6)
* ERR_UNKNOWN (in module mpi4py.MPI):    mpi4py MPI ERR_UNKNOWN.
                                                             (line    6)
* ERR_UNSUPPORTED_DATAREP (in module mpi4py.MPI): mpi4py MPI ERR_UNSUPPORTED_DATAREP.
                                                             (line    6)
* ERR_UNSUPPORTED_OPERATION (in module mpi4py.MPI): mpi4py MPI ERR_UNSUPPORTED_OPERATION.
                                                             (line    6)
* ERR_WIN (in module mpi4py.MPI):        mpi4py MPI ERR_WIN. (line    6)
* Exception:                             mpi4py MPI Exception.
                                                             (line    6)
* Excl() (mpi4py.MPI.Group method):      mpi4py MPI Group.   (line  120)
* Exscan() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  242)
* exscan() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  370)
* extent (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  715)
* f2py() (mpi4py.MPI.Comm class method): mpi4py MPI Comm.    (line 1641)
* f2py() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  687)
* f2py() (mpi4py.MPI.Errhandler class method): mpi4py MPI Errhandler.
                                                             (line   47)
* f2py() (mpi4py.MPI.File class method): mpi4py MPI File.    (line  928)
* f2py() (mpi4py.MPI.Group class method): mpi4py MPI Group.  (line  233)
* f2py() (mpi4py.MPI.Info class method): mpi4py MPI Info.    (line  183)
* f2py() (mpi4py.MPI.Message class method): mpi4py MPI Message.
                                                             (line  126)
* f2py() (mpi4py.MPI.Op class method):   mpi4py MPI Op.      (line  100)
* f2py() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  238)
* f2py() (mpi4py.MPI.Status class method): mpi4py MPI Status.
                                                             (line  192)
* f2py() (mpi4py.MPI.Win class method):  mpi4py MPI Win.     (line  790)
* fast_reduce (mpi4py.mpi4py.rc attribute): Runtime configuration options.
                                                             (line  101)
* Fence() (mpi4py.MPI.Win method):       mpi4py MPI Win.     (line  394)
* Fetch_and_op() (mpi4py.MPI.Win method): mpi4py MPI Win.    (line  404)
* File (class in mpi4py.MPI):            mpi4py MPI File.    (line    6)
* FILE_NULL (in module mpi4py.MPI):      mpi4py MPI FILE_NULL.
                                                             (line    6)
* finalize (mpi4py.mpi4py.rc attribute): Runtime configuration options.
                                                             (line   86)
* Finalize() (in module mpi4py.MPI):     mpi4py MPI Finalize.
                                                             (line    6)
* flavor (mpi4py.MPI.Win attribute):     mpi4py MPI Win.     (line  817)
* FLOAT (in module mpi4py.MPI):          mpi4py MPI FLOAT.   (line    6)
* FLOAT_INT (in module mpi4py.MPI):      mpi4py MPI FLOAT_INT.
                                                             (line    6)
* Flush() (mpi4py.MPI.Win method):       mpi4py MPI Win.     (line  425)
* Flush_all() (mpi4py.MPI.Win method):   mpi4py MPI Win.     (line  435)
* Flush_local() (mpi4py.MPI.Win method): mpi4py MPI Win.     (line  442)
* Flush_local_all() (mpi4py.MPI.Win method): mpi4py MPI Win. (line  453)
* format (mpi4py.MPI.memory attribute):  mpi4py MPI memory.  (line  147)
* Free() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line  687)
* Free() (mpi4py.MPI.Datatype method):   mpi4py MPI Datatype.
                                                             (line  464)
* Free() (mpi4py.MPI.Errhandler method): mpi4py MPI Errhandler.
                                                             (line   40)
* Free() (mpi4py.MPI.Group method):      mpi4py MPI Group.   (line  131)
* Free() (mpi4py.MPI.Info method):       mpi4py MPI Info.    (line  114)
* Free() (mpi4py.MPI.Op method):         mpi4py MPI Op.      (line   72)
* Free() (mpi4py.MPI.Request method):    mpi4py MPI Request. (line  106)
* Free() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  461)
* Free() (mpi4py.util.pkl5.Request method): mpi4py util pkl5.
                                                             (line   45)
* Free_keyval() (mpi4py.MPI.Comm class method): mpi4py MPI Comm.
                                                             (line  694)
* Free_keyval() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  471)
* Free_keyval() (mpi4py.MPI.Win class method): mpi4py MPI Win.
                                                             (line  468)
* Free_mem() (in module mpi4py.MPI):     mpi4py MPI Free_mem.
                                                             (line    6)
* fromaddress() (mpi4py.MPI.memory static method): mpi4py MPI memory.
                                                             (line   86)
* frombuffer() (mpi4py.MPI.memory static method): mpi4py MPI memory.
                                                             (line  102)
* from_numpy_dtype() (in module mpi4py.util.dtlib): mpi4py util dtlib.
                                                             (line   11)
* F_BOOL (in module mpi4py.MPI):         mpi4py MPI F_BOOL.  (line    6)
* F_COMPLEX (in module mpi4py.MPI):      mpi4py MPI F_COMPLEX.
                                                             (line    6)
* F_DOUBLE (in module mpi4py.MPI):       mpi4py MPI F_DOUBLE.
                                                             (line    6)
* F_DOUBLE_COMPLEX (in module mpi4py.MPI): mpi4py MPI F_DOUBLE_COMPLEX.
                                                             (line    6)
* F_FLOAT (in module mpi4py.MPI):        mpi4py MPI F_FLOAT. (line    6)
* F_FLOAT_COMPLEX (in module mpi4py.MPI): mpi4py MPI F_FLOAT_COMPLEX.
                                                             (line    6)
* F_INT (in module mpi4py.MPI):          mpi4py MPI F_INT.   (line    6)
* Gather() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line  704)
* gather() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1649)
* Gatherv() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line  720)
* Get() (mpi4py.MPI.Info method):        mpi4py MPI Info.    (line  121)
* get() (mpi4py.MPI.Info method):        mpi4py MPI Info.    (line  191)
* Get() (mpi4py.MPI.Win method):         mpi4py MPI Win.     (line  478)
* Get_accumulate() (mpi4py.MPI.Win method): mpi4py MPI Win.  (line  494)
* Get_address() (in module mpi4py.MPI):  mpi4py MPI Get_address.
                                                             (line    6)
* Get_amode() (mpi4py.MPI.File method):  mpi4py MPI File.    (line  270)
* Get_atomicity() (mpi4py.MPI.File method): mpi4py MPI File. (line  277)
* Get_attr() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line  738)
* Get_attr() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  481)
* Get_attr() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  515)
* Get_byte_offset() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  284)
* Get_cart_rank() (mpi4py.MPI.Cartcomm method): mpi4py MPI Cartcomm.
                                                             (line   71)
* get_config() (in module mpi4py):       Miscellaneous functions.
                                                             (line   21)
* Get_contents() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  491)
* Get_coords() (mpi4py.MPI.Cartcomm method): mpi4py MPI Cartcomm.
                                                             (line   81)
* Get_count() (mpi4py.MPI.Status method): mpi4py MPI Status. (line   84)
* Get_dim() (mpi4py.MPI.Cartcomm method): mpi4py MPI Cartcomm.
                                                             (line   91)
* Get_dims() (mpi4py.MPI.Graphcomm method): mpi4py MPI Graphcomm.
                                                             (line   68)
* Get_dist_neighbors() (mpi4py.MPI.Distgraphcomm method): mpi4py MPI Distgraphcomm.
                                                             (line   39)
* Get_dist_neighbors_count() (mpi4py.MPI.Distgraphcomm method): mpi4py MPI Distgraphcomm.
                                                             (line   47)
* Get_elements() (mpi4py.MPI.Status method): mpi4py MPI Status.
                                                             (line   94)
* Get_envelope() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  500)
* Get_errhandler() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line  748)
* Get_errhandler() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  295)
* Get_errhandler() (mpi4py.MPI.Win method): mpi4py MPI Win.  (line  525)
* Get_error() (mpi4py.MPI.Status method): mpi4py MPI Status. (line  104)
* Get_error_class() (in module mpi4py.MPI): mpi4py MPI Get_error_class.
                                                             (line    6)
* Get_error_class() (mpi4py.MPI.Exception method): mpi4py MPI Exception.
                                                             (line   53)
* Get_error_code() (mpi4py.MPI.Exception method): mpi4py MPI Exception.
                                                             (line   60)
* Get_error_string() (in module mpi4py.MPI): mpi4py MPI Get_error_string.
                                                             (line    6)
* Get_error_string() (mpi4py.MPI.Exception method): mpi4py MPI Exception.
                                                             (line   67)
* Get_extent() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  508)
* Get_group() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line  755)
* Get_group() (mpi4py.MPI.File method):  mpi4py MPI File.    (line  302)
* Get_group() (mpi4py.MPI.Win method):   mpi4py MPI Win.     (line  532)
* get_include() (in module mpi4py):      Miscellaneous functions.
                                                             (line   25)
* Get_info() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line  762)
* Get_info() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  309)
* Get_info() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  540)
* Get_library_version() (in module mpi4py.MPI): mpi4py MPI Get_library_version.
                                                             (line    6)
* Get_name() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line  769)
* Get_name() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  515)
* Get_name() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  547)
* Get_neighbors() (mpi4py.MPI.Graphcomm method): mpi4py MPI Graphcomm.
                                                             (line   75)
* Get_neighbors_count() (mpi4py.MPI.Graphcomm method): mpi4py MPI Graphcomm.
                                                             (line   85)
* Get_nkeys() (mpi4py.MPI.Info method):  mpi4py MPI Info.    (line  135)
* Get_nthkey() (mpi4py.MPI.Info method): mpi4py MPI Info.    (line  142)
* Get_parent() (mpi4py.MPI.Comm class method): mpi4py MPI Comm.
                                                             (line  776)
* Get_position() (mpi4py.MPI.File method): mpi4py MPI File.  (line  316)
* Get_position_shared() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  324)
* Get_processor_name() (in module mpi4py.MPI): mpi4py MPI Get_processor_name.
                                                             (line    6)
* Get_rank() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line  783)
* Get_rank() (mpi4py.MPI.Group method):  mpi4py MPI Group.   (line  138)
* Get_remote_group() (mpi4py.MPI.Intercomm method): mpi4py MPI Intercomm.
                                                             (line   50)
* Get_remote_size() (mpi4py.MPI.Intercomm method): mpi4py MPI Intercomm.
                                                             (line   57)
* Get_size() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line  790)
* Get_size() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  522)
* Get_size() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  332)
* Get_size() (mpi4py.MPI.Group method):  mpi4py MPI Group.   (line  145)
* Get_source() (mpi4py.MPI.Status method): mpi4py MPI Status.
                                                             (line  111)
* Get_status() (mpi4py.MPI.Request method): mpi4py MPI Request.
                                                             (line  113)
* get_status() (mpi4py.MPI.Request method): mpi4py MPI Request.
                                                             (line  246)
* get_status() (mpi4py.util.pkl5.Request method): mpi4py util pkl5.
                                                             (line   49)
* Get_tag() (mpi4py.MPI.Status method):  mpi4py MPI Status.  (line  118)
* Get_topo() (mpi4py.MPI.Cartcomm method): mpi4py MPI Cartcomm.
                                                             (line   98)
* Get_topo() (mpi4py.MPI.Graphcomm method): mpi4py MPI Graphcomm.
                                                             (line   95)
* Get_topology() (mpi4py.MPI.Comm method): mpi4py MPI Comm.  (line  797)
* Get_true_extent() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  529)
* Get_type_extent() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  339)
* get_vendor() (in module mpi4py.MPI):   mpi4py MPI get_vendor.
                                                             (line    6)
* Get_version() (in module mpi4py.MPI):  mpi4py MPI Get_version.
                                                             (line    6)
* Get_view() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  349)
* GIL:                                   Examples.           (line  101)
* GRAPH (in module mpi4py.MPI):          mpi4py MPI GRAPH.   (line    6)
* Graphcomm (class in mpi4py.MPI):       mpi4py MPI Graphcomm.
                                                             (line    6)
* Graph_map() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  258)
* Grequest (class in mpi4py.MPI):        mpi4py MPI Grequest.
                                                             (line    6)
* Group (class in mpi4py.MPI):           mpi4py MPI Group.   (line    6)
* group (mpi4py.MPI.Comm attribute):     mpi4py MPI Comm.    (line 1906)
* group (mpi4py.MPI.File attribute):     mpi4py MPI File.    (line  950)
* group (mpi4py.MPI.Win attribute):      mpi4py MPI Win.     (line  821)
* GROUP_EMPTY (in module mpi4py.MPI):    mpi4py MPI GROUP_EMPTY.
                                                             (line    6)
* GROUP_NULL (in module mpi4py.MPI):     mpi4py MPI GROUP_NULL.
                                                             (line    6)
* HOST (in module mpi4py.MPI):           mpi4py MPI HOST.    (line    6)
* Iallgather() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line  805)
* Iallgatherv() (mpi4py.MPI.Comm method): mpi4py MPI Comm.   (line  819)
* Iallreduce() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line  833)
* Ialltoall() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line  849)
* Ialltoallv() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line  863)
* Ialltoallw() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line  877)
* Ibarrier() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line  891)
* Ibcast() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line  898)
* Ibsend() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line  912)
* ibsend() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1663)
* ibsend() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5. (line   94)
* IDENT (in module mpi4py.MPI):          mpi4py MPI IDENT.   (line    6)
* Idup() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line  928)
* Iexscan() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  273)
* Igather() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line  935)
* Igatherv() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line  951)
* Improbe() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line  967)
* improbe() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line 1679)
* improbe() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.
                                                             (line  117)
* Incl() (mpi4py.MPI.Group method):      mpi4py MPI Group.   (line  152)
* indegree (mpi4py.MPI.Topocomm attribute): mpi4py MPI Topocomm.
                                                             (line  256)
* index (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  111)
* inedges (mpi4py.MPI.Topocomm attribute): mpi4py MPI Topocomm.
                                                             (line  260)
* Ineighbor_allgather() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line   89)
* Ineighbor_allgatherv() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  103)
* Ineighbor_alltoall() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  117)
* Ineighbor_alltoallv() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  131)
* Ineighbor_alltoallw() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  145)
* Info (class in mpi4py.MPI):            mpi4py MPI Info.    (line    6)
* info (mpi4py.MPI.Comm attribute):      mpi4py MPI Comm.    (line 1910)
* info (mpi4py.MPI.File attribute):      mpi4py MPI File.    (line  954)
* info (mpi4py.MPI.Win attribute):       mpi4py MPI Win.     (line  825)
* INFO_ENV (in module mpi4py.MPI):       mpi4py MPI INFO_ENV.
                                                             (line    6)
* INFO_NULL (in module mpi4py.MPI):      mpi4py MPI INFO_NULL.
                                                             (line    6)
* Init() (in module mpi4py.MPI):         mpi4py MPI Init.    (line    6)
* initialize (mpi4py.mpi4py.rc attribute): Runtime configuration options.
                                                             (line   38)
* Init_thread() (in module mpi4py.MPI):  mpi4py MPI Init_thread.
                                                             (line    6)
* inoutedges (mpi4py.MPI.Topocomm attribute): mpi4py MPI Topocomm.
                                                             (line  264)
* INT (in module mpi4py.MPI):            mpi4py MPI INT.     (line    6)
* INT16_T (in module mpi4py.MPI):        mpi4py MPI INT16_T. (line    6)
* INT32_T (in module mpi4py.MPI):        mpi4py MPI INT32_T. (line    6)
* INT64_T (in module mpi4py.MPI):        mpi4py MPI INT64_T. (line    6)
* INT8_T (in module mpi4py.MPI):         mpi4py MPI INT8_T.  (line    6)
* INTEGER (in module mpi4py.MPI):        mpi4py MPI INTEGER. (line    6)
* INTEGER1 (in module mpi4py.MPI):       mpi4py MPI INTEGER1.
                                                             (line    6)
* INTEGER16 (in module mpi4py.MPI):      mpi4py MPI INTEGER16.
                                                             (line    6)
* INTEGER2 (in module mpi4py.MPI):       mpi4py MPI INTEGER2.
                                                             (line    6)
* INTEGER4 (in module mpi4py.MPI):       mpi4py MPI INTEGER4.
                                                             (line    6)
* INTEGER8 (in module mpi4py.MPI):       mpi4py MPI INTEGER8.
                                                             (line    6)
* Intercomm (class in mpi4py.MPI):       mpi4py MPI Intercomm.
                                                             (line    6)
* Intercomm (class in mpi4py.util.pkl5): mpi4py util pkl5.   (line  128)
* Intersection() (mpi4py.MPI.Group class method): mpi4py MPI Group.
                                                             (line  163)
* Intracomm (class in mpi4py.MPI):       mpi4py MPI Intracomm.
                                                             (line    6)
* Intracomm (class in mpi4py.util.pkl5): mpi4py util pkl5.   (line  123)
* INT_INT (in module mpi4py.MPI):        mpi4py MPI INT_INT. (line    6)
* IN_PLACE (in module mpi4py.MPI):       mpi4py MPI IN_PLACE.
                                                             (line    6)
* IO (in module mpi4py.MPI):             mpi4py MPI IO.      (line    6)
* Iprobe() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line  983)
* iprobe() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1695)
* Iprobe() (mpi4py.MPI.Message class method): mpi4py MPI Message.
                                                             (line   64)
* iprobe() (mpi4py.MPI.Message class method): mpi4py MPI Message.
                                                             (line  134)
* iprobe() (mpi4py.util.pkl5.Message class method): mpi4py util pkl5.
                                                             (line   78)
* Iread() (mpi4py.MPI.File method):      mpi4py MPI File.    (line  357)
* Iread_all() (mpi4py.MPI.File method):  mpi4py MPI File.    (line  367)
* Iread_at() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  377)
* Iread_at_all() (mpi4py.MPI.File method): mpi4py MPI File.  (line  391)
* Iread_shared() (mpi4py.MPI.File method): mpi4py MPI File.  (line  405)
* Irecv() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line  999)
* irecv() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1711)
* Irecv() (mpi4py.MPI.Message method):   mpi4py MPI Message. (line   83)
* irecv() (mpi4py.MPI.Message method):   mpi4py MPI Message. (line  153)
* irecv() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.  (line  102)
* irecv() (mpi4py.util.pkl5.Message method): mpi4py util pkl5.
                                                             (line   72)
* Ireduce() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line 1015)
* Ireduce_scatter() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 1033)
* Ireduce_scatter_block() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 1052)
* Irsend() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1068)
* Iscan() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  289)
* Iscatter() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1098)
* Iscatterv() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line 1114)
* Isend() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1130)
* isend() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1727)
* isend() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.  (line   92)
* Issend() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1146)
* issend() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1743)
* issend() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5. (line   96)
* Is_cancelled() (mpi4py.MPI.Status method): mpi4py MPI Status.
                                                             (line  125)
* is_commutative (mpi4py.MPI.Op attribute): mpi4py MPI Op.   (line  116)
* Is_commutative() (mpi4py.MPI.Op method): mpi4py MPI Op.    (line   79)
* Is_finalized() (in module mpi4py.MPI): mpi4py MPI Is_finalized.
                                                             (line    6)
* Is_initialized() (in module mpi4py.MPI): mpi4py MPI Is_initialized.
                                                             (line    6)
* is_inter (mpi4py.MPI.Comm attribute):  mpi4py MPI Comm.    (line 1914)
* Is_inter() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1084)
* is_intra (mpi4py.MPI.Comm attribute):  mpi4py MPI Comm.    (line 1918)
* Is_intra() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1091)
* is_named (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  717)
* is_predefined (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  721)
* is_predefined (mpi4py.MPI.Op attribute): mpi4py MPI Op.    (line  120)
* Is_thread_main() (in module mpi4py.MPI): mpi4py MPI Is_thread_main.
                                                             (line    6)
* is_topo (mpi4py.MPI.Comm attribute):   mpi4py MPI Comm.    (line 1922)
* items() (mpi4py.MPI.Info method):      mpi4py MPI Info.    (line  205)
* itemsize (mpi4py.MPI.memory attribute): mpi4py MPI memory. (line  151)
* Iwrite() (mpi4py.MPI.File method):     mpi4py MPI File.    (line  415)
* Iwrite_all() (mpi4py.MPI.File method): mpi4py MPI File.    (line  425)
* Iwrite_at() (mpi4py.MPI.File method):  mpi4py MPI File.    (line  435)
* Iwrite_at_all() (mpi4py.MPI.File method): mpi4py MPI File. (line  449)
* Iwrite_shared() (mpi4py.MPI.File method): mpi4py MPI File. (line  463)
* Join() (mpi4py.MPI.Comm class method): mpi4py MPI Comm.    (line 1162)
* keys() (mpi4py.MPI.Info method):       mpi4py MPI Info.    (line  212)
* KEYVAL_INVALID (in module mpi4py.MPI): mpi4py MPI KEYVAL_INVALID.
                                                             (line    6)
* LAND (in module mpi4py.MPI):           mpi4py MPI LAND.    (line    6)
* LASTUSEDCODE (in module mpi4py.MPI):   mpi4py MPI LASTUSEDCODE.
                                                             (line    6)
* LB (in module mpi4py.MPI):             mpi4py MPI LB.      (line    6)
* lb (mpi4py.MPI.Datatype attribute):    mpi4py MPI Datatype.
                                                             (line  725)
* LD_LIBRARY_PATH:                       Building MPI from sources.
                                                             (line   34)
* loads() (mpi4py.MPI.Pickle method):    mpi4py MPI Pickle.  (line   76)
* Lock() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  554)
* Lock_all() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  570)
* LOCK_EXCLUSIVE (in module mpi4py.MPI): mpi4py MPI LOCK_EXCLUSIVE.
                                                             (line    6)
* LOCK_SHARED (in module mpi4py.MPI):    mpi4py MPI LOCK_SHARED.
                                                             (line    6)
* LOGICAL (in module mpi4py.MPI):        mpi4py MPI LOGICAL. (line    6)
* LOGICAL1 (in module mpi4py.MPI):       mpi4py MPI LOGICAL1.
                                                             (line    6)
* LOGICAL2 (in module mpi4py.MPI):       mpi4py MPI LOGICAL2.
                                                             (line    6)
* LOGICAL4 (in module mpi4py.MPI):       mpi4py MPI LOGICAL4.
                                                             (line    6)
* LOGICAL8 (in module mpi4py.MPI):       mpi4py MPI LOGICAL8.
                                                             (line    6)
* LONG (in module mpi4py.MPI):           mpi4py MPI LONG.    (line    6)
* LONG_DOUBLE (in module mpi4py.MPI):    mpi4py MPI LONG_DOUBLE.
                                                             (line    6)
* LONG_DOUBLE_INT (in module mpi4py.MPI): mpi4py MPI LONG_DOUBLE_INT.
                                                             (line    6)
* LONG_INT (in module mpi4py.MPI):       mpi4py MPI LONG_INT.
                                                             (line    6)
* LONG_LONG (in module mpi4py.MPI):      mpi4py MPI LONG_LONG.
                                                             (line    6)
* Lookup_name() (in module mpi4py.MPI):  mpi4py MPI Lookup_name.
                                                             (line    6)
* LOR (in module mpi4py.MPI):            mpi4py MPI LOR.     (line    6)
* LXOR (in module mpi4py.MPI):           mpi4py MPI LXOR.    (line    6)
* map() (mpi4py.futures.MPIPoolExecutor method): MPIPoolExecutor.
                                                             (line  117)
* Match_size() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  536)
* MAX (in module mpi4py.MPI):            mpi4py MPI MAX.     (line    6)
* MAXLOC (in module mpi4py.MPI):         mpi4py MPI MAXLOC.  (line    6)
* MAX_DATAREP_STRING (in module mpi4py.MPI): mpi4py MPI MAX_DATAREP_STRING.
                                                             (line    6)
* MAX_ERROR_STRING (in module mpi4py.MPI): mpi4py MPI MAX_ERROR_STRING.
                                                             (line    6)
* MAX_INFO_KEY (in module mpi4py.MPI):   mpi4py MPI MAX_INFO_KEY.
                                                             (line    6)
* MAX_INFO_VAL (in module mpi4py.MPI):   mpi4py MPI MAX_INFO_VAL.
                                                             (line    6)
* MAX_LIBRARY_VERSION_STRING (in module mpi4py.MPI): mpi4py MPI MAX_LIBRARY_VERSION_STRING.
                                                             (line    6)
* MAX_OBJECT_NAME (in module mpi4py.MPI): mpi4py MPI MAX_OBJECT_NAME.
                                                             (line    6)
* MAX_PORT_NAME (in module mpi4py.MPI):  mpi4py MPI MAX_PORT_NAME.
                                                             (line    6)
* MAX_PROCESSOR_NAME (in module mpi4py.MPI): mpi4py MPI MAX_PROCESSOR_NAME.
                                                             (line    6)
* memory (class in mpi4py.MPI):          mpi4py MPI memory.  (line    6)
* Merge() (mpi4py.MPI.Intercomm method): mpi4py MPI Intercomm.
                                                             (line   64)
* Message (class in mpi4py.MPI):         mpi4py MPI Message. (line    6)
* Message (class in mpi4py.util.pkl5):   mpi4py util pkl5.   (line   64)
* MESSAGE_NO_PROC (in module mpi4py.MPI): mpi4py MPI MESSAGE_NO_PROC.
                                                             (line    6)
* MESSAGE_NULL (in module mpi4py.MPI):   mpi4py MPI MESSAGE_NULL.
                                                             (line    6)
* MIN (in module mpi4py.MPI):            mpi4py MPI MIN.     (line    6)
* MINLOC (in module mpi4py.MPI):         mpi4py MPI MINLOC.  (line    6)
* model (mpi4py.MPI.Win attribute):      mpi4py MPI Win.     (line  829)
* MODE_APPEND (in module mpi4py.MPI):    mpi4py MPI MODE_APPEND.
                                                             (line    6)
* MODE_CREATE (in module mpi4py.MPI):    mpi4py MPI MODE_CREATE.
                                                             (line    6)
* MODE_DELETE_ON_CLOSE (in module mpi4py.MPI): mpi4py MPI MODE_DELETE_ON_CLOSE.
                                                             (line    6)
* MODE_EXCL (in module mpi4py.MPI):      mpi4py MPI MODE_EXCL.
                                                             (line    6)
* MODE_NOCHECK (in module mpi4py.MPI):   mpi4py MPI MODE_NOCHECK.
                                                             (line    6)
* MODE_NOPRECEDE (in module mpi4py.MPI): mpi4py MPI MODE_NOPRECEDE.
                                                             (line    6)
* MODE_NOPUT (in module mpi4py.MPI):     mpi4py MPI MODE_NOPUT.
                                                             (line    6)
* MODE_NOSTORE (in module mpi4py.MPI):   mpi4py MPI MODE_NOSTORE.
                                                             (line    6)
* MODE_NOSUCCEED (in module mpi4py.MPI): mpi4py MPI MODE_NOSUCCEED.
                                                             (line    6)
* MODE_RDONLY (in module mpi4py.MPI):    mpi4py MPI MODE_RDONLY.
                                                             (line    6)
* MODE_RDWR (in module mpi4py.MPI):      mpi4py MPI MODE_RDWR.
                                                             (line    6)
* MODE_SEQUENTIAL (in module mpi4py.MPI): mpi4py MPI MODE_SEQUENTIAL.
                                                             (line    6)
* MODE_UNIQUE_OPEN (in module mpi4py.MPI): mpi4py MPI MODE_UNIQUE_OPEN.
                                                             (line    6)
* MODE_WRONLY (in module mpi4py.MPI):    mpi4py MPI MODE_WRONLY.
                                                             (line    6)
* module; mpi4py:                        mpi4py.             (line    6)
* module; mpi4py.futures:                mpi4py futures.     (line    6)
* module; mpi4py.MPI:                    mpi4py MPI<2>.      (line    6)
* module; mpi4py.run:                    mpi4py run.         (line    6)
* module; mpi4py.util:                   mpi4py util.        (line    6)
* module; mpi4py.util.dtlib:             mpi4py util dtlib.  (line    6)
* module; mpi4py.util.pkl5:              mpi4py util pkl5.   (line    6)
* mpi4py.rc (in module mpi4py):          Runtime configuration options.
                                                             (line    6)
* MPI4PY_FUTURES_MAX_WORKERS:            MPIPoolExecutor.    (line   49)
* MPI4PY_FUTURES_MAX_WORKERS <1>:        Examples.           (line   83)
* MPI4PY_PICKLE_PROTOCOL:                Tutorial.           (line   42)
* MPI4PY_RC_ERRORS:                      Runtime configuration options.
                                                             (line  147)
* MPI4PY_RC_FAST_REDUCE:                 Runtime configuration options.
                                                             (line  114)
* MPI4PY_RC_FINALIZE:                    Runtime configuration options.
                                                             (line   99)
* MPI4PY_RC_INITIALIZE:                  Runtime configuration options.
                                                             (line   51)
* MPI4PY_RC_RECV_MPROBE:                 Runtime configuration options.
                                                             (line  129)
* MPI4PY_RC_THREADS:                     Runtime configuration options.
                                                             (line   66)
* MPI4PY_RC_THREAD_LEVEL:                Runtime configuration options.
                                                             (line   84)
* MPICC:                                 Using pip.          (line   15)
* MPICH_USE_SHLIB:                       Building MPI from sources.
                                                             (line   58)
* MPICommExecutor (class in mpi4py.futures): MPICommExecutor.
                                                             (line   30)
* MPIEXEC_UNIVERSE_SIZE:                 Examples.           (line   72)
* MPIPoolExecutor (class in mpi4py.futures): MPIPoolExecutor.
                                                             (line   44)
* Mprobe() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1173)
* mprobe() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1759)
* mprobe() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5. (line  113)
* name (mpi4py.MPI.Comm attribute):      mpi4py MPI Comm.    (line 1926)
* name (mpi4py.MPI.Datatype attribute):  mpi4py MPI Datatype.
                                                             (line  729)
* name (mpi4py.MPI.Win attribute):       mpi4py MPI Win.     (line  833)
* nbytes (mpi4py.MPI.memory attribute):  mpi4py MPI memory.  (line  155)
* ndim (mpi4py.MPI.Cartcomm attribute):  mpi4py MPI Cartcomm.
                                                             (line  146)
* nedges (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  113)
* neighbors (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  117)
* Neighbor_allgather() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  159)
* neighbor_allgather() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  229)
* Neighbor_allgatherv() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  173)
* Neighbor_alltoall() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  187)
* neighbor_alltoall() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  239)
* Neighbor_alltoallv() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  201)
* Neighbor_alltoallw() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  215)
* nneighbors (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  119)
* nnodes (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  123)
* NO_OP (in module mpi4py.MPI):          mpi4py MPI NO_OP.   (line    6)
* obj (mpi4py.MPI.memory attribute):     mpi4py MPI memory.  (line  159)
* OFFSET (in module mpi4py.MPI):         mpi4py MPI OFFSET.  (line    6)
* Op (class in mpi4py.MPI):              mpi4py MPI Op.      (line    6)
* Open() (mpi4py.MPI.File class method): mpi4py MPI File.    (line  473)
* Open_port() (in module mpi4py.MPI):    mpi4py MPI Open_port.
                                                             (line    6)
* OP_NULL (in module mpi4py.MPI):        mpi4py MPI OP_NULL. (line    6)
* ORDER_C (in module mpi4py.MPI):        mpi4py MPI ORDER_C. (line    6)
* ORDER_F (in module mpi4py.MPI):        mpi4py MPI ORDER_F. (line    6)
* ORDER_FORTRAN (in module mpi4py.MPI):  mpi4py MPI ORDER_FORTRAN.
                                                             (line    6)
* outdegree (mpi4py.MPI.Topocomm attribute): mpi4py MPI Topocomm.
                                                             (line  268)
* outedges (mpi4py.MPI.Topocomm attribute): mpi4py MPI Topocomm.
                                                             (line  272)
* Pack() (mpi4py.MPI.Datatype method):   mpi4py MPI Datatype.
                                                             (line  550)
* PACKED (in module mpi4py.MPI):         mpi4py MPI PACKED.  (line    6)
* Pack_external() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  568)
* Pack_external_size() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  587)
* Pack_size() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  603)
* PATH:                                  MPI-enabled Python interpreter.
                                                             (line   47)
* Pcontrol() (in module mpi4py.MPI):     mpi4py MPI Pcontrol.
                                                             (line    6)
* periods (mpi4py.MPI.Cartcomm attribute): mpi4py MPI Cartcomm.
                                                             (line  150)
* Pickle (class in mpi4py.MPI):          mpi4py MPI Pickle.  (line    6)
* pickle (in module mpi4py.MPI):         mpi4py MPI pickle.  (line    6)
* pop() (mpi4py.MPI.Info method):        mpi4py MPI Info.    (line  219)
* popitem() (mpi4py.MPI.Info method):    mpi4py MPI Info.    (line  233)
* Post() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  580)
* Preallocate() (mpi4py.MPI.File method): mpi4py MPI File.   (line  492)
* Prequest (class in mpi4py.MPI):        mpi4py MPI Prequest.
                                                             (line    6)
* Probe() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1189)
* probe() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1775)
* Probe() (mpi4py.MPI.Message class method): mpi4py MPI Message.
                                                             (line   93)
* probe() (mpi4py.MPI.Message class method): mpi4py MPI Message.
                                                             (line  160)
* probe() (mpi4py.util.pkl5.Message class method): mpi4py util pkl5.
                                                             (line   74)
* PROC_NULL (in module mpi4py.MPI):      mpi4py MPI PROC_NULL.
                                                             (line    6)
* PROD (in module mpi4py.MPI):           mpi4py MPI PROD.    (line    6)
* profile() (in module mpi4py):          Miscellaneous functions.
                                                             (line    6)
* PROTOCOL (mpi4py.MPI.Pickle attribute): mpi4py MPI Pickle. (line   93)
* Publish_name() (in module mpi4py.MPI): mpi4py MPI Publish_name.
                                                             (line    6)
* Put() (mpi4py.MPI.Win method):         mpi4py MPI Win.     (line  594)
* py2f() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line 1791)
* py2f() (mpi4py.MPI.Datatype method):   mpi4py MPI Datatype.
                                                             (line  695)
* py2f() (mpi4py.MPI.Errhandler method): mpi4py MPI Errhandler.
                                                             (line   55)
* py2f() (mpi4py.MPI.File method):       mpi4py MPI File.    (line  936)
* py2f() (mpi4py.MPI.Group method):      mpi4py MPI Group.   (line  241)
* py2f() (mpi4py.MPI.Info method):       mpi4py MPI Info.    (line  240)
* py2f() (mpi4py.MPI.Message method):    mpi4py MPI Message. (line  179)
* py2f() (mpi4py.MPI.Op method):         mpi4py MPI Op.      (line  108)
* py2f() (mpi4py.MPI.Request method):    mpi4py MPI Request. (line  256)
* py2f() (mpi4py.MPI.Status method):     mpi4py MPI Status.  (line  200)
* py2f() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  798)
* Python Enhancement Proposals; PEP 574: mpi4py util pkl5.   (line    8)
* Query_thread() (in module mpi4py.MPI): mpi4py MPI Query_thread.
                                                             (line    6)
* Raccumulate() (mpi4py.MPI.Win method): mpi4py MPI Win.     (line  610)
* Range_excl() (mpi4py.MPI.Group method): mpi4py MPI Group.  (line  177)
* Range_incl() (mpi4py.MPI.Group method): mpi4py MPI Group.  (line  189)
* rank (mpi4py.MPI.Comm attribute):      mpi4py MPI Comm.    (line 1930)
* rank (mpi4py.MPI.Group attribute):     mpi4py MPI Group.   (line  249)
* Read() (mpi4py.MPI.File method):       mpi4py MPI File.    (line  502)
* readonly (mpi4py.MPI.memory attribute): mpi4py MPI memory. (line  163)
* Read_all() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  516)
* Read_all_begin() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  530)
* Read_all_end() (mpi4py.MPI.File method): mpi4py MPI File.  (line  540)
* Read_at() (mpi4py.MPI.File method):    mpi4py MPI File.    (line  554)
* Read_at_all() (mpi4py.MPI.File method): mpi4py MPI File.   (line  570)
* Read_at_all_begin() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  586)
* Read_at_all_end() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  600)
* Read_ordered() (mpi4py.MPI.File method): mpi4py MPI File.  (line  614)
* Read_ordered_begin() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  628)
* Read_ordered_end() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  638)
* Read_shared() (mpi4py.MPI.File method): mpi4py MPI File.   (line  652)
* REAL (in module mpi4py.MPI):           mpi4py MPI REAL.    (line    6)
* REAL16 (in module mpi4py.MPI):         mpi4py MPI REAL16.  (line    6)
* REAL2 (in module mpi4py.MPI):          mpi4py MPI REAL2.   (line    6)
* REAL4 (in module mpi4py.MPI):          mpi4py MPI REAL4.   (line    6)
* REAL8 (in module mpi4py.MPI):          mpi4py MPI REAL8.   (line    6)
* Recv() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line 1207)
* recv() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line 1796)
* Recv() (mpi4py.MPI.Message method):    mpi4py MPI Message. (line  112)
* recv() (mpi4py.MPI.Message method):    mpi4py MPI Message. (line  184)
* recv() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.   (line   98)
* recv() (mpi4py.util.pkl5.Message method): mpi4py util pkl5.
                                                             (line   70)
* Recv_init() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line 1227)
* recv_mprobe (mpi4py.mpi4py.rc attribute): Runtime configuration options.
                                                             (line  116)
* Reduce() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1243)
* reduce() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1815)
* Reduce_local() (mpi4py.MPI.Op method): mpi4py MPI Op.      (line   86)
* Reduce_scatter() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 1261)
* Reduce_scatter_block() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 1280)
* Register_datarep() (in module mpi4py.MPI): mpi4py MPI Register_datarep.
                                                             (line    6)
* release() (mpi4py.MPI.memory method):  mpi4py MPI memory.  (line  116)
* remote_group (mpi4py.MPI.Intercomm attribute): mpi4py MPI Intercomm.
                                                             (line   77)
* remote_size (mpi4py.MPI.Intercomm attribute): mpi4py MPI Intercomm.
                                                             (line   81)
* REPLACE (in module mpi4py.MPI):        mpi4py MPI REPLACE. (line    6)
* Request (class in mpi4py.MPI):         mpi4py MPI Request. (line    6)
* Request (class in mpi4py.util.pkl5):   mpi4py util pkl5.   (line   39)
* REQUEST_NULL (in module mpi4py.MPI):   mpi4py MPI REQUEST_NULL.
                                                             (line    6)
* Rget() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  628)
* Rget_accumulate() (mpi4py.MPI.Win method): mpi4py MPI Win. (line  644)
* ROOT (in module mpi4py.MPI):           mpi4py MPI ROOT.    (line    6)
* Rput() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  666)
* Rsend() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1296)
* Rsend_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line 1312)
* Scan() (mpi4py.MPI.Intracomm method):  mpi4py MPI Intracomm.
                                                             (line  305)
* scan() (mpi4py.MPI.Intracomm method):  mpi4py MPI Intracomm.
                                                             (line  385)
* Scatter() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line 1328)
* scatter() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line 1832)
* Scatterv() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1345)
* Seek() (mpi4py.MPI.File method):       mpi4py MPI File.    (line  666)
* SEEK_CUR (in module mpi4py.MPI):       mpi4py MPI SEEK_CUR.
                                                             (line    6)
* SEEK_END (in module mpi4py.MPI):       mpi4py MPI SEEK_END.
                                                             (line    6)
* SEEK_SET (in module mpi4py.MPI):       mpi4py MPI SEEK_SET.
                                                             (line    6)
* Seek_shared() (mpi4py.MPI.File method): mpi4py MPI File.   (line  680)
* Send() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line 1363)
* send() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line 1846)
* send() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.   (line   86)
* Sendrecv() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1399)
* sendrecv() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1862)
* sendrecv() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.
                                                             (line  108)
* Sendrecv_replace() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 1432)
* Send_init() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line 1383)
* Set() (mpi4py.MPI.Info method):        mpi4py MPI Info.    (line  154)
* Set_atomicity() (mpi4py.MPI.File method): mpi4py MPI File. (line  694)
* Set_attr() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1463)
* Set_attr() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  618)
* Set_attr() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  682)
* Set_cancelled() (mpi4py.MPI.Status method): mpi4py MPI Status.
                                                             (line  132)
* Set_elements() (mpi4py.MPI.Status method): mpi4py MPI Status.
                                                             (line  145)
* Set_errhandler() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 1477)
* Set_errhandler() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  704)
* Set_errhandler() (mpi4py.MPI.Win method): mpi4py MPI Win.  (line  696)
* Set_error() (mpi4py.MPI.Status method): mpi4py MPI Status. (line  162)
* Set_info() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1487)
* Set_info() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  714)
* Set_info() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  706)
* Set_name() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1497)
* Set_name() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  632)
* Set_name() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  716)
* Set_size() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  724)
* Set_source() (mpi4py.MPI.Status method): mpi4py MPI Status.
                                                             (line  172)
* Set_tag() (mpi4py.MPI.Status method):  mpi4py MPI Status.  (line  182)
* Set_view() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  734)
* Shared_query() (mpi4py.MPI.Win method): mpi4py MPI Win.    (line  726)
* Shift() (mpi4py.MPI.Cartcomm method):  mpi4py MPI Cartcomm.
                                                             (line  105)
* SHORT (in module mpi4py.MPI):          mpi4py MPI SHORT.   (line    6)
* SHORT_INT (in module mpi4py.MPI):      mpi4py MPI SHORT_INT.
                                                             (line    6)
* shutdown() (mpi4py.futures.MPIPoolExecutor method): MPIPoolExecutor.
                                                             (line  160)
* SIGNED_CHAR (in module mpi4py.MPI):    mpi4py MPI SIGNED_CHAR.
                                                             (line    6)
* SIGNED_INT (in module mpi4py.MPI):     mpi4py MPI SIGNED_INT.
                                                             (line    6)
* SIGNED_LONG (in module mpi4py.MPI):    mpi4py MPI SIGNED_LONG.
                                                             (line    6)
* SIGNED_LONG_LONG (in module mpi4py.MPI): mpi4py MPI SIGNED_LONG_LONG.
                                                             (line    6)
* SIGNED_SHORT (in module mpi4py.MPI):   mpi4py MPI SIGNED_SHORT.
                                                             (line    6)
* SIMILAR (in module mpi4py.MPI):        mpi4py MPI SIMILAR. (line    6)
* SINT16_T (in module mpi4py.MPI):       mpi4py MPI SINT16_T.
                                                             (line    6)
* SINT32_T (in module mpi4py.MPI):       mpi4py MPI SINT32_T.
                                                             (line    6)
* SINT64_T (in module mpi4py.MPI):       mpi4py MPI SINT64_T.
                                                             (line    6)
* SINT8_T (in module mpi4py.MPI):        mpi4py MPI SINT8_T. (line    6)
* size (mpi4py.MPI.Comm attribute):      mpi4py MPI Comm.    (line 1934)
* size (mpi4py.MPI.Datatype attribute):  mpi4py MPI Datatype.
                                                             (line  733)
* size (mpi4py.MPI.File attribute):      mpi4py MPI File.    (line  958)
* size (mpi4py.MPI.Group attribute):     mpi4py MPI Group.   (line  253)
* source (mpi4py.MPI.Status attribute):  mpi4py MPI Status.  (line  218)
* Spawn() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  321)
* Spawn_multiple() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  344)
* Split() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1507)
* Split_type() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line 1521)
* Ssend() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1537)
* ssend() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1887)
* ssend() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.  (line   90)
* Ssend_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line 1553)
* starmap() (mpi4py.futures.MPIPoolExecutor method): MPIPoolExecutor.
                                                             (line  146)
* Start() (mpi4py.MPI.Grequest class method): mpi4py MPI Grequest.
                                                             (line   47)
* Start() (mpi4py.MPI.Prequest method):  mpi4py MPI Prequest.
                                                             (line   38)
* Start() (mpi4py.MPI.Win method):       mpi4py MPI Win.     (line  737)
* Startall() (mpi4py.MPI.Prequest class method): mpi4py MPI Prequest.
                                                             (line   45)
* Status (class in mpi4py.MPI):          mpi4py MPI Status.  (line    6)
* Sub() (mpi4py.MPI.Cartcomm method):    mpi4py MPI Cartcomm.
                                                             (line  120)
* submit() (mpi4py.futures.MPIPoolExecutor method): MPIPoolExecutor.
                                                             (line  107)
* SUBVERSION (in module mpi4py.MPI):     mpi4py MPI SUBVERSION.
                                                             (line    6)
* SUCCESS (in module mpi4py.MPI):        mpi4py MPI SUCCESS. (line    6)
* SUM (in module mpi4py.MPI):            mpi4py MPI SUM.     (line    6)
* Sync() (mpi4py.MPI.File method):       mpi4py MPI File.    (line  755)
* Sync() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  751)
* tag (mpi4py.MPI.Status attribute):     mpi4py MPI Status.  (line  220)
* TAG_UB (in module mpi4py.MPI):         mpi4py MPI TAG_UB.  (line    6)
* Test() (mpi4py.MPI.Request method):    mpi4py MPI Request. (line  123)
* test() (mpi4py.MPI.Request method):    mpi4py MPI Request. (line  261)
* Test() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  758)
* test() (mpi4py.util.pkl5.Request method): mpi4py util pkl5.
                                                             (line   52)
* Testall() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  133)
* testall() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  271)
* testall() (mpi4py.util.pkl5.Request class method): mpi4py util pkl5.
                                                             (line   57)
* Testany() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  148)
* testany() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  286)
* Testsome() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  162)
* testsome() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  300)
* threads (mpi4py.mpi4py.rc attribute):  Runtime configuration options.
                                                             (line   53)
* THREAD_FUNNELED (in module mpi4py.MPI): mpi4py MPI THREAD_FUNNELED.
                                                             (line    6)
* thread_level (mpi4py.mpi4py.rc attribute): Runtime configuration options.
                                                             (line   68)
* THREAD_MULTIPLE (in module mpi4py.MPI): mpi4py MPI THREAD_MULTIPLE.
                                                             (line    6)
* THREAD_SERIALIZED (in module mpi4py.MPI): mpi4py MPI THREAD_SERIALIZED.
                                                             (line    6)
* THREAD_SINGLE (in module mpi4py.MPI):  mpi4py MPI THREAD_SINGLE.
                                                             (line    6)
* tobytes() (mpi4py.MPI.memory method):  mpi4py MPI memory.  (line  123)
* tomemory() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  803)
* topo (mpi4py.MPI.Cartcomm attribute):  mpi4py MPI Cartcomm.
                                                             (line  154)
* topo (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  127)
* Topocomm (class in mpi4py.MPI):        mpi4py MPI Topocomm.
                                                             (line    6)
* topology (mpi4py.MPI.Comm attribute):  mpi4py MPI Comm.    (line 1938)
* toreadonly() (mpi4py.MPI.memory method): mpi4py MPI memory.
                                                             (line  133)
* to_numpy_dtype() (in module mpi4py.util.dtlib): mpi4py util dtlib.
                                                             (line   16)
* Translate_ranks() (mpi4py.MPI.Group class method): mpi4py MPI Group.
                                                             (line  201)
* true_extent (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  735)
* true_lb (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  739)
* true_ub (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  743)
* TWOINT (in module mpi4py.MPI):         mpi4py MPI TWOINT.  (line    6)
* TYPECLASS_COMPLEX (in module mpi4py.MPI): mpi4py MPI TYPECLASS_COMPLEX.
                                                             (line    6)
* TYPECLASS_INTEGER (in module mpi4py.MPI): mpi4py MPI TYPECLASS_INTEGER.
                                                             (line    6)
* TYPECLASS_REAL (in module mpi4py.MPI): mpi4py MPI TYPECLASS_REAL.
                                                             (line    6)
* UB (in module mpi4py.MPI):             mpi4py MPI UB.      (line    6)
* ub (mpi4py.MPI.Datatype attribute):    mpi4py MPI Datatype.
                                                             (line  747)
* UINT16_T (in module mpi4py.MPI):       mpi4py MPI UINT16_T.
                                                             (line    6)
* UINT32_T (in module mpi4py.MPI):       mpi4py MPI UINT32_T.
                                                             (line    6)
* UINT64_T (in module mpi4py.MPI):       mpi4py MPI UINT64_T.
                                                             (line    6)
* UINT8_T (in module mpi4py.MPI):        mpi4py MPI UINT8_T. (line    6)
* UNDEFINED (in module mpi4py.MPI):      mpi4py MPI UNDEFINED.
                                                             (line    6)
* UNEQUAL (in module mpi4py.MPI):        mpi4py MPI UNEQUAL. (line    6)
* Union() (mpi4py.MPI.Group class method): mpi4py MPI Group. (line  219)
* UNIVERSE_SIZE (in module mpi4py.MPI):  mpi4py MPI UNIVERSE_SIZE.
                                                             (line    6)
* Unlock() (mpi4py.MPI.Win method):      mpi4py MPI Win.     (line  765)
* Unlock_all() (mpi4py.MPI.Win method):  mpi4py MPI Win.     (line  775)
* Unpack() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  642)
* Unpack_external() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  660)
* Unpublish_name() (in module mpi4py.MPI): mpi4py MPI Unpublish_name.
                                                             (line    6)
* UNSIGNED (in module mpi4py.MPI):       mpi4py MPI UNSIGNED.
                                                             (line    6)
* UNSIGNED_CHAR (in module mpi4py.MPI):  mpi4py MPI UNSIGNED_CHAR.
                                                             (line    6)
* UNSIGNED_INT (in module mpi4py.MPI):   mpi4py MPI UNSIGNED_INT.
                                                             (line    6)
* UNSIGNED_LONG (in module mpi4py.MPI):  mpi4py MPI UNSIGNED_LONG.
                                                             (line    6)
* UNSIGNED_LONG_LONG (in module mpi4py.MPI): mpi4py MPI UNSIGNED_LONG_LONG.
                                                             (line    6)
* UNSIGNED_SHORT (in module mpi4py.MPI): mpi4py MPI UNSIGNED_SHORT.
                                                             (line    6)
* UNWEIGHTED (in module mpi4py.MPI):     mpi4py MPI UNWEIGHTED.
                                                             (line    6)
* update() (mpi4py.MPI.Info method):     mpi4py MPI Info.    (line  245)
* values() (mpi4py.MPI.Info method):     mpi4py MPI Info.    (line  261)
* VERSION (in module mpi4py.MPI):        mpi4py MPI VERSION. (line    6)
* Wait() (mpi4py.MPI.Request method):    mpi4py MPI Request. (line  177)
* wait() (mpi4py.MPI.Request method):    mpi4py MPI Request. (line  316)
* Wait() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  782)
* wait() (mpi4py.util.pkl5.Request method): mpi4py util pkl5.
                                                             (line   55)
* Waitall() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  187)
* waitall() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  326)
* waitall() (mpi4py.util.pkl5.Request class method): mpi4py util pkl5.
                                                             (line   61)
* Waitany() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  202)
* waitany() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  341)
* Waitsome() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  216)
* waitsome() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  355)
* WCHAR (in module mpi4py.MPI):          mpi4py MPI WCHAR.   (line    6)
* WEIGHTS_EMPTY (in module mpi4py.MPI):  mpi4py MPI WEIGHTS_EMPTY.
                                                             (line    6)
* Win (class in mpi4py.MPI):             mpi4py MPI Win.     (line    6)
* WIN_BASE (in module mpi4py.MPI):       mpi4py MPI WIN_BASE.
                                                             (line    6)
* WIN_CREATE_FLAVOR (in module mpi4py.MPI): mpi4py MPI WIN_CREATE_FLAVOR.
                                                             (line    6)
* WIN_DISP_UNIT (in module mpi4py.MPI):  mpi4py MPI WIN_DISP_UNIT.
                                                             (line    6)
* WIN_FLAVOR (in module mpi4py.MPI):     mpi4py MPI WIN_FLAVOR.
                                                             (line    6)
* WIN_FLAVOR_ALLOCATE (in module mpi4py.MPI): mpi4py MPI WIN_FLAVOR_ALLOCATE.
                                                             (line    6)
* WIN_FLAVOR_CREATE (in module mpi4py.MPI): mpi4py MPI WIN_FLAVOR_CREATE.
                                                             (line    6)
* WIN_FLAVOR_DYNAMIC (in module mpi4py.MPI): mpi4py MPI WIN_FLAVOR_DYNAMIC.
                                                             (line    6)
* WIN_FLAVOR_SHARED (in module mpi4py.MPI): mpi4py MPI WIN_FLAVOR_SHARED.
                                                             (line    6)
* WIN_MODEL (in module mpi4py.MPI):      mpi4py MPI WIN_MODEL.
                                                             (line    6)
* WIN_NULL (in module mpi4py.MPI):       mpi4py MPI WIN_NULL.
                                                             (line    6)
* WIN_SEPARATE (in module mpi4py.MPI):   mpi4py MPI WIN_SEPARATE.
                                                             (line    6)
* WIN_SIZE (in module mpi4py.MPI):       mpi4py MPI WIN_SIZE.
                                                             (line    6)
* WIN_UNIFIED (in module mpi4py.MPI):    mpi4py MPI WIN_UNIFIED.
                                                             (line    6)
* Write() (mpi4py.MPI.File method):      mpi4py MPI File.    (line  763)
* Write_all() (mpi4py.MPI.File method):  mpi4py MPI File.    (line  777)
* Write_all_begin() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  791)
* Write_all_end() (mpi4py.MPI.File method): mpi4py MPI File. (line  801)
* Write_at() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  816)
* Write_at_all() (mpi4py.MPI.File method): mpi4py MPI File.  (line  832)
* Write_at_all_begin() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  848)
* Write_at_all_end() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  862)
* Write_ordered() (mpi4py.MPI.File method): mpi4py MPI File. (line  876)
* Write_ordered_begin() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  890)
* Write_ordered_end() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  900)
* Write_shared() (mpi4py.MPI.File method): mpi4py MPI File.  (line  914)
* Wtick() (in module mpi4py.MPI):        mpi4py MPI Wtick.   (line    6)
* Wtime() (in module mpi4py.MPI):        mpi4py MPI Wtime.   (line    6)
* WTIME_IS_GLOBAL (in module mpi4py.MPI): mpi4py MPI WTIME_IS_GLOBAL.
                                                             (line    6)



Tag Table:
Node: Top322
Ref: index doc523
Ref: 7523
Node: Introduction19323
Ref: intro doc19404
Ref: 819404
Ref: intro introduction19404
Ref: 919404
Ref: intro mpi-for-python19404
Ref: a19404
Ref: Introduction-Footnote-121484
Ref: Introduction-Footnote-221517
Node: What is MPI?21585
Ref: intro what-is-mpi21670
Ref: b21670
Ref: What is MPI?-Footnote-122482
Ref: What is MPI?-Footnote-222517
Ref: What is MPI?-Footnote-322548
Node: What is Python?22582
Ref: intro what-is-python22692
Ref: 1222692
Ref: What is Python?-Footnote-123972
Node: Related Projects24004
Ref: intro related-projects24093
Ref: 1524093
Ref: intro mpi-std127739
Ref: e27739
Ref: intro mpi-std227902
Ref: f27902
Ref: intro mpi-using28053
Ref: c28053
Ref: intro mpi-ref28211
Ref: d28211
Ref: intro mpi-mpich28387
Ref: 1028387
Ref: intro mpi-openmpi28589
Ref: 1128589
Ref: intro hinsen9729027
Ref: 1329027
Ref: intro beazley9729248
Ref: 1429248
Ref: Related Projects-Footnote-129492
Ref: Related Projects-Footnote-229594
Ref: Related Projects-Footnote-329639
Ref: Related Projects-Footnote-429687
Ref: Related Projects-Footnote-529746
Ref: Related Projects-Footnote-629773
Ref: Related Projects-Footnote-729804
Ref: Related Projects-Footnote-829832
Node: Overview29861
Ref: overview doc29947
Ref: 1629947
Ref: overview overview29947
Ref: 1729947
Node: Communicating Python Objects and Array Data30623
Ref: overview communicating-python-objects-and-array-data30733
Ref: 1830733
Ref: Communicating Python Objects and Array Data-Footnote-133281
Ref: Communicating Python Objects and Array Data-Footnote-233349
Ref: Communicating Python Objects and Array Data-Footnote-333419
Node: Communicators33487
Ref: overview communicators33635
Ref: 1933635
Node: Point-to-Point Communications35427
Ref: overview point-to-point-communications35557
Ref: 3435557
Node: Blocking Communications36464
Ref: overview blocking-communications36588
Ref: 3536588
Node: Nonblocking Communications37276
Ref: overview nonblocking-communications37434
Ref: 3c37434
Node: Persistent Communications38767
Ref: overview persistent-communications38893
Ref: 4338893
Node: Collective Communications39855
Ref: overview collective-communications39997
Ref: 4839997
Node: Support for GPU-aware MPI42249
Ref: overview support-for-gpu-aware-mpi42388
Ref: 6442388
Ref: Support for GPU-aware MPI-Footnote-143532
Ref: Support for GPU-aware MPI-Footnote-243616
Node: Dynamic Process Management43695
Ref: overview dynamic-process-management43833
Ref: 6643833
Node: One-Sided Communications46223
Ref: overview one-sided-communications46357
Ref: 7146357
Node: Parallel Input/Output48837
Ref: overview parallel-input-output48969
Ref: 7f48969
Node: Environmental Management51977
Ref: overview environmental-management52076
Ref: 8652076
Node: Initialization and Exit52234
Ref: overview initialization-and-exit52353
Ref: 8752353
Ref: Initialization and Exit-Footnote-153430
Node: Implementation Information53491
Ref: overview implementation-information53625
Ref: 8d53625
Node: Timers54142
Ref: overview timers54267
Ref: 9154267
Node: Error Handling54396
Ref: overview error-handling54486
Ref: 9454486
Ref: Error Handling-Footnote-155885
Ref: Error Handling-Footnote-255956
Node: Tutorial56024
Ref: tutorial doc56104
Ref: 6556104
Ref: tutorial id156104
Ref: 9a56104
Ref: tutorial tutorial56104
Ref: 9b56104
Ref: Tutorial-Footnote-160669
Ref: Tutorial-Footnote-260731
Ref: Tutorial-Footnote-360802
Ref: Tutorial-Footnote-460881
Node: Running Python scripts with MPI60949
Ref: tutorial running-python-scripts-with-mpi61062
Ref: a461062
Node: Point-to-Point Communication61324
Ref: tutorial point-to-point-communication61470
Ref: a561470
Ref: Point-to-Point Communication-Footnote-163095
Node: Collective Communication63163
Ref: tutorial collective-communication63284
Ref: a663284
Node: MPI-IO66244
Ref: tutorial mpi-io66366
Ref: a766366
Node: Dynamic Process Management<2>67568
Ref: tutorial dynamic-process-management67700
Ref: a867700
Node: CUDA-aware MPI + Python GPU arrays68990
Ref: tutorial cuda-aware-mpi-python-gpu-arrays69143
Ref: a969143
Node: One-Sided Communications<2>69778
Ref: tutorial one-sided-communications69920
Ref: aa69920
Node: Wrapping with SWIG71924
Ref: tutorial wrapping-with-swig72050
Ref: ab72050
Node: Wrapping with F2Py72930
Ref: tutorial wrapping-with-f2py73020
Ref: ac73020
Node: mpi4py73795
Ref: mpi4py doc73877
Ref: ad73877
Ref: mpi4py module-mpi4py73877
Ref: 073877
Ref: mpi4py mpi4py73877
Ref: ae73877
Node: Runtime configuration options74763
Ref: mpi4py runtime-configuration-options74865
Ref: af74865
Ref: mpi4py mpi4py mpi4py rc74934
Ref: b074934
Ref: mpi4py mpi4py mpi4py rc initialize75844
Ref: b175844
Ref: mpi4py mpi4py mpi4py rc threads76039
Ref: b276039
Ref: mpi4py mpi4py mpi4py rc thread_level76232
Ref: b376232
Ref: mpi4py mpi4py mpi4py rc finalize76522
Ref: b476522
Ref: mpi4py mpi4py mpi4py rc fast_reduce76720
Ref: b576720
Ref: mpi4py mpi4py mpi4py rc recv_mprobe76917
Ref: b676917
Ref: mpi4py mpi4py mpi4py rc errors77115
Ref: b777115
Ref: Runtime configuration options-Footnote-178029
Ref: Runtime configuration options-Footnote-278091
Ref: Runtime configuration options-Footnote-378153
Ref: Runtime configuration options-Footnote-478215
Ref: Runtime configuration options-Footnote-578277
Ref: Runtime configuration options-Footnote-678337
Ref: Runtime configuration options-Footnote-778399
Ref: Runtime configuration options-Footnote-878461
Ref: Runtime configuration options-Footnote-978523
Ref: Runtime configuration options-Footnote-1078585
Ref: Runtime configuration options-Footnote-1178648
Ref: Runtime configuration options-Footnote-1278711
Ref: Runtime configuration options-Footnote-1378774
Node: Environment variables78835
Ref: mpi4py environment-variables78969
Ref: bf78969
Ref: mpi4py envvar-MPI4PY_RC_INITIALIZE79203
Ref: b879203
Ref: mpi4py envvar-MPI4PY_RC_FINALIZE79472
Ref: bb79472
Ref: mpi4py envvar-MPI4PY_RC_THREADS79763
Ref: b979763
Ref: mpi4py envvar-MPI4PY_RC_THREAD_LEVEL79977
Ref: ba79977
Ref: mpi4py envvar-MPI4PY_RC_FAST_REDUCE80288
Ref: bc80288
Ref: mpi4py envvar-MPI4PY_RC_RECV_MPROBE80513
Ref: bd80513
Ref: mpi4py envvar-MPI4PY_RC_ERRORS80710
Ref: be80710
Ref: mpi4py envvar-MPI4PY_PICKLE_PROTOCOL80995
Ref: a180995
Ref: Environment variables-Footnote-181381
Ref: Environment variables-Footnote-281443
Ref: Environment variables-Footnote-381505
Ref: Environment variables-Footnote-481567
Ref: Environment variables-Footnote-581629
Ref: Environment variables-Footnote-681692
Ref: Environment variables-Footnote-781754
Ref: Environment variables-Footnote-881816
Ref: Environment variables-Footnote-981878
Node: Miscellaneous functions81957
Ref: mpi4py miscellaneous-functions82053
Ref: c082053
Ref: mpi4py mpi4py profile82110
Ref: c182110
Ref: mpi4py mpi4py get_config82534
Ref: c282534
Ref: mpi4py mpi4py get_include82624
Ref: c382624
Ref: Miscellaneous functions-Footnote-183090
Ref: Miscellaneous functions-Footnote-283150
Node: mpi4py MPI83210
Ref: mpi4py MPI doc83298
Ref: c483298
Ref: mpi4py MPI mpi4py-mpi83298
Ref: c583298
Node: Classes83376
Ref: mpi4py MPI classes83448
Ref: c683448
Node: Functions85314
Ref: mpi4py MPI functions85405
Ref: d185405
Node: Attributes89212
Ref: mpi4py MPI attributes89287
Ref: e589287
Ref: Attributes-Footnote-1112883
Ref: Attributes-Footnote-2112944
Ref: Attributes-Footnote-3113005
Ref: Attributes-Footnote-4113066
Ref: Attributes-Footnote-5113127
Ref: Attributes-Footnote-6113188
Ref: Attributes-Footnote-7113249
Ref: Attributes-Footnote-8113310
Ref: Attributes-Footnote-9113371
Ref: Attributes-Footnote-10113432
Ref: Attributes-Footnote-11113494
Ref: Attributes-Footnote-12113556
Ref: Attributes-Footnote-13113618
Ref: Attributes-Footnote-14113680
Ref: Attributes-Footnote-15113742
Ref: Attributes-Footnote-16113804
Ref: Attributes-Footnote-17113866
Ref: Attributes-Footnote-18113928
Ref: Attributes-Footnote-19113990
Ref: Attributes-Footnote-20114052
Ref: Attributes-Footnote-21114114
Ref: Attributes-Footnote-22114176
Ref: Attributes-Footnote-23114238
Ref: Attributes-Footnote-24114300
Ref: Attributes-Footnote-25114362
Ref: Attributes-Footnote-26114424
Ref: Attributes-Footnote-27114486
Ref: Attributes-Footnote-28114548
Ref: Attributes-Footnote-29114610
Ref: Attributes-Footnote-30114672
Ref: Attributes-Footnote-31114734
Ref: Attributes-Footnote-32114796
Ref: Attributes-Footnote-33114858
Ref: Attributes-Footnote-34114920
Ref: Attributes-Footnote-35114982
Ref: Attributes-Footnote-36115044
Ref: Attributes-Footnote-37115106
Ref: Attributes-Footnote-38115168
Ref: Attributes-Footnote-39115230
Ref: Attributes-Footnote-40115292
Ref: Attributes-Footnote-41115354
Ref: Attributes-Footnote-42115416
Ref: Attributes-Footnote-43115478
Ref: Attributes-Footnote-44115540
Ref: Attributes-Footnote-45115602
Ref: Attributes-Footnote-46115664
Ref: Attributes-Footnote-47115726
Ref: Attributes-Footnote-48115788
Ref: Attributes-Footnote-49115850
Ref: Attributes-Footnote-50115912
Ref: Attributes-Footnote-51115974
Ref: Attributes-Footnote-52116036
Ref: Attributes-Footnote-53116098
Ref: Attributes-Footnote-54116160
Ref: Attributes-Footnote-55116222
Ref: Attributes-Footnote-56116284
Ref: Attributes-Footnote-57116346
Ref: Attributes-Footnote-58116408
Ref: Attributes-Footnote-59116470
Ref: Attributes-Footnote-60116532
Ref: Attributes-Footnote-61116594
Ref: Attributes-Footnote-62116656
Ref: Attributes-Footnote-63116718
Ref: Attributes-Footnote-64116780
Ref: Attributes-Footnote-65116842
Ref: Attributes-Footnote-66116904
Ref: Attributes-Footnote-67116966
Ref: Attributes-Footnote-68117028
Ref: Attributes-Footnote-69117090
Ref: Attributes-Footnote-70117152
Ref: Attributes-Footnote-71117214
Ref: Attributes-Footnote-72117276
Ref: Attributes-Footnote-73117338
Ref: Attributes-Footnote-74117400
Ref: Attributes-Footnote-75117462
Ref: Attributes-Footnote-76117524
Ref: Attributes-Footnote-77117586
Ref: Attributes-Footnote-78117648
Ref: Attributes-Footnote-79117710
Ref: Attributes-Footnote-80117772
Ref: Attributes-Footnote-81117834
Ref: Attributes-Footnote-82117896
Ref: Attributes-Footnote-83117958
Ref: Attributes-Footnote-84118020
Ref: Attributes-Footnote-85118082
Ref: Attributes-Footnote-86118144
Ref: Attributes-Footnote-87118206
Ref: Attributes-Footnote-88118268
Ref: Attributes-Footnote-89118330
Ref: Attributes-Footnote-90118392
Ref: Attributes-Footnote-91118454
Ref: Attributes-Footnote-92118516
Ref: Attributes-Footnote-93118578
Ref: Attributes-Footnote-94118640
Ref: Attributes-Footnote-95118702
Ref: Attributes-Footnote-96118764
Ref: Attributes-Footnote-97118826
Ref: Attributes-Footnote-98118888
Ref: Attributes-Footnote-99118950
Ref: Attributes-Footnote-100119012
Ref: Attributes-Footnote-101119075
Ref: Attributes-Footnote-102119138
Ref: Attributes-Footnote-103119201
Ref: Attributes-Footnote-104119264
Ref: Attributes-Footnote-105119327
Ref: Attributes-Footnote-106119390
Ref: Attributes-Footnote-107119453
Ref: Attributes-Footnote-108119516
Ref: Attributes-Footnote-109119579
Ref: Attributes-Footnote-110119642
Ref: Attributes-Footnote-111119705
Ref: Attributes-Footnote-112119768
Ref: Attributes-Footnote-113119831
Ref: Attributes-Footnote-114119894
Ref: Attributes-Footnote-115119957
Ref: Attributes-Footnote-116120020
Ref: Attributes-Footnote-117120083
Ref: Attributes-Footnote-118120146
Ref: Attributes-Footnote-119120209
Ref: Attributes-Footnote-120120272
Ref: Attributes-Footnote-121120335
Ref: Attributes-Footnote-122120398
Ref: Attributes-Footnote-123120461
Ref: Attributes-Footnote-124120524
Ref: Attributes-Footnote-125120587
Ref: Attributes-Footnote-126120650
Ref: Attributes-Footnote-127120713
Ref: Attributes-Footnote-128120776
Ref: Attributes-Footnote-129120839
Ref: Attributes-Footnote-130120902
Ref: Attributes-Footnote-131120965
Ref: Attributes-Footnote-132121028
Ref: Attributes-Footnote-133121091
Ref: Attributes-Footnote-134121154
Ref: Attributes-Footnote-135121217
Ref: Attributes-Footnote-136121280
Ref: Attributes-Footnote-137121343
Ref: Attributes-Footnote-138121406
Ref: Attributes-Footnote-139121469
Ref: Attributes-Footnote-140121532
Ref: Attributes-Footnote-141121595
Ref: Attributes-Footnote-142121658
Ref: Attributes-Footnote-143121721
Ref: Attributes-Footnote-144121784
Ref: Attributes-Footnote-145121847
Ref: Attributes-Footnote-146121910
Ref: Attributes-Footnote-147121973
Ref: Attributes-Footnote-148122036
Ref: Attributes-Footnote-149122099
Ref: Attributes-Footnote-150122162
Ref: Attributes-Footnote-151122225
Ref: Attributes-Footnote-152122288
Ref: Attributes-Footnote-153122351
Ref: Attributes-Footnote-154122414
Ref: Attributes-Footnote-155122477
Ref: Attributes-Footnote-156122540
Node: mpi4py futures122603
Ref: mpi4py futures doc122696
Ref: 1f3122696
Ref: mpi4py futures module-mpi4py futures122696
Ref: 1122696
Ref: mpi4py futures mpi4py-futures122696
Ref: 1f4122696
Node: concurrent futures123034
Ref: mpi4py futures concurrent-futures123127
Ref: 1f5123127
Ref: concurrent futures-Footnote-1124362
Ref: concurrent futures-Footnote-2124455
Ref: concurrent futures-Footnote-3124550
Ref: concurrent futures-Footnote-4124652
Ref: concurrent futures-Footnote-5124745
Ref: concurrent futures-Footnote-6124838
Ref: concurrent futures-Footnote-7124931
Ref: concurrent futures-Footnote-8125022
Ref: concurrent futures-Footnote-9125121
Ref: concurrent futures-Footnote-10125214
Ref: concurrent futures-Footnote-11125266
Ref: concurrent futures-Footnote-12125308
Ref: concurrent futures-Footnote-13125402
Ref: concurrent futures-Footnote-14125496
Node: MPIPoolExecutor125590
Ref: mpi4py futures mpipoolexecutor125707
Ref: 1f7125707
Ref: mpi4py futures mpi4py futures MPIPoolExecutor127979
Ref: 1f6127979
Ref: mpi4py futures mpi4py futures MPIPoolExecutor submit131222
Ref: 1f8131222
Ref: mpi4py futures mpi4py futures MPIPoolExecutor map131607
Ref: 1f9131607
Ref: mpi4py futures mpi4py futures MPIPoolExecutor starmap133270
Ref: 1fa133270
Ref: mpi4py futures mpi4py futures MPIPoolExecutor shutdown133920
Ref: 1fb133920
Ref: mpi4py futures mpi4py futures MPIPoolExecutor bootup135531
Ref: 1fc135531
Ref: MPIPoolExecutor-Footnote-1137299
Ref: MPIPoolExecutor-Footnote-2137377
Ref: MPIPoolExecutor-Footnote-3137449
Ref: MPIPoolExecutor-Footnote-4137521
Ref: MPIPoolExecutor-Footnote-5137587
Ref: MPIPoolExecutor-Footnote-6137659
Ref: MPIPoolExecutor-Footnote-7137731
Ref: MPIPoolExecutor-Footnote-8137794
Ref: MPIPoolExecutor-Footnote-9137889
Ref: MPIPoolExecutor-Footnote-10137958
Ref: MPIPoolExecutor-Footnote-11138060
Ref: MPIPoolExecutor-Footnote-12138127
Ref: MPIPoolExecutor-Footnote-13138189
Ref: MPIPoolExecutor-Footnote-14138251
Ref: MPIPoolExecutor-Footnote-15138319
Ref: MPIPoolExecutor-Footnote-16138385
Ref: MPIPoolExecutor-Footnote-17138447
Ref: MPIPoolExecutor-Footnote-18138509
Ref: MPIPoolExecutor-Footnote-19138571
Ref: MPIPoolExecutor-Footnote-20138632
Ref: MPIPoolExecutor-Footnote-21138704
Ref: MPIPoolExecutor-Footnote-22138764
Ref: MPIPoolExecutor-Footnote-23138826
Ref: MPIPoolExecutor-Footnote-24138888
Ref: MPIPoolExecutor-Footnote-25138982
Ref: MPIPoolExecutor-Footnote-26139044
Ref: MPIPoolExecutor-Footnote-27139144
Ref: MPIPoolExecutor-Footnote-28139220
Ref: MPIPoolExecutor-Footnote-29139297
Ref: MPIPoolExecutor-Footnote-30139369
Ref: MPIPoolExecutor-Footnote-31139439
Node: MPICommExecutor139513
Ref: mpi4py futures mpicommexecutor139624
Ref: 1fd139624
Ref: mpi4py futures mpi4py futures MPICommExecutor141008
Ref: 1fe141008
Ref: MPICommExecutor-Footnote-1142938
Ref: MPICommExecutor-Footnote-2143000
Ref: MPICommExecutor-Footnote-3143069
Ref: MPICommExecutor-Footnote-4143138
Node: Command line143243
Ref: mpi4py futures command-line143347
Ref: 200143347
Ref: Command line-Footnote-1146225
Ref: Command line-Footnote-2146286
Node: Examples146356
Ref: mpi4py futures examples146436
Ref: 201146436
Ref: mpi4py futures term-GIL150174
Ref: 1ff150174
Ref: Examples-Footnote-1150253
Ref: Examples-Footnote-2150301
Ref: Examples-Footnote-3150352
Ref: Examples-Footnote-4150555
Ref: Examples-Footnote-5150625
Node: mpi4py util150703
Ref: mpi4py util doc150796
Ref: 202150796
Ref: mpi4py util module-mpi4py util150796
Ref: 4150796
Ref: mpi4py util mpi4py-util150796
Ref: 203150796
Node: mpi4py util pkl5151047
Ref: mpi4py util pkl5 doc151137
Ref: 204151137
Ref: mpi4py util pkl5 module-mpi4py util pkl5151137
Ref: 6151137
Ref: mpi4py util pkl5 mpi4py-util-pkl5151137
Ref: 205151137
Ref: mpi4py util pkl5 mpi4py util pkl5 Request152859
Ref: 206152859
Ref: mpi4py util pkl5 mpi4py util pkl5 Request Free153031
Ref: 207153031
Ref: mpi4py util pkl5 mpi4py util pkl5 Request cancel153065
Ref: 208153065
Ref: mpi4py util pkl5 mpi4py util pkl5 Request get_status153101
Ref: 209153101
Ref: mpi4py util pkl5 mpi4py util pkl5 Request test153191
Ref: 20a153191
Ref: mpi4py util pkl5 mpi4py util pkl5 Request wait153297
Ref: 20b153297
Ref: mpi4py util pkl5 mpi4py util pkl5 Request testall153365
Ref: 20c153365
Ref: mpi4py util pkl5 mpi4py util pkl5 Request waitall153544
Ref: 20d153544
Ref: mpi4py util pkl5 mpi4py util pkl5 Message153685
Ref: 20e153685
Ref: mpi4py util pkl5 mpi4py util pkl5 Message recv153846
Ref: 20f153846
Ref: mpi4py util pkl5 mpi4py util pkl5 Message irecv153919
Ref: 210153919
Ref: mpi4py util pkl5 mpi4py util pkl5 Message probe153957
Ref: 211153957
Ref: mpi4py util pkl5 mpi4py util pkl5 Message iprobe154138
Ref: 212154138
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm154335
Ref: 213154335
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm send154441
Ref: 214154441
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm bsend154508
Ref: 215154508
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm ssend154576
Ref: 216154576
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm isend154644
Ref: 217154644
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm ibsend154715
Ref: 218154715
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm issend154787
Ref: 219154787
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm recv154859
Ref: 21a154859
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm irecv155041
Ref: 21b155041
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm sendrecv155285
Ref: 21c155285
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm mprobe155537
Ref: 21d155537
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm improbe155695
Ref: 21e155695
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm bcast155864
Ref: 21f155864
Ref: mpi4py util pkl5 mpi4py util pkl5 Intracomm155927
Ref: 220155927
Ref: mpi4py util pkl5 mpi4py util pkl5 Intercomm156053
Ref: 221156053
Ref: mpi4py util pkl5-Footnote-1156250
Ref: mpi4py util pkl5-Footnote-2156318
Ref: mpi4py util pkl5-Footnote-3156367
Ref: mpi4py util pkl5-Footnote-4156435
Ref: mpi4py util pkl5-Footnote-5156477
Node: Examples<2>156548
Ref: mpi4py util pkl5 examples156612
Ref: 222156612
Node: mpi4py util dtlib157835
Ref: mpi4py util dtlib doc157925
Ref: 223157925
Ref: mpi4py util dtlib module-mpi4py util dtlib157925
Ref: 5157925
Ref: mpi4py util dtlib mpi4py-util-dtlib157925
Ref: 224157925
Ref: mpi4py util dtlib mpi4py util dtlib from_numpy_dtype158094
Ref: 225158094
Ref: mpi4py util dtlib mpi4py util dtlib to_numpy_dtype158237
Ref: 226158237
Node: mpi4py run158377
Ref: mpi4py run doc158465
Ref: 227158465
Ref: mpi4py run module-mpi4py run158465
Ref: 3158465
Ref: mpi4py run mpi4py-run158465
Ref: 228158465
Ref: mpi4py run-Footnote-1161775
Ref: mpi4py run-Footnote-2161843
Ref: mpi4py run-Footnote-3161914
Ref: mpi4py run-Footnote-4161986
Ref: mpi4py run-Footnote-5162063
Ref: mpi4py run-Footnote-6162133
Ref: mpi4py run-Footnote-7162199
Ref: mpi4py run-Footnote-8162267
Node: Interface options162328
Ref: mpi4py run interface-options162392
Ref: 229162392
Ref: mpi4py run cmdoption-m163081
Ref: 22a163081
Ref: mpi4py run cmdoption-c163194
Ref: 22b163194
Ref: Interface options-Footnote-1163482
Ref: Interface options-Footnote-2163542
Ref: Interface options-Footnote-3163603
Node: Reference163673
Ref: reference doc163758
Ref: 22c163758
Ref: reference id1163758
Ref: 22d163758
Ref: reference reference163758
Ref: 22e163758
Node: mpi4py MPI<2>163886
Ref: reference/mpi4py MPI doc163945
Ref: 22f163945
Ref: reference/mpi4py MPI module-mpi4py MPI163945
Ref: 2163945
Ref: reference/mpi4py MPI mpi4py-mpi163945
Ref: 230163945
Node: mpi4py MPI Cartcomm181921
Ref: reference/mpi4py MPI Cartcomm doc182014
Ref: 231182014
Ref: reference/mpi4py MPI Cartcomm mpi4py-mpi-cartcomm182014
Ref: 232182014
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm182067
Ref: 2f182067
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm __new__182322
Ref: 233182322
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm Get_cart_rank183820
Ref: 234183820
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm Get_coords184021
Ref: 235184021
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm Get_dim184193
Ref: 236184193
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm Get_topo184293
Ref: 237184293
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm Shift184452
Ref: 238184452
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm Sub184760
Ref: 239184760
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm coords185076
Ref: 23a185076
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm dim185127
Ref: 23b185127
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm dims185184
Ref: 23c185184
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm ndim185232
Ref: 23d185232
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm periods185290
Ref: 23e185290
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm topo185342
Ref: 23f185342
Ref: mpi4py MPI Cartcomm-Footnote-1185436
Ref: mpi4py MPI Cartcomm-Footnote-2185497
Ref: mpi4py MPI Cartcomm-Footnote-3185558
Ref: mpi4py MPI Cartcomm-Footnote-4185619
Ref: mpi4py MPI Cartcomm-Footnote-5185680
Ref: mpi4py MPI Cartcomm-Footnote-6185741
Ref: mpi4py MPI Cartcomm-Footnote-7185802
Ref: mpi4py MPI Cartcomm-Footnote-8185863
Ref: mpi4py MPI Cartcomm-Footnote-9185924
Ref: mpi4py MPI Cartcomm-Footnote-10185985
Ref: mpi4py MPI Cartcomm-Footnote-11186047
Ref: mpi4py MPI Cartcomm-Footnote-12186109
Ref: mpi4py MPI Cartcomm-Footnote-13186171
Node: mpi4py MPI Comm186234
Ref: reference/mpi4py MPI Comm doc186355
Ref: 240186355
Ref: reference/mpi4py MPI Comm mpi4py-mpi-comm186355
Ref: 241186355
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm186400
Ref: 1a186400
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm __new__186598
Ref: 242186598
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Abort198724
Ref: 243198724
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Allgather198965
Ref: 4c198965
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Allgatherv199335
Ref: 55199335
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Allreduce199776
Ref: 5a199776
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Alltoall200104
Ref: 4d200104
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Alltoallv200450
Ref: 56200450
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Alltoallw200867
Ref: 57200867
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Barrier201249
Ref: 244201249
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Bcast201346
Ref: 49201346
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Bsend201621
Ref: 245201621
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Bsend_init201891
Ref: 246201891
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Call_errhandler202192
Ref: 247202192
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Clone202388
Ref: 2a202388
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Compare202498
Ref: 248202498
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Create202745
Ref: 28202745
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Create_group202920
Ref: 29202920
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Create_keyval203164
Ref: 249203164
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Delete_attr203802
Ref: 24a203802
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Disconnect203982
Ref: 6e203982
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Dup204090
Ref: 2b204090
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Dup_with_info204296
Ref: 24b204296
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Free204479
Ref: 24c204479
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Free_keyval204570
Ref: 24d204570
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Gather204756
Ref: 4b204756
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Gatherv205142
Ref: 54205142
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_attr205654
Ref: 90205654
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_errhandler205839
Ref: 98205839
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_group205974
Ref: 23205974
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_info206106
Ref: 24e206106
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_name206250
Ref: 24f206250
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_parent206365
Ref: 68206365
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_rank206519
Ref: 22206519
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_size206643
Ref: 21206643
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_topology206766
Ref: 250206766
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Iallgather206925
Ref: 251206925
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Iallgatherv207225
Ref: 252207225
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Iallreduce207533
Ref: 253207533
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ialltoall207885
Ref: 254207885
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ialltoallv208197
Ref: 255208197
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ialltoallw208517
Ref: 256208517
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ibarrier208827
Ref: 257208827
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ibcast208932
Ref: 258208932
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ibsend209159
Ref: 259209159
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Idup209443
Ref: 25a209443
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Igather209594
Ref: 25b209594
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Igatherv209961
Ref: 25c209961
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Improbe210336
Ref: 25d210336
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Iprobe210700
Ref: 25e210700
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Irecv211035
Ref: 3e211035
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ireduce211325
Ref: 25f211325
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ireduce_scatter211752
Ref: 260211752
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ireduce_scatter_block212262
Ref: 261212262
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Irsend212710
Ref: 262212710
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Is_inter212991
Ref: 1d212991
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Is_intra213112
Ref: 1e213112
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Iscatter213233
Ref: 263213233
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Iscatterv213602
Ref: 264213602
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Isend213979
Ref: 3d213979
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Issend214245
Ref: 265214245
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Join214532
Ref: 266214532
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Mprobe214760
Ref: 267214760
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Probe215110
Ref: 268215110
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Recv215516
Ref: 37215516
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Recv_init215959
Ref: 45215959
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Reduce216276
Ref: 58216276
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Reduce_scatter216680
Ref: 59216680
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Reduce_scatter_block217167
Ref: 269217167
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Rsend217592
Ref: 26a217592
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Rsend_init217859
Ref: 26b217859
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Scatter218157
Ref: 4a218157
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Scatterv218569
Ref: 53218569
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Send219081
Ref: 36219081
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Send_init219538
Ref: 44219538
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Sendrecv219840
Ref: 38219840
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Sendrecv_replace220778
Ref: 26c220778
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Set_attr221657
Ref: 26d221657
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Set_errhandler221906
Ref: 97221906
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Set_info222108
Ref: 26e222108
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Set_name222305
Ref: 26f222305
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Split222476
Ref: 2c222476
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Split_type222713
Ref: 270222713
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ssend223025
Ref: 271223025
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ssend_init223301
Ref: 272223301
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm allgather223607
Ref: 51223607
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm allreduce223759
Ref: 5e223759
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm alltoall224107
Ref: 52224107
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm barrier224298
Ref: 273224298
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm bcast224381
Ref: 4e224381
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm bsend224577
Ref: 274224577
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm f2py224837
Ref: 275224837
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm gather224968
Ref: 50224968
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm ibsend225186
Ref: 276225186
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm improbe225468
Ref: 277225468
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm iprobe225834
Ref: 278225834
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm irecv226172
Ref: 9d226172
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm isend226496
Ref: 9c226496
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm issend226760
Ref: 279226760
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm mprobe227045
Ref: 27a227045
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm probe227397
Ref: 27b227397
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm py2f227735
Ref: 27c227735
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm recv227795
Ref: 3a227795
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm reduce228200
Ref: 5d228200
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm scatter228606
Ref: 4f228606
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm send228838
Ref: 39228838
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm sendrecv229080
Ref: 3b229080
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm ssend229673
Ref: 27d229673
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm group229997
Ref: 27e229997
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm info230054
Ref: 27f230054
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm is_inter230109
Ref: 280230109
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm is_intra230171
Ref: 281230171
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm is_topo230233
Ref: 282230233
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm name230300
Ref: 283230300
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm rank230355
Ref: 284230355
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm size230429
Ref: a0230429
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm topology230502
Ref: 285230502
Ref: mpi4py MPI Comm-Footnote-1230606
Ref: mpi4py MPI Comm-Footnote-2230670
Ref: mpi4py MPI Comm-Footnote-3230731
Ref: mpi4py MPI Comm-Footnote-4230793
Ref: mpi4py MPI Comm-Footnote-5230855
Ref: mpi4py MPI Comm-Footnote-6230917
Ref: mpi4py MPI Comm-Footnote-7230979
Ref: mpi4py MPI Comm-Footnote-8231041
Ref: mpi4py MPI Comm-Footnote-9231103
Ref: mpi4py MPI Comm-Footnote-10231165
Ref: mpi4py MPI Comm-Footnote-11231227
Ref: mpi4py MPI Comm-Footnote-12231290
Ref: mpi4py MPI Comm-Footnote-13231352
Ref: mpi4py MPI Comm-Footnote-14231414
Ref: mpi4py MPI Comm-Footnote-15231477
Ref: mpi4py MPI Comm-Footnote-16231539
Ref: mpi4py MPI Comm-Footnote-17231601
Ref: mpi4py MPI Comm-Footnote-18231663
Ref: mpi4py MPI Comm-Footnote-19231726
Ref: mpi4py MPI Comm-Footnote-20231788
Ref: mpi4py MPI Comm-Footnote-21231850
Ref: mpi4py MPI Comm-Footnote-22231912
Ref: mpi4py MPI Comm-Footnote-23231974
Ref: mpi4py MPI Comm-Footnote-24232037
Ref: mpi4py MPI Comm-Footnote-25232100
Ref: mpi4py MPI Comm-Footnote-26232162
Ref: mpi4py MPI Comm-Footnote-27232224
Ref: mpi4py MPI Comm-Footnote-28232287
Ref: mpi4py MPI Comm-Footnote-29232350
Ref: mpi4py MPI Comm-Footnote-30232413
Ref: mpi4py MPI Comm-Footnote-31232475
Ref: mpi4py MPI Comm-Footnote-32232537
Ref: mpi4py MPI Comm-Footnote-33232599
Ref: mpi4py MPI Comm-Footnote-34232662
Ref: mpi4py MPI Comm-Footnote-35232724
Ref: mpi4py MPI Comm-Footnote-36232787
Ref: mpi4py MPI Comm-Footnote-37232849
Ref: mpi4py MPI Comm-Footnote-38232911
Ref: mpi4py MPI Comm-Footnote-39232972
Ref: mpi4py MPI Comm-Footnote-40233034
Ref: mpi4py MPI Comm-Footnote-41233096
Ref: mpi4py MPI Comm-Footnote-42233158
Ref: mpi4py MPI Comm-Footnote-43233220
Ref: mpi4py MPI Comm-Footnote-44233282
Ref: mpi4py MPI Comm-Footnote-45233344
Ref: mpi4py MPI Comm-Footnote-46233406
Ref: mpi4py MPI Comm-Footnote-47233468
Ref: mpi4py MPI Comm-Footnote-48233530
Ref: mpi4py MPI Comm-Footnote-49233592
Ref: mpi4py MPI Comm-Footnote-50233654
Ref: mpi4py MPI Comm-Footnote-51233716
Ref: mpi4py MPI Comm-Footnote-52233779
Ref: mpi4py MPI Comm-Footnote-53233841
Ref: mpi4py MPI Comm-Footnote-54233903
Ref: mpi4py MPI Comm-Footnote-55233965
Ref: mpi4py MPI Comm-Footnote-56234027
Ref: mpi4py MPI Comm-Footnote-57234089
Ref: mpi4py MPI Comm-Footnote-58234151
Ref: mpi4py MPI Comm-Footnote-59234214
Ref: mpi4py MPI Comm-Footnote-60234277
Ref: mpi4py MPI Comm-Footnote-61234339
Ref: mpi4py MPI Comm-Footnote-62234401
Ref: mpi4py MPI Comm-Footnote-63234463
Ref: mpi4py MPI Comm-Footnote-64234525
Ref: mpi4py MPI Comm-Footnote-65234587
Ref: mpi4py MPI Comm-Footnote-66234649
Ref: mpi4py MPI Comm-Footnote-67234711
Ref: mpi4py MPI Comm-Footnote-68234773
Ref: mpi4py MPI Comm-Footnote-69234835
Ref: mpi4py MPI Comm-Footnote-70234897
Ref: mpi4py MPI Comm-Footnote-71234959
Ref: mpi4py MPI Comm-Footnote-72235021
Ref: mpi4py MPI Comm-Footnote-73235083
Ref: mpi4py MPI Comm-Footnote-74235146
Ref: mpi4py MPI Comm-Footnote-75235208
Ref: mpi4py MPI Comm-Footnote-76235270
Ref: mpi4py MPI Comm-Footnote-77235332
Ref: mpi4py MPI Comm-Footnote-78235395
Ref: mpi4py MPI Comm-Footnote-79235457
Ref: mpi4py MPI Comm-Footnote-80235520
Ref: mpi4py MPI Comm-Footnote-81235583
Ref: mpi4py MPI Comm-Footnote-82235645
Ref: mpi4py MPI Comm-Footnote-83235707
Ref: mpi4py MPI Comm-Footnote-84235770
Ref: mpi4py MPI Comm-Footnote-85235832
Ref: mpi4py MPI Comm-Footnote-86235894
Ref: mpi4py MPI Comm-Footnote-87235956
Ref: mpi4py MPI Comm-Footnote-88236019
Ref: mpi4py MPI Comm-Footnote-89236081
Ref: mpi4py MPI Comm-Footnote-90236144
Ref: mpi4py MPI Comm-Footnote-91236206
Ref: mpi4py MPI Comm-Footnote-92236268
Ref: mpi4py MPI Comm-Footnote-93236331
Ref: mpi4py MPI Comm-Footnote-94236393
Ref: mpi4py MPI Comm-Footnote-95236455
Ref: mpi4py MPI Comm-Footnote-96236517
Ref: mpi4py MPI Comm-Footnote-97236579
Ref: mpi4py MPI Comm-Footnote-98236641
Ref: mpi4py MPI Comm-Footnote-99236703
Ref: mpi4py MPI Comm-Footnote-100236766
Ref: mpi4py MPI Comm-Footnote-101236829
Ref: mpi4py MPI Comm-Footnote-102236892
Ref: mpi4py MPI Comm-Footnote-103236955
Ref: mpi4py MPI Comm-Footnote-104237018
Ref: mpi4py MPI Comm-Footnote-105237082
Ref: mpi4py MPI Comm-Footnote-106237145
Ref: mpi4py MPI Comm-Footnote-107237209
Ref: mpi4py MPI Comm-Footnote-108237273
Ref: mpi4py MPI Comm-Footnote-109237337
Ref: mpi4py MPI Comm-Footnote-110237399
Ref: mpi4py MPI Comm-Footnote-111237463
Ref: mpi4py MPI Comm-Footnote-112237526
Ref: mpi4py MPI Comm-Footnote-113237589
Ref: mpi4py MPI Comm-Footnote-114237652
Ref: mpi4py MPI Comm-Footnote-115237715
Ref: mpi4py MPI Comm-Footnote-116237778
Ref: mpi4py MPI Comm-Footnote-117237841
Ref: mpi4py MPI Comm-Footnote-118237905
Ref: mpi4py MPI Comm-Footnote-119237968
Ref: mpi4py MPI Comm-Footnote-120238031
Ref: mpi4py MPI Comm-Footnote-121238095
Ref: mpi4py MPI Comm-Footnote-122238158
Ref: mpi4py MPI Comm-Footnote-123238221
Ref: mpi4py MPI Comm-Footnote-124238284
Ref: mpi4py MPI Comm-Footnote-125238348
Ref: mpi4py MPI Comm-Footnote-126238411
Ref: mpi4py MPI Comm-Footnote-127238474
Ref: mpi4py MPI Comm-Footnote-128238537
Ref: mpi4py MPI Comm-Footnote-129238600
Ref: mpi4py MPI Comm-Footnote-130238663
Ref: mpi4py MPI Comm-Footnote-131238726
Ref: mpi4py MPI Comm-Footnote-132238789
Ref: mpi4py MPI Comm-Footnote-133238852
Ref: mpi4py MPI Comm-Footnote-134238916
Ref: mpi4py MPI Comm-Footnote-135238979
Ref: mpi4py MPI Comm-Footnote-136239042
Ref: mpi4py MPI Comm-Footnote-137239105
Ref: mpi4py MPI Comm-Footnote-138239168
Ref: mpi4py MPI Comm-Footnote-139239231
Ref: mpi4py MPI Comm-Footnote-140239294
Ref: mpi4py MPI Comm-Footnote-141239357
Ref: mpi4py MPI Comm-Footnote-142239420
Ref: mpi4py MPI Comm-Footnote-143239483
Ref: mpi4py MPI Comm-Footnote-144239546
Ref: mpi4py MPI Comm-Footnote-145239609
Ref: mpi4py MPI Comm-Footnote-146239672
Ref: mpi4py MPI Comm-Footnote-147239735
Ref: mpi4py MPI Comm-Footnote-148239798
Ref: mpi4py MPI Comm-Footnote-149239861
Ref: mpi4py MPI Comm-Footnote-150239924
Ref: mpi4py MPI Comm-Footnote-151239987
Ref: mpi4py MPI Comm-Footnote-152240051
Ref: mpi4py MPI Comm-Footnote-153240114
Ref: mpi4py MPI Comm-Footnote-154240177
Ref: mpi4py MPI Comm-Footnote-155240240
Ref: mpi4py MPI Comm-Footnote-156240303
Ref: mpi4py MPI Comm-Footnote-157240366
Ref: mpi4py MPI Comm-Footnote-158240429
Node: mpi4py MPI Datatype240493
Ref: reference/mpi4py MPI Datatype doc240619
Ref: 286240619
Ref: reference/mpi4py MPI Datatype mpi4py-mpi-datatype240619
Ref: 287240619
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype240672
Ref: c7240672
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype __new__240893
Ref: 288240893
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Commit247038
Ref: 289247038
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_contiguous247142
Ref: 28a247142
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_darray247320
Ref: 28b247320
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_f90_complex248008
Ref: 28c248008
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_f90_integer248254
Ref: 28d248254
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_f90_real248443
Ref: 28e248443
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_hindexed248683
Ref: 28f248683
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_hindexed_block249037
Ref: 290249037
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_hvector249403
Ref: 291249403
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_indexed249713
Ref: 292249713
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_indexed_block250038
Ref: 293250038
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_keyval250366
Ref: 294250366
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_resized251008
Ref: 295251008
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_struct251268
Ref: 296251268
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_subarray251781
Ref: 297251781
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_vector252287
Ref: 298252287
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Delete_attr252596
Ref: 299252596
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Dup252776
Ref: 29a252776
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Free252878
Ref: 29b252878
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Free_keyval252967
Ref: 29c252967
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_attr253149
Ref: 29d253149
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_contents253334
Ref: 29e253334
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_envelope253558
Ref: 29f253558
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_extent253782
Ref: 2a0253782
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_name253916
Ref: 2a1253916
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_size254027
Ref: 2a2254027
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_true_extent254164
Ref: 2a3254164
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Match_size254314
Ref: 2a4254314
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Pack254591
Ref: 2a5254591
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Pack_external254956
Ref: 2a6254956
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Pack_external_size255391
Ref: 2a7255391
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Pack_size255777
Ref: 2a8255777
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Set_attr256093
Ref: 2a9256093
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Set_name256340
Ref: 2aa256340
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Unpack256505
Ref: 2ab256505
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Unpack_external256874
Ref: 2ac256874
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype decode257313
Ref: 2ad257313
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype f2py257485
Ref: 2ae257485
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype py2f257619
Ref: 2af257619
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype combiner257739
Ref: 2b0257739
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype contents257798
Ref: 2b1257798
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype envelope257857
Ref: 2b2257857
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype extent257916
Ref: 2b3257916
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype is_named257944
Ref: 2b4257944
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype is_predefined258005
Ref: 2b5258005
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype lb258076
Ref: 2b6258076
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype name258123
Ref: 2b7258123
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype size258174
Ref: 2b8258174
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype true_extent258200
Ref: 2b9258200
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype true_lb258256
Ref: 2ba258256
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype true_ub258313
Ref: 2bb258313
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype ub258370
Ref: 2bc258370
Ref: mpi4py MPI Datatype-Footnote-1258453
Ref: mpi4py MPI Datatype-Footnote-2258517
Ref: mpi4py MPI Datatype-Footnote-3258578
Ref: mpi4py MPI Datatype-Footnote-4258639
Ref: mpi4py MPI Datatype-Footnote-5258700
Ref: mpi4py MPI Datatype-Footnote-6258761
Ref: mpi4py MPI Datatype-Footnote-7258822
Ref: mpi4py MPI Datatype-Footnote-8258883
Ref: mpi4py MPI Datatype-Footnote-9258944
Ref: mpi4py MPI Datatype-Footnote-10259005
Ref: mpi4py MPI Datatype-Footnote-11259067
Ref: mpi4py MPI Datatype-Footnote-12259129
Ref: mpi4py MPI Datatype-Footnote-13259191
Ref: mpi4py MPI Datatype-Footnote-14259253
Ref: mpi4py MPI Datatype-Footnote-15259315
Ref: mpi4py MPI Datatype-Footnote-16259377
Ref: mpi4py MPI Datatype-Footnote-17259439
Ref: mpi4py MPI Datatype-Footnote-18259501
Ref: mpi4py MPI Datatype-Footnote-19259563
Ref: mpi4py MPI Datatype-Footnote-20259625
Ref: mpi4py MPI Datatype-Footnote-21259687
Ref: mpi4py MPI Datatype-Footnote-22259749
Ref: mpi4py MPI Datatype-Footnote-23259811
Ref: mpi4py MPI Datatype-Footnote-24259873
Ref: mpi4py MPI Datatype-Footnote-25259935
Ref: mpi4py MPI Datatype-Footnote-26259997
Ref: mpi4py MPI Datatype-Footnote-27260059
Ref: mpi4py MPI Datatype-Footnote-28260121
Ref: mpi4py MPI Datatype-Footnote-29260184
Ref: mpi4py MPI Datatype-Footnote-30260247
Ref: mpi4py MPI Datatype-Footnote-31260309
Ref: mpi4py MPI Datatype-Footnote-32260371
Ref: mpi4py MPI Datatype-Footnote-33260433
Ref: mpi4py MPI Datatype-Footnote-34260495
Ref: mpi4py MPI Datatype-Footnote-35260557
Ref: mpi4py MPI Datatype-Footnote-36260619
Ref: mpi4py MPI Datatype-Footnote-37260681
Ref: mpi4py MPI Datatype-Footnote-38260743
Ref: mpi4py MPI Datatype-Footnote-39260805
Ref: mpi4py MPI Datatype-Footnote-40260867
Ref: mpi4py MPI Datatype-Footnote-41260929
Ref: mpi4py MPI Datatype-Footnote-42260991
Ref: mpi4py MPI Datatype-Footnote-43261053
Ref: mpi4py MPI Datatype-Footnote-44261116
Ref: mpi4py MPI Datatype-Footnote-45261179
Ref: mpi4py MPI Datatype-Footnote-46261241
Ref: mpi4py MPI Datatype-Footnote-47261303
Ref: mpi4py MPI Datatype-Footnote-48261365
Ref: mpi4py MPI Datatype-Footnote-49261427
Ref: mpi4py MPI Datatype-Footnote-50261489
Ref: mpi4py MPI Datatype-Footnote-51261551
Ref: mpi4py MPI Datatype-Footnote-52261613
Ref: mpi4py MPI Datatype-Footnote-53261675
Ref: mpi4py MPI Datatype-Footnote-54261737
Ref: mpi4py MPI Datatype-Footnote-55261799
Ref: mpi4py MPI Datatype-Footnote-56261861
Ref: mpi4py MPI Datatype-Footnote-57261923
Ref: mpi4py MPI Datatype-Footnote-58261984
Ref: mpi4py MPI Datatype-Footnote-59262046
Ref: mpi4py MPI Datatype-Footnote-60262108
Ref: mpi4py MPI Datatype-Footnote-61262170
Ref: mpi4py MPI Datatype-Footnote-62262232
Ref: mpi4py MPI Datatype-Footnote-63262294
Ref: mpi4py MPI Datatype-Footnote-64262356
Ref: mpi4py MPI Datatype-Footnote-65262418
Ref: mpi4py MPI Datatype-Footnote-66262479
Ref: mpi4py MPI Datatype-Footnote-67262541
Ref: mpi4py MPI Datatype-Footnote-68262603
Ref: mpi4py MPI Datatype-Footnote-69262664
Ref: mpi4py MPI Datatype-Footnote-70262726
Ref: mpi4py MPI Datatype-Footnote-71262788
Ref: mpi4py MPI Datatype-Footnote-72262850
Ref: mpi4py MPI Datatype-Footnote-73262912
Ref: mpi4py MPI Datatype-Footnote-74262974
Ref: mpi4py MPI Datatype-Footnote-75263037
Ref: mpi4py MPI Datatype-Footnote-76263098
Ref: mpi4py MPI Datatype-Footnote-77263161
Ref: mpi4py MPI Datatype-Footnote-78263223
Ref: mpi4py MPI Datatype-Footnote-79263285
Ref: mpi4py MPI Datatype-Footnote-80263346
Ref: mpi4py MPI Datatype-Footnote-81263408
Ref: mpi4py MPI Datatype-Footnote-82263470
Ref: mpi4py MPI Datatype-Footnote-83263531
Ref: mpi4py MPI Datatype-Footnote-84263592
Ref: mpi4py MPI Datatype-Footnote-85263654
Node: mpi4py MPI Distgraphcomm263716
Ref: reference/mpi4py MPI Distgraphcomm doc263848
Ref: 2bd263848
Ref: reference/mpi4py MPI Distgraphcomm mpi4py-mpi-distgraphcomm263848
Ref: 2be263848
Ref: reference/mpi4py MPI Distgraphcomm mpi4py MPI Distgraphcomm263911
Ref: 31263911
Ref: reference/mpi4py MPI Distgraphcomm mpi4py MPI Distgraphcomm __new__264189
Ref: 2bf264189
Ref: reference/mpi4py MPI Distgraphcomm mpi4py MPI Distgraphcomm Get_dist_neighbors264759
Ref: 2c0264759
Ref: reference/mpi4py MPI Distgraphcomm mpi4py MPI Distgraphcomm Get_dist_neighbors_count264986
Ref: 2c1264986
Ref: mpi4py MPI Distgraphcomm-Footnote-1265173
Ref: mpi4py MPI Distgraphcomm-Footnote-2265234
Ref: mpi4py MPI Distgraphcomm-Footnote-3265295
Ref: mpi4py MPI Distgraphcomm-Footnote-4265356
Ref: mpi4py MPI Distgraphcomm-Footnote-5265417
Node: mpi4py MPI Errhandler265478
Ref: reference/mpi4py MPI Errhandler doc265606
Ref: 2c2265606
Ref: reference/mpi4py MPI Errhandler mpi4py-mpi-errhandler265606
Ref: 2c3265606
Ref: reference/mpi4py MPI Errhandler mpi4py MPI Errhandler265663
Ref: ce265663
Ref: reference/mpi4py MPI Errhandler mpi4py MPI Errhandler __new__265892
Ref: 2c4265892
Ref: reference/mpi4py MPI Errhandler mpi4py MPI Errhandler Free266340
Ref: 2c5266340
Ref: reference/mpi4py MPI Errhandler mpi4py MPI Errhandler f2py266432
Ref: 2c6266432
Ref: reference/mpi4py MPI Errhandler mpi4py MPI Errhandler py2f266567
Ref: 2c7266567
Ref: mpi4py MPI Errhandler-Footnote-1266661
Ref: mpi4py MPI Errhandler-Footnote-2266725
Ref: mpi4py MPI Errhandler-Footnote-3266787
Ref: mpi4py MPI Errhandler-Footnote-4266848
Node: mpi4py MPI File266909
Ref: reference/mpi4py MPI File doc267033
Ref: 2c8267033
Ref: reference/mpi4py MPI File mpi4py-mpi-file267033
Ref: 2c9267033
Ref: reference/mpi4py MPI File mpi4py MPI File267078
Ref: 80267078
Ref: reference/mpi4py MPI File mpi4py MPI File __new__267275
Ref: 2ca267275
Ref: reference/mpi4py MPI File mpi4py MPI File Call_errhandler274569
Ref: 2cb274569
Ref: reference/mpi4py MPI File mpi4py MPI File Close274755
Ref: 82274755
Ref: reference/mpi4py MPI File mpi4py MPI File Delete274839
Ref: 83274839
Ref: reference/mpi4py MPI File mpi4py MPI File Get_amode275078
Ref: 2cc275078
Ref: reference/mpi4py MPI File mpi4py MPI File Get_atomicity275180
Ref: 2cd275180
Ref: reference/mpi4py MPI File mpi4py MPI File Get_byte_offset275285
Ref: 2ce275285
Ref: reference/mpi4py MPI File mpi4py MPI File Get_errhandler275544
Ref: 2cf275544
Ref: reference/mpi4py MPI File mpi4py MPI File Get_group275671
Ref: 2d0275671
Ref: reference/mpi4py MPI File mpi4py MPI File Get_info275806
Ref: 2d1275806
Ref: reference/mpi4py MPI File mpi4py MPI File Get_position275947
Ref: 2d2275947
Ref: reference/mpi4py MPI File mpi4py MPI File Get_position_shared276138
Ref: 2d3276138
Ref: reference/mpi4py MPI File mpi4py MPI File Get_size276332
Ref: 2d4276332
Ref: reference/mpi4py MPI File mpi4py MPI File Get_type_extent276427
Ref: 2d5276427
Ref: reference/mpi4py MPI File mpi4py MPI File Get_view276623
Ref: 85276623
Ref: reference/mpi4py MPI File mpi4py MPI File Iread276784
Ref: 2d6276784
Ref: reference/mpi4py MPI File mpi4py MPI File Iread_all276970
Ref: 2d7276970
Ref: reference/mpi4py MPI File mpi4py MPI File Iread_at277171
Ref: 2d8277171
Ref: reference/mpi4py MPI File mpi4py MPI File Iread_at_all277419
Ref: 2d9277419
Ref: reference/mpi4py MPI File mpi4py MPI File Iread_shared277682
Ref: 2da277682
Ref: reference/mpi4py MPI File mpi4py MPI File Iwrite277871
Ref: 2db277871
Ref: reference/mpi4py MPI File mpi4py MPI File Iwrite_all278059
Ref: 2dc278059
Ref: reference/mpi4py MPI File mpi4py MPI File Iwrite_at278262
Ref: 2dd278262
Ref: reference/mpi4py MPI File mpi4py MPI File Iwrite_at_all278512
Ref: 2de278512
Ref: reference/mpi4py MPI File mpi4py MPI File Iwrite_shared278777
Ref: 2df278777
Ref: reference/mpi4py MPI File mpi4py MPI File Open278968
Ref: 81278968
Ref: reference/mpi4py MPI File mpi4py MPI File Preallocate279348
Ref: 2e0279348
Ref: reference/mpi4py MPI File mpi4py MPI File Read279516
Ref: 2e1279516
Ref: reference/mpi4py MPI File mpi4py MPI File Read_all279789
Ref: 2e2279789
Ref: reference/mpi4py MPI File mpi4py MPI File Read_all_begin280077
Ref: 2e3280077
Ref: reference/mpi4py MPI File mpi4py MPI File Read_all_end280275
Ref: 2e4280275
Ref: reference/mpi4py MPI File mpi4py MPI File Read_at280584
Ref: 2e5280584
Ref: reference/mpi4py MPI File mpi4py MPI File Read_at_all280903
Ref: 2e6280903
Ref: reference/mpi4py MPI File mpi4py MPI File Read_at_all_begin281237
Ref: 2e7281237
Ref: reference/mpi4py MPI File mpi4py MPI File Read_at_all_end281496
Ref: 2e8281496
Ref: reference/mpi4py MPI File mpi4py MPI File Read_ordered281799
Ref: 2e9281799
Ref: reference/mpi4py MPI File mpi4py MPI File Read_ordered_begin282087
Ref: 2ea282087
Ref: reference/mpi4py MPI File mpi4py MPI File Read_ordered_end282285
Ref: 2eb282285
Ref: reference/mpi4py MPI File mpi4py MPI File Read_shared282594
Ref: 2ec282594
Ref: reference/mpi4py MPI File mpi4py MPI File Seek282870
Ref: 2ed282870
Ref: reference/mpi4py MPI File mpi4py MPI File Seek_shared283109
Ref: 2ee283109
Ref: reference/mpi4py MPI File mpi4py MPI File Set_atomicity283351
Ref: 2ef283351
Ref: reference/mpi4py MPI File mpi4py MPI File Set_errhandler283508
Ref: 2f0283508
Ref: reference/mpi4py MPI File mpi4py MPI File Set_info283701
Ref: 2f1283701
Ref: reference/mpi4py MPI File mpi4py MPI File Set_size283889
Ref: 2f2283889
Ref: reference/mpi4py MPI File mpi4py MPI File Set_view284036
Ref: 84284036
Ref: reference/mpi4py MPI File mpi4py MPI File Sync284508
Ref: 2f3284508
Ref: reference/mpi4py MPI File mpi4py MPI File Write284656
Ref: 2f4284656
Ref: reference/mpi4py MPI File mpi4py MPI File Write_all284931
Ref: 2f5284931
Ref: reference/mpi4py MPI File mpi4py MPI File Write_all_begin285221
Ref: 2f6285221
Ref: reference/mpi4py MPI File mpi4py MPI File Write_all_end285421
Ref: 2f7285421
Ref: reference/mpi4py MPI File mpi4py MPI File Write_at285742
Ref: 2f8285742
Ref: reference/mpi4py MPI File mpi4py MPI File Write_at_all286063
Ref: 2f9286063
Ref: reference/mpi4py MPI File mpi4py MPI File Write_at_all_begin286399
Ref: 2fa286399
Ref: reference/mpi4py MPI File mpi4py MPI File Write_at_all_end286660
Ref: 2fb286660
Ref: reference/mpi4py MPI File mpi4py MPI File Write_ordered286965
Ref: 2fc286965
Ref: reference/mpi4py MPI File mpi4py MPI File Write_ordered_begin287255
Ref: 2fd287255
Ref: reference/mpi4py MPI File mpi4py MPI File Write_ordered_end287455
Ref: 2fe287455
Ref: reference/mpi4py MPI File mpi4py MPI File Write_shared287766
Ref: 2ff287766
Ref: reference/mpi4py MPI File mpi4py MPI File f2py288044
Ref: 300288044
Ref: reference/mpi4py MPI File mpi4py MPI File py2f288174
Ref: 301288174
Ref: reference/mpi4py MPI File mpi4py MPI File amode288294
Ref: 302288294
Ref: reference/mpi4py MPI File mpi4py MPI File atomicity288349
Ref: 303288349
Ref: reference/mpi4py MPI File mpi4py MPI File group288380
Ref: 304288380
Ref: reference/mpi4py MPI File mpi4py MPI File info288429
Ref: 305288429
Ref: reference/mpi4py MPI File mpi4py MPI File size288476
Ref: 306288476
Ref: mpi4py MPI File-Footnote-1288559
Ref: mpi4py MPI File-Footnote-2288623
Ref: mpi4py MPI File-Footnote-3288684
Ref: mpi4py MPI File-Footnote-4288746
Ref: mpi4py MPI File-Footnote-5288808
Ref: mpi4py MPI File-Footnote-6288868
Ref: mpi4py MPI File-Footnote-7288930
Ref: mpi4py MPI File-Footnote-8288991
Ref: mpi4py MPI File-Footnote-9289053
Ref: mpi4py MPI File-Footnote-10289114
Ref: mpi4py MPI File-Footnote-11289176
Ref: mpi4py MPI File-Footnote-12289238
Ref: mpi4py MPI File-Footnote-13289300
Ref: mpi4py MPI File-Footnote-14289362
Ref: mpi4py MPI File-Footnote-15289424
Ref: mpi4py MPI File-Footnote-16289486
Ref: mpi4py MPI File-Footnote-17289547
Ref: mpi4py MPI File-Footnote-18289609
Ref: mpi4py MPI File-Footnote-19289671
Ref: mpi4py MPI File-Footnote-20289733
Ref: mpi4py MPI File-Footnote-21289795
Ref: mpi4py MPI File-Footnote-22289856
Ref: mpi4py MPI File-Footnote-23289918
Ref: mpi4py MPI File-Footnote-24289980
Ref: mpi4py MPI File-Footnote-25290043
Ref: mpi4py MPI File-Footnote-26290106
Ref: mpi4py MPI File-Footnote-27290169
Ref: mpi4py MPI File-Footnote-28290232
Ref: mpi4py MPI File-Footnote-29290295
Ref: mpi4py MPI File-Footnote-30290357
Ref: mpi4py MPI File-Footnote-31290420
Ref: mpi4py MPI File-Footnote-32290482
Ref: mpi4py MPI File-Footnote-33290545
Ref: mpi4py MPI File-Footnote-34290607
Ref: mpi4py MPI File-Footnote-35290670
Ref: mpi4py MPI File-Footnote-36290733
Ref: mpi4py MPI File-Footnote-37290796
Ref: mpi4py MPI File-Footnote-38290859
Ref: mpi4py MPI File-Footnote-39290922
Ref: mpi4py MPI File-Footnote-40290985
Ref: mpi4py MPI File-Footnote-41291047
Ref: mpi4py MPI File-Footnote-42291109
Ref: mpi4py MPI File-Footnote-43291172
Ref: mpi4py MPI File-Footnote-44291234
Ref: mpi4py MPI File-Footnote-45291296
Ref: mpi4py MPI File-Footnote-46291359
Ref: mpi4py MPI File-Footnote-47291422
Ref: mpi4py MPI File-Footnote-48291485
Ref: mpi4py MPI File-Footnote-49291548
Ref: mpi4py MPI File-Footnote-50291611
Ref: mpi4py MPI File-Footnote-51291673
Ref: mpi4py MPI File-Footnote-52291736
Ref: mpi4py MPI File-Footnote-53291798
Ref: mpi4py MPI File-Footnote-54291859
Ref: mpi4py MPI File-Footnote-55291922
Ref: mpi4py MPI File-Footnote-56291985
Ref: mpi4py MPI File-Footnote-57292048
Ref: mpi4py MPI File-Footnote-58292111
Ref: mpi4py MPI File-Footnote-59292174
Ref: mpi4py MPI File-Footnote-60292237
Ref: mpi4py MPI File-Footnote-61292299
Ref: mpi4py MPI File-Footnote-62292362
Ref: mpi4py MPI File-Footnote-63292424
Ref: mpi4py MPI File-Footnote-64292487
Ref: mpi4py MPI File-Footnote-65292549
Ref: mpi4py MPI File-Footnote-66292612
Ref: mpi4py MPI File-Footnote-67292675
Ref: mpi4py MPI File-Footnote-68292738
Ref: mpi4py MPI File-Footnote-69292801
Ref: mpi4py MPI File-Footnote-70292864
Ref: mpi4py MPI File-Footnote-71292927
Ref: mpi4py MPI File-Footnote-72292989
Node: mpi4py MPI Graphcomm293051
Ref: reference/mpi4py MPI Graphcomm doc293173
Ref: 307293173
Ref: reference/mpi4py MPI Graphcomm mpi4py-mpi-graphcomm293173
Ref: 308293173
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm293228
Ref: 30293228
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm __new__293490
Ref: 309293490
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm Get_dims294721
Ref: 30a294721
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm Get_neighbors294846
Ref: 30b294846
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm Get_neighbors_count295020
Ref: 30c295020
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm Get_topo295196
Ref: 30d295196
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm dims295380
Ref: 30e295380
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm edges295443
Ref: 30f295443
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm index295470
Ref: 310295470
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm nedges295497
Ref: 311295497
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm neighbors295552
Ref: 312295552
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm nneighbors295583
Ref: 313295583
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm nnodes295646
Ref: 314295646
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm topo295701
Ref: 315295701
Ref: mpi4py MPI Graphcomm-Footnote-1295795
Ref: mpi4py MPI Graphcomm-Footnote-2295856
Ref: mpi4py MPI Graphcomm-Footnote-3295917
Ref: mpi4py MPI Graphcomm-Footnote-4295978
Ref: mpi4py MPI Graphcomm-Footnote-5296039
Ref: mpi4py MPI Graphcomm-Footnote-6296100
Ref: mpi4py MPI Graphcomm-Footnote-7296161
Ref: mpi4py MPI Graphcomm-Footnote-8296222
Node: mpi4py MPI Grequest296283
Ref: reference/mpi4py MPI Grequest doc296406
Ref: 316296406
Ref: reference/mpi4py MPI Grequest mpi4py-mpi-grequest296406
Ref: 317296406
Ref: reference/mpi4py MPI Grequest mpi4py MPI Grequest296459
Ref: c9296459
Ref: reference/mpi4py MPI Grequest mpi4py MPI Grequest __new__296709
Ref: 318296709
Ref: reference/mpi4py MPI Grequest mpi4py MPI Grequest Complete297242
Ref: 319297242
Ref: reference/mpi4py MPI Grequest mpi4py MPI Grequest Start297363
Ref: 31a297363
Ref: mpi4py MPI Grequest-Footnote-1298101
Ref: mpi4py MPI Grequest-Footnote-2298163
Ref: mpi4py MPI Grequest-Footnote-3298225
Ref: mpi4py MPI Grequest-Footnote-4298287
Ref: mpi4py MPI Grequest-Footnote-5298349
Node: mpi4py MPI Group298409
Ref: reference/mpi4py MPI Group doc298527
Ref: 31b298527
Ref: reference/mpi4py MPI Group mpi4py-mpi-group298527
Ref: 31c298527
Ref: reference/mpi4py MPI Group mpi4py MPI Group298574
Ref: 24298574
Ref: reference/mpi4py MPI Group mpi4py MPI Group __new__298783
Ref: 31d298783
Ref: reference/mpi4py MPI Group mpi4py MPI Group Compare300840
Ref: 31e300840
Ref: reference/mpi4py MPI Group mpi4py MPI Group Difference301085
Ref: 27301085
Ref: reference/mpi4py MPI Group mpi4py MPI Group Dup301383
Ref: 31f301383
Ref: reference/mpi4py MPI Group mpi4py MPI Group Excl301479
Ref: 320301479
Ref: reference/mpi4py MPI Group mpi4py MPI Group Free301731
Ref: 321301731
Ref: reference/mpi4py MPI Group mpi4py MPI Group Get_rank301814
Ref: 322301814
Ref: reference/mpi4py MPI Group mpi4py MPI Group Get_size301930
Ref: 323301930
Ref: reference/mpi4py MPI Group mpi4py MPI Group Incl302030
Ref: 324302030
Ref: reference/mpi4py MPI Group mpi4py MPI Group Intersection302280
Ref: 26302280
Ref: reference/mpi4py MPI Group mpi4py MPI Group Range_excl302580
Ref: 325302580
Ref: reference/mpi4py MPI Group mpi4py MPI Group Range_incl302896
Ref: 326302896
Ref: reference/mpi4py MPI Group mpi4py MPI Group Translate_ranks303203
Ref: 327303203
Ref: reference/mpi4py MPI Group mpi4py MPI Group Union303653
Ref: 25303653
Ref: reference/mpi4py MPI Group mpi4py MPI Group f2py303936
Ref: 328303936
Ref: reference/mpi4py MPI Group mpi4py MPI Group py2f304067
Ref: 329304067
Ref: reference/mpi4py MPI Group mpi4py MPI Group rank304187
Ref: 32a304187
Ref: reference/mpi4py MPI Group mpi4py MPI Group size304254
Ref: 32b304254
Ref: mpi4py MPI Group-Footnote-1304356
Ref: mpi4py MPI Group-Footnote-2304420
Ref: mpi4py MPI Group-Footnote-3304481
Ref: mpi4py MPI Group-Footnote-4304542
Ref: mpi4py MPI Group-Footnote-5304604
Ref: mpi4py MPI Group-Footnote-6304665
Ref: mpi4py MPI Group-Footnote-7304726
Ref: mpi4py MPI Group-Footnote-8304787
Ref: mpi4py MPI Group-Footnote-9304848
Ref: mpi4py MPI Group-Footnote-10304909
Ref: mpi4py MPI Group-Footnote-11304971
Ref: mpi4py MPI Group-Footnote-12305033
Ref: mpi4py MPI Group-Footnote-13305095
Ref: mpi4py MPI Group-Footnote-14305157
Ref: mpi4py MPI Group-Footnote-15305219
Ref: mpi4py MPI Group-Footnote-16305281
Ref: mpi4py MPI Group-Footnote-17305343
Node: mpi4py MPI Info305405
Ref: reference/mpi4py MPI Info doc305524
Ref: 32c305524
Ref: reference/mpi4py MPI Info mpi4py-mpi-info305524
Ref: 32d305524
Ref: reference/mpi4py MPI Info mpi4py MPI Info305571
Ref: cb305571
Ref: reference/mpi4py MPI Info mpi4py MPI Info __new__305768
Ref: 32e305768
Ref: reference/mpi4py MPI Info mpi4py MPI Info Create307745
Ref: 32f307745
Ref: reference/mpi4py MPI Info mpi4py MPI Info Delete307869
Ref: 330307869
Ref: reference/mpi4py MPI Info mpi4py MPI Info Dup308028
Ref: 331308028
Ref: reference/mpi4py MPI Info mpi4py MPI Info Free308236
Ref: 332308236
Ref: reference/mpi4py MPI Info mpi4py MPI Info Get308325
Ref: 333308325
Ref: reference/mpi4py MPI Info mpi4py MPI Info Get_nkeys308564
Ref: 334308564
Ref: reference/mpi4py MPI Info mpi4py MPI Info Get_nthkey308690
Ref: 335308690
Ref: reference/mpi4py MPI Info mpi4py MPI Info Set308969
Ref: 336308969
Ref: reference/mpi4py MPI Info mpi4py MPI Info clear309271
Ref: 337309271
Ref: reference/mpi4py MPI Info mpi4py MPI Info copy309354
Ref: 338309354
Ref: reference/mpi4py MPI Info mpi4py MPI Info f2py309442
Ref: 339309442
Ref: reference/mpi4py MPI Info mpi4py MPI Info get309572
Ref: 33a309572
Ref: reference/mpi4py MPI Info mpi4py MPI Info items309813
Ref: 33b309813
Ref: reference/mpi4py MPI Info mpi4py MPI Info keys309917
Ref: 33c309917
Ref: reference/mpi4py MPI Info mpi4py MPI Info pop310003
Ref: 33d310003
Ref: reference/mpi4py MPI Info mpi4py MPI Info popitem310202
Ref: 33e310202
Ref: reference/mpi4py MPI Info mpi4py MPI Info py2f310304
Ref: 33f310304
Ref: reference/mpi4py MPI Info mpi4py MPI Info update310363
Ref: 340310363
Ref: reference/mpi4py MPI Info mpi4py MPI Info values310774
Ref: 341310774
Ref: mpi4py MPI Info-Footnote-1310900
Ref: mpi4py MPI Info-Footnote-2310964
Ref: mpi4py MPI Info-Footnote-3311024
Ref: mpi4py MPI Info-Footnote-4311086
Ref: mpi4py MPI Info-Footnote-5311148
Ref: mpi4py MPI Info-Footnote-6311208
Ref: mpi4py MPI Info-Footnote-7311269
Ref: mpi4py MPI Info-Footnote-8311329
Ref: mpi4py MPI Info-Footnote-9311390
Ref: mpi4py MPI Info-Footnote-10311451
Ref: mpi4py MPI Info-Footnote-11311512
Ref: mpi4py MPI Info-Footnote-12311573
Ref: mpi4py MPI Info-Footnote-13311634
Ref: mpi4py MPI Info-Footnote-14311697
Ref: mpi4py MPI Info-Footnote-15311760
Ref: mpi4py MPI Info-Footnote-16311822
Ref: mpi4py MPI Info-Footnote-17311883
Ref: mpi4py MPI Info-Footnote-18311944
Ref: mpi4py MPI Info-Footnote-19312005
Ref: mpi4py MPI Info-Footnote-20312066
Ref: mpi4py MPI Info-Footnote-21312127
Ref: mpi4py MPI Info-Footnote-22312188
Ref: mpi4py MPI Info-Footnote-23312249
Ref: mpi4py MPI Info-Footnote-24312310
Ref: mpi4py MPI Info-Footnote-25312371
Ref: mpi4py MPI Info-Footnote-26312432
Ref: mpi4py MPI Info-Footnote-27312493
Ref: mpi4py MPI Info-Footnote-28312555
Ref: mpi4py MPI Info-Footnote-29312616
Ref: mpi4py MPI Info-Footnote-30312677
Ref: mpi4py MPI Info-Footnote-31312738
Ref: mpi4py MPI Info-Footnote-32312799
Ref: mpi4py MPI Info-Footnote-33312860
Ref: mpi4py MPI Info-Footnote-34312923
Node: mpi4py MPI Intercomm312984
Ref: reference/mpi4py MPI Intercomm doc313107
Ref: 342313107
Ref: reference/mpi4py MPI Intercomm mpi4py-mpi-intercomm313107
Ref: 343313107
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm313164
Ref: 1c313164
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm __new__313399
Ref: 344313399
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm Get_remote_group314214
Ref: 345314214
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm Get_remote_size314368
Ref: 346314368
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm Merge314478
Ref: 2e314478
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm remote_group314706
Ref: 347314706
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm remote_size314764
Ref: 348314764
Ref: mpi4py MPI Intercomm-Footnote-1314871
Ref: mpi4py MPI Intercomm-Footnote-2314932
Node: mpi4py MPI Intracomm314994
Ref: reference/mpi4py MPI Intracomm doc315120
Ref: 349315120
Ref: reference/mpi4py MPI Intracomm mpi4py-mpi-intracomm315120
Ref: 34a315120
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm315177
Ref: 1b315177
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm __new__315412
Ref: 34b315412
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Accept317424
Ref: 6b317424
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Cart_map317749
Ref: 34c317749
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Connect318118
Ref: 6d318118
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Create_cart318442
Ref: 32318442
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Create_dist_graph318831
Ref: 34d318831
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Create_dist_graph_adjacent319498
Ref: 34e319498
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Create_graph320257
Ref: 33320257
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Create_intercomm320610
Ref: 2d320610
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Exscan321012
Ref: 5c321012
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Graph_map321339
Ref: 34f321339
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Iexscan321676
Ref: 350321676
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Iscan322014
Ref: 351322014
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Scan322350
Ref: 5b322350
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Spawn322675
Ref: 67322675
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Spawn_multiple323261
Ref: 352323261
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm exscan324093
Ref: 60324093
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm scan324439
Ref: 5f324439
Ref: mpi4py MPI Intracomm-Footnote-1324819
Ref: mpi4py MPI Intracomm-Footnote-2324879
Ref: mpi4py MPI Intracomm-Footnote-3324940
Ref: mpi4py MPI Intracomm-Footnote-4325001
Ref: mpi4py MPI Intracomm-Footnote-5325063
Ref: mpi4py MPI Intracomm-Footnote-6325124
Ref: mpi4py MPI Intracomm-Footnote-7325184
Ref: mpi4py MPI Intracomm-Footnote-8325245
Ref: mpi4py MPI Intracomm-Footnote-9325306
Ref: mpi4py MPI Intracomm-Footnote-10325368
Ref: mpi4py MPI Intracomm-Footnote-11325431
Ref: mpi4py MPI Intracomm-Footnote-12325493
Ref: mpi4py MPI Intracomm-Footnote-13325555
Ref: mpi4py MPI Intracomm-Footnote-14325617
Ref: mpi4py MPI Intracomm-Footnote-15325679
Ref: mpi4py MPI Intracomm-Footnote-16325742
Ref: mpi4py MPI Intracomm-Footnote-17325804
Ref: mpi4py MPI Intracomm-Footnote-18325866
Ref: mpi4py MPI Intracomm-Footnote-19325928
Ref: mpi4py MPI Intracomm-Footnote-20325990
Ref: mpi4py MPI Intracomm-Footnote-21326053
Ref: mpi4py MPI Intracomm-Footnote-22326115
Ref: mpi4py MPI Intracomm-Footnote-23326177
Ref: mpi4py MPI Intracomm-Footnote-24326240
Ref: mpi4py MPI Intracomm-Footnote-25326302
Ref: mpi4py MPI Intracomm-Footnote-26326364
Ref: mpi4py MPI Intracomm-Footnote-27326426
Ref: mpi4py MPI Intracomm-Footnote-28326489
Ref: mpi4py MPI Intracomm-Footnote-29326551
Ref: mpi4py MPI Intracomm-Footnote-30326613
Ref: mpi4py MPI Intracomm-Footnote-31326675
Ref: mpi4py MPI Intracomm-Footnote-32326738
Ref: mpi4py MPI Intracomm-Footnote-33326799
Ref: mpi4py MPI Intracomm-Footnote-34326860
Ref: mpi4py MPI Intracomm-Footnote-35326922
Ref: mpi4py MPI Intracomm-Footnote-36326984
Ref: mpi4py MPI Intracomm-Footnote-37327046
Ref: mpi4py MPI Intracomm-Footnote-38327107
Ref: mpi4py MPI Intracomm-Footnote-39327168
Ref: mpi4py MPI Intracomm-Footnote-40327230
Ref: mpi4py MPI Intracomm-Footnote-41327292
Node: mpi4py MPI Message327354
Ref: reference/mpi4py MPI Message doc327473
Ref: 353327473
Ref: reference/mpi4py MPI Message mpi4py-mpi-message327473
Ref: 354327473
Ref: reference/mpi4py MPI Message mpi4py MPI Message327526
Ref: cd327526
Ref: reference/mpi4py MPI Message mpi4py MPI Message __new__327749
Ref: 355327749
Ref: reference/mpi4py MPI Message mpi4py MPI Message Iprobe328887
Ref: 356328887
Ref: reference/mpi4py MPI Message mpi4py MPI Message Irecv329330
Ref: 357329330
Ref: reference/mpi4py MPI Message mpi4py MPI Message Probe329508
Ref: 358329508
Ref: reference/mpi4py MPI Message mpi4py MPI Message Recv329937
Ref: 359329937
Ref: reference/mpi4py MPI Message mpi4py MPI Message f2py330210
Ref: 35a330210
Ref: reference/mpi4py MPI Message mpi4py MPI Message iprobe330342
Ref: 35b330342
Ref: reference/mpi4py MPI Message mpi4py MPI Message irecv330785
Ref: 35c330785
Ref: reference/mpi4py MPI Message mpi4py MPI Message probe330906
Ref: 35d330906
Ref: reference/mpi4py MPI Message mpi4py MPI Message py2f331337
Ref: 35e331337
Ref: reference/mpi4py MPI Message mpi4py MPI Message recv331396
Ref: 35f331396
Ref: mpi4py MPI Message-Footnote-1331634
Ref: mpi4py MPI Message-Footnote-2331698
Ref: mpi4py MPI Message-Footnote-3331759
Ref: mpi4py MPI Message-Footnote-4331820
Ref: mpi4py MPI Message-Footnote-5331881
Ref: mpi4py MPI Message-Footnote-6331942
Ref: mpi4py MPI Message-Footnote-7332004
Ref: mpi4py MPI Message-Footnote-8332065
Ref: mpi4py MPI Message-Footnote-9332126
Ref: mpi4py MPI Message-Footnote-10332187
Ref: mpi4py MPI Message-Footnote-11332249
Ref: mpi4py MPI Message-Footnote-12332311
Node: mpi4py MPI Op332373
Ref: reference/mpi4py MPI Op doc332489
Ref: 360332489
Ref: reference/mpi4py MPI Op mpi4py-mpi-op332489
Ref: 361332489
Ref: reference/mpi4py MPI Op mpi4py MPI Op332532
Ref: ca332532
Ref: reference/mpi4py MPI Op mpi4py MPI Op __new__332724
Ref: 362332724
Ref: reference/mpi4py MPI Op mpi4py MPI Op Create333655
Ref: 363333655
Ref: reference/mpi4py MPI Op mpi4py MPI Op Free334037
Ref: 364334037
Ref: reference/mpi4py MPI Op mpi4py MPI Op Is_commutative334126
Ref: 365334126
Ref: reference/mpi4py MPI Op mpi4py MPI Op Reduce_local334257
Ref: 366334257
Ref: reference/mpi4py MPI Op mpi4py MPI Op f2py334514
Ref: 367334514
Ref: reference/mpi4py MPI Op mpi4py MPI Op py2f334641
Ref: 368334641
Ref: reference/mpi4py MPI Op mpi4py MPI Op is_commutative334760
Ref: 369334760
Ref: reference/mpi4py MPI Op mpi4py MPI Op is_predefined334822
Ref: 36a334822
Ref: mpi4py MPI Op-Footnote-1334930
Ref: mpi4py MPI Op-Footnote-2334994
Ref: mpi4py MPI Op-Footnote-3335056
Ref: mpi4py MPI Op-Footnote-4335118
Ref: mpi4py MPI Op-Footnote-5335180
Ref: mpi4py MPI Op-Footnote-6335242
Ref: mpi4py MPI Op-Footnote-7335304
Ref: mpi4py MPI Op-Footnote-8335365
Node: mpi4py MPI Pickle335426
Ref: reference/mpi4py MPI Pickle doc335543
Ref: 36b335543
Ref: reference/mpi4py MPI Pickle mpi4py-mpi-pickle335543
Ref: 36c335543
Ref: reference/mpi4py MPI Pickle mpi4py MPI Pickle335594
Ref: cf335594
Ref: reference/mpi4py MPI Pickle mpi4py MPI Pickle __init__336126
Ref: 36d336126
Ref: reference/mpi4py MPI Pickle mpi4py MPI Pickle dumps337026
Ref: 36e337026
Ref: reference/mpi4py MPI Pickle mpi4py MPI Pickle loads337404
Ref: 36f337404
Ref: reference/mpi4py MPI Pickle mpi4py MPI Pickle PROTOCOL337769
Ref: a2337769
Ref: mpi4py MPI Pickle-Footnote-1337862
Ref: mpi4py MPI Pickle-Footnote-2337926
Ref: mpi4py MPI Pickle-Footnote-3337987
Ref: mpi4py MPI Pickle-Footnote-4338049
Ref: mpi4py MPI Pickle-Footnote-5338110
Ref: mpi4py MPI Pickle-Footnote-6338172
Ref: mpi4py MPI Pickle-Footnote-7338233
Ref: mpi4py MPI Pickle-Footnote-8338295
Ref: mpi4py MPI Pickle-Footnote-9338356
Ref: mpi4py MPI Pickle-Footnote-10338418
Node: mpi4py MPI Prequest338481
Ref: reference/mpi4py MPI Prequest doc338603
Ref: 370338603
Ref: reference/mpi4py MPI Prequest mpi4py-mpi-prequest338603
Ref: 371338603
Ref: reference/mpi4py MPI Prequest mpi4py MPI Prequest338658
Ref: 46338658
Ref: reference/mpi4py MPI Prequest mpi4py MPI Prequest __new__338907
Ref: 372338907
Ref: reference/mpi4py MPI Prequest mpi4py MPI Prequest Start339410
Ref: 47339410
Ref: reference/mpi4py MPI Prequest mpi4py MPI Prequest Startall339532
Ref: 373339532
Ref: mpi4py MPI Prequest-Footnote-1339793
Ref: mpi4py MPI Prequest-Footnote-2339855
Node: mpi4py MPI Request339917
Ref: reference/mpi4py MPI Request doc340039
Ref: 374340039
Ref: reference/mpi4py MPI Request mpi4py-mpi-request340039
Ref: 375340039
Ref: reference/mpi4py MPI Request mpi4py MPI Request340092
Ref: 3f340092
Ref: reference/mpi4py MPI Request mpi4py MPI Request __new__340307
Ref: 376340307
Ref: reference/mpi4py MPI Request mpi4py MPI Request Cancel343015
Ref: 42343015
Ref: reference/mpi4py MPI Request mpi4py MPI Request Free343118
Ref: 377343118
Ref: reference/mpi4py MPI Request mpi4py MPI Request Get_status343217
Ref: 378343217
Ref: reference/mpi4py MPI Request mpi4py MPI Request Test343446
Ref: 40343446
Ref: reference/mpi4py MPI Request mpi4py MPI Request Testall343661
Ref: 379343661
Ref: reference/mpi4py MPI Request mpi4py MPI Request Testany344056
Ref: 37a344056
Ref: reference/mpi4py MPI Request mpi4py MPI Request Testsome344422
Ref: 37b344422
Ref: reference/mpi4py MPI Request mpi4py MPI Request Wait344834
Ref: 41344834
Ref: reference/mpi4py MPI Request mpi4py MPI Request Waitall345049
Ref: 37c345049
Ref: reference/mpi4py MPI Request mpi4py MPI Request Waitany345448
Ref: 37d345448
Ref: reference/mpi4py MPI Request mpi4py MPI Request Waitsome345797
Ref: 37e345797
Ref: reference/mpi4py MPI Request mpi4py MPI Request cancel346208
Ref: 37f346208
Ref: reference/mpi4py MPI Request mpi4py MPI Request f2py346312
Ref: 380346312
Ref: reference/mpi4py MPI Request mpi4py MPI Request get_status346445
Ref: 381346445
Ref: reference/mpi4py MPI Request mpi4py MPI Request py2f346675
Ref: 382346675
Ref: reference/mpi4py MPI Request mpi4py MPI Request test346734
Ref: 9e346734
Ref: reference/mpi4py MPI Request mpi4py MPI Request testall346972
Ref: 383346972
Ref: reference/mpi4py MPI Request mpi4py MPI Request testany347396
Ref: 384347396
Ref: reference/mpi4py MPI Request mpi4py MPI Request testsome347779
Ref: 385347779
Ref: reference/mpi4py MPI Request mpi4py MPI Request wait348230
Ref: 9f348230
Ref: reference/mpi4py MPI Request mpi4py MPI Request waitall348435
Ref: 386348435
Ref: reference/mpi4py MPI Request mpi4py MPI Request waitany348830
Ref: 387348830
Ref: reference/mpi4py MPI Request mpi4py MPI Request waitsome349191
Ref: 388349191
Ref: mpi4py MPI Request-Footnote-1349676
Ref: mpi4py MPI Request-Footnote-2349740
Ref: mpi4py MPI Request-Footnote-3349802
Ref: mpi4py MPI Request-Footnote-4349864
Ref: mpi4py MPI Request-Footnote-5349926
Ref: mpi4py MPI Request-Footnote-6349988
Ref: mpi4py MPI Request-Footnote-7350050
Ref: mpi4py MPI Request-Footnote-8350111
Ref: mpi4py MPI Request-Footnote-9350173
Ref: mpi4py MPI Request-Footnote-10350234
Ref: mpi4py MPI Request-Footnote-11350296
Ref: mpi4py MPI Request-Footnote-12350358
Ref: mpi4py MPI Request-Footnote-13350421
Ref: mpi4py MPI Request-Footnote-14350483
Ref: mpi4py MPI Request-Footnote-15350546
Ref: mpi4py MPI Request-Footnote-16350608
Ref: mpi4py MPI Request-Footnote-17350671
Ref: mpi4py MPI Request-Footnote-18350734
Ref: mpi4py MPI Request-Footnote-19350796
Ref: mpi4py MPI Request-Footnote-20350859
Ref: mpi4py MPI Request-Footnote-21350921
Ref: mpi4py MPI Request-Footnote-22350983
Node: mpi4py MPI Status351045
Ref: reference/mpi4py MPI Status doc351167
Ref: 389351167
Ref: reference/mpi4py MPI Status mpi4py-mpi-status351167
Ref: 38a351167
Ref: reference/mpi4py MPI Status mpi4py MPI Status351218
Ref: c8351218
Ref: reference/mpi4py MPI Status mpi4py MPI Status __new__351427
Ref: 38b351427
Ref: reference/mpi4py MPI Status mpi4py MPI Status Get_count353165
Ref: 38c353165
Ref: reference/mpi4py MPI Status mpi4py MPI Status Get_elements353356
Ref: 38d353356
Ref: reference/mpi4py MPI Status mpi4py MPI Status Get_error353553
Ref: 38e353553
Ref: reference/mpi4py MPI Status mpi4py MPI Status Get_source353645
Ref: 38f353645
Ref: reference/mpi4py MPI Status mpi4py MPI Status Get_tag353739
Ref: 390353739
Ref: reference/mpi4py MPI Status mpi4py MPI Status Is_cancelled353827
Ref: 391353827
Ref: reference/mpi4py MPI Status mpi4py MPI Status Set_cancelled353944
Ref: 392353944
Ref: reference/mpi4py MPI Status mpi4py MPI Status Set_elements354255
Ref: 393354255
Ref: reference/mpi4py MPI Status mpi4py MPI Status Set_error354641
Ref: 394354641
Ref: reference/mpi4py MPI Status mpi4py MPI Status Set_source354790
Ref: 395354790
Ref: reference/mpi4py MPI Status mpi4py MPI Status Set_tag354943
Ref: 396354943
Ref: reference/mpi4py MPI Status mpi4py MPI Status f2py355084
Ref: 397355084
Ref: reference/mpi4py MPI Status mpi4py MPI Status py2f355240
Ref: 398355240
Ref: reference/mpi4py MPI Status mpi4py MPI Status cancelled355366
Ref: 399355366
Ref: reference/mpi4py MPI Status mpi4py MPI Status count355424
Ref: 39a355424
Ref: reference/mpi4py MPI Status mpi4py MPI Status error355473
Ref: 39b355473
Ref: reference/mpi4py MPI Status mpi4py MPI Status source355500
Ref: 39c355500
Ref: reference/mpi4py MPI Status mpi4py MPI Status tag355528
Ref: 39d355528
Ref: mpi4py MPI Status-Footnote-1355589
Ref: mpi4py MPI Status-Footnote-2355653
Ref: mpi4py MPI Status-Footnote-3355714
Ref: mpi4py MPI Status-Footnote-4355775
Ref: mpi4py MPI Status-Footnote-5355836
Ref: mpi4py MPI Status-Footnote-6355897
Ref: mpi4py MPI Status-Footnote-7355958
Ref: mpi4py MPI Status-Footnote-8356020
Ref: mpi4py MPI Status-Footnote-9356082
Ref: mpi4py MPI Status-Footnote-10356144
Ref: mpi4py MPI Status-Footnote-11356206
Ref: mpi4py MPI Status-Footnote-12356269
Ref: mpi4py MPI Status-Footnote-13356331
Ref: mpi4py MPI Status-Footnote-14356394
Ref: mpi4py MPI Status-Footnote-15356456
Ref: mpi4py MPI Status-Footnote-16356519
Ref: mpi4py MPI Status-Footnote-17356581
Ref: mpi4py MPI Status-Footnote-18356644
Ref: mpi4py MPI Status-Footnote-19356706
Node: mpi4py MPI Topocomm356768
Ref: reference/mpi4py MPI Topocomm doc356886
Ref: 39e356886
Ref: reference/mpi4py MPI Topocomm mpi4py-mpi-topocomm356886
Ref: 39f356886
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm356941
Ref: cc356941
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm __new__357187
Ref: 3a0357187
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Ineighbor_allgather359269
Ref: 3a1359269
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Ineighbor_allgatherv359541
Ref: 3a2359541
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Ineighbor_alltoall359821
Ref: 3a3359821
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Ineighbor_alltoallv360090
Ref: 3a4360090
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Ineighbor_alltoallw360367
Ref: 3a5360367
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Neighbor_allgather360649
Ref: 3a6360649
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Neighbor_allgatherv360897
Ref: 3a7360897
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Neighbor_alltoall361153
Ref: 3a8361153
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Neighbor_alltoallv361398
Ref: 3a9361398
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Neighbor_alltoallw361651
Ref: 3aa361651
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm neighbor_allgather361909
Ref: 3ab361909
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm neighbor_alltoall362079
Ref: 3ac362079
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm degrees362345
Ref: 3ad362345
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm indegree362427
Ref: 3ae362427
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm inedges362497
Ref: 3af362497
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm inoutedges362556
Ref: 3b0362556
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm outdegree362631
Ref: 3b1362631
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm outedges362702
Ref: 3b2362702
Ref: mpi4py MPI Topocomm-Footnote-1362798
Ref: mpi4py MPI Topocomm-Footnote-2362860
Ref: mpi4py MPI Topocomm-Footnote-3362922
Ref: mpi4py MPI Topocomm-Footnote-4362984
Ref: mpi4py MPI Topocomm-Footnote-5363046
Node: mpi4py MPI Win363108
Ref: reference/mpi4py MPI Win doc363226
Ref: 3b3363226
Ref: reference/mpi4py MPI Win mpi4py-mpi-win363226
Ref: 3b4363226
Ref: reference/mpi4py MPI Win mpi4py MPI Win363271
Ref: 72363271
Ref: reference/mpi4py MPI Win mpi4py MPI Win __new__363465
Ref: 3b5363465
Ref: reference/mpi4py MPI Win mpi4py MPI Win Accumulate369928
Ref: 77369928
Ref: reference/mpi4py MPI Win mpi4py MPI Win Allocate370329
Ref: 3b6370329
Ref: reference/mpi4py MPI Win mpi4py MPI Win Allocate_shared370750
Ref: 3b7370750
Ref: reference/mpi4py MPI Win mpi4py MPI Win Attach371178
Ref: 3b8371178
Ref: reference/mpi4py MPI Win mpi4py MPI Win Call_errhandler371341
Ref: 3b9371341
Ref: reference/mpi4py MPI Win mpi4py MPI Win Compare_and_swap371530
Ref: 3ba371530
Ref: reference/mpi4py MPI Win mpi4py MPI Win Complete371989
Ref: 79371989
Ref: reference/mpi4py MPI Win mpi4py MPI Win Create372140
Ref: 73372140
Ref: reference/mpi4py MPI Win mpi4py MPI Win Create_dynamic372646
Ref: 3bb372646
Ref: reference/mpi4py MPI Win mpi4py MPI Win Create_keyval372969
Ref: 3bc372969
Ref: reference/mpi4py MPI Win mpi4py MPI Win Delete_attr373599
Ref: 3bd373599
Ref: reference/mpi4py MPI Win mpi4py MPI Win Detach373779
Ref: 3be373779
Ref: reference/mpi4py MPI Win mpi4py MPI Win Fence373943
Ref: 7c373943
Ref: reference/mpi4py MPI Win mpi4py MPI Win Fetch_and_op374129
Ref: 3bf374129
Ref: reference/mpi4py MPI Win mpi4py MPI Win Flush374572
Ref: 3c0374572
Ref: reference/mpi4py MPI Win mpi4py MPI Win Flush_all374757
Ref: 3c1374757
Ref: reference/mpi4py MPI Win mpi4py MPI Win Flush_local374888
Ref: 3c2374888
Ref: reference/mpi4py MPI Win mpi4py MPI Win Flush_local_all375097
Ref: 3c3375097
Ref: reference/mpi4py MPI Win mpi4py MPI Win Free375254
Ref: 74375254
Ref: reference/mpi4py MPI Win mpi4py MPI Win Free_keyval375339
Ref: 3c4375339
Ref: reference/mpi4py MPI Win mpi4py MPI Win Get375519
Ref: 76375519
Ref: reference/mpi4py MPI Win mpi4py MPI Win Get_accumulate375873
Ref: 3c5375873
Ref: reference/mpi4py MPI Win mpi4py MPI Win Get_attr376362
Ref: 3c6376362
Ref: reference/mpi4py MPI Win mpi4py MPI Win Get_errhandler376547
Ref: 3c7376547
Ref: reference/mpi4py MPI Win mpi4py MPI Win Get_group376676
Ref: 3c8376676
Ref: reference/mpi4py MPI Win mpi4py MPI Win Get_info376848
Ref: 3c9376848
Ref: reference/mpi4py MPI Win mpi4py MPI Win Get_name376987
Ref: 3ca376987
Ref: reference/mpi4py MPI Win mpi4py MPI Win Lock377107
Ref: 7d377107
Ref: reference/mpi4py MPI Win mpi4py MPI Win Lock_all377426
Ref: 3cb377426
Ref: reference/mpi4py MPI Win mpi4py MPI Win Post377609
Ref: 7a377609
Ref: reference/mpi4py MPI Win mpi4py MPI Win Put377847
Ref: 75377847
Ref: reference/mpi4py MPI Win mpi4py MPI Win Raccumulate378201
Ref: 3cc378201
Ref: reference/mpi4py MPI Win mpi4py MPI Win Rget378625
Ref: 3cd378625
Ref: reference/mpi4py MPI Win mpi4py MPI Win Rget_accumulate378990
Ref: 3ce378990
Ref: reference/mpi4py MPI Win mpi4py MPI Win Rput379518
Ref: 3cf379518
Ref: reference/mpi4py MPI Win mpi4py MPI Win Set_attr379883
Ref: 3d0379883
Ref: reference/mpi4py MPI Win mpi4py MPI Win Set_errhandler380130
Ref: 3d1380130
Ref: reference/mpi4py MPI Win mpi4py MPI Win Set_info380325
Ref: 3d2380325
Ref: reference/mpi4py MPI Win mpi4py MPI Win Set_name380515
Ref: 3d3380515
Ref: reference/mpi4py MPI Win mpi4py MPI Win Shared_query380689
Ref: 3d4380689
Ref: reference/mpi4py MPI Win mpi4py MPI Win Start380961
Ref: 78380961
Ref: reference/mpi4py MPI Win mpi4py MPI Win Sync381206
Ref: 3d5381206
Ref: reference/mpi4py MPI Win mpi4py MPI Win Test381335
Ref: 3d6381335
Ref: reference/mpi4py MPI Win mpi4py MPI Win Unlock381455
Ref: 7e381455
Ref: reference/mpi4py MPI Win mpi4py MPI Win Unlock_all381632
Ref: 3d7381632
Ref: reference/mpi4py MPI Win mpi4py MPI Win Wait381755
Ref: 7b381755
Ref: reference/mpi4py MPI Win mpi4py MPI Win f2py381905
Ref: 3d8381905
Ref: reference/mpi4py MPI Win mpi4py MPI Win py2f382034
Ref: 3d9382034
Ref: reference/mpi4py MPI Win mpi4py MPI Win tomemory382093
Ref: 3da382093
Ref: reference/mpi4py MPI Win mpi4py MPI Win attrs382266
Ref: 3db382266
Ref: reference/mpi4py MPI Win mpi4py MPI Win flavor382322
Ref: 3dc382322
Ref: reference/mpi4py MPI Win mpi4py MPI Win group382382
Ref: 3dd382382
Ref: reference/mpi4py MPI Win mpi4py MPI Win info382433
Ref: 3de382433
Ref: reference/mpi4py MPI Win mpi4py MPI Win model382482
Ref: 3df382482
Ref: reference/mpi4py MPI Win mpi4py MPI Win name382540
Ref: 3e0382540
Ref: mpi4py MPI Win-Footnote-1382625
Ref: mpi4py MPI Win-Footnote-2382689
Ref: mpi4py MPI Win-Footnote-3382750
Ref: mpi4py MPI Win-Footnote-4382812
Ref: mpi4py MPI Win-Footnote-5382873
Ref: mpi4py MPI Win-Footnote-6382934
Ref: mpi4py MPI Win-Footnote-7382995
Ref: mpi4py MPI Win-Footnote-8383056
Ref: mpi4py MPI Win-Footnote-9383118
Ref: mpi4py MPI Win-Footnote-10383179
Ref: mpi4py MPI Win-Footnote-11383242
Ref: mpi4py MPI Win-Footnote-12383304
Ref: mpi4py MPI Win-Footnote-13383366
Ref: mpi4py MPI Win-Footnote-14383429
Ref: mpi4py MPI Win-Footnote-15383492
Ref: mpi4py MPI Win-Footnote-16383555
Ref: mpi4py MPI Win-Footnote-17383617
Ref: mpi4py MPI Win-Footnote-18383679
Ref: mpi4py MPI Win-Footnote-19383741
Ref: mpi4py MPI Win-Footnote-20383804
Ref: mpi4py MPI Win-Footnote-21383867
Ref: mpi4py MPI Win-Footnote-22383929
Ref: mpi4py MPI Win-Footnote-23383991
Ref: mpi4py MPI Win-Footnote-24384054
Ref: mpi4py MPI Win-Footnote-25384117
Ref: mpi4py MPI Win-Footnote-26384179
Ref: mpi4py MPI Win-Footnote-27384242
Ref: mpi4py MPI Win-Footnote-28384304
Ref: mpi4py MPI Win-Footnote-29384366
Ref: mpi4py MPI Win-Footnote-30384429
Ref: mpi4py MPI Win-Footnote-31384491
Ref: mpi4py MPI Win-Footnote-32384554
Ref: mpi4py MPI Win-Footnote-33384617
Ref: mpi4py MPI Win-Footnote-34384679
Ref: mpi4py MPI Win-Footnote-35384742
Ref: mpi4py MPI Win-Footnote-36384805
Ref: mpi4py MPI Win-Footnote-37384868
Ref: mpi4py MPI Win-Footnote-38384930
Ref: mpi4py MPI Win-Footnote-39384992
Ref: mpi4py MPI Win-Footnote-40385054
Ref: mpi4py MPI Win-Footnote-41385117
Ref: mpi4py MPI Win-Footnote-42385179
Ref: mpi4py MPI Win-Footnote-43385242
Ref: mpi4py MPI Win-Footnote-44385304
Ref: mpi4py MPI Win-Footnote-45385366
Ref: mpi4py MPI Win-Footnote-46385427
Ref: mpi4py MPI Win-Footnote-47385489
Ref: mpi4py MPI Win-Footnote-48385551
Ref: mpi4py MPI Win-Footnote-49385613
Ref: mpi4py MPI Win-Footnote-50385676
Ref: mpi4py MPI Win-Footnote-51385738
Ref: mpi4py MPI Win-Footnote-52385801
Ref: mpi4py MPI Win-Footnote-53385863
Ref: mpi4py MPI Win-Footnote-54385926
Ref: mpi4py MPI Win-Footnote-55385988
Ref: mpi4py MPI Win-Footnote-56386051
Ref: mpi4py MPI Win-Footnote-57386113
Ref: mpi4py MPI Win-Footnote-58386175
Ref: mpi4py MPI Win-Footnote-59386237
Ref: mpi4py MPI Win-Footnote-60386299
Ref: mpi4py MPI Win-Footnote-61386361
Ref: mpi4py MPI Win-Footnote-62386424
Ref: mpi4py MPI Win-Footnote-63386487
Ref: mpi4py MPI Win-Footnote-64386550
Ref: mpi4py MPI Win-Footnote-65386611
Ref: mpi4py MPI Win-Footnote-66386674
Ref: mpi4py MPI Win-Footnote-67386736
Ref: mpi4py MPI Win-Footnote-68386798
Ref: mpi4py MPI Win-Footnote-69386860
Ref: mpi4py MPI Win-Footnote-70386923
Ref: mpi4py MPI Win-Footnote-71386986
Ref: mpi4py MPI Win-Footnote-72387049
Ref: mpi4py MPI Win-Footnote-73387111
Ref: mpi4py MPI Win-Footnote-74387174
Ref: mpi4py MPI Win-Footnote-75387237
Ref: mpi4py MPI Win-Footnote-76387299
Node: mpi4py MPI memory387361
Ref: reference/mpi4py MPI memory doc387480
Ref: 3e1387480
Ref: reference/mpi4py MPI memory mpi4py-mpi-memory387480
Ref: 3e2387480
Ref: reference/mpi4py MPI memory mpi4py MPI memory387531
Ref: d0387531
Ref: reference/mpi4py MPI memory mpi4py MPI memory __new__387696
Ref: 3e3387696
Ref: reference/mpi4py MPI memory mpi4py MPI memory allocate389175
Ref: 3e4389175
Ref: reference/mpi4py MPI memory mpi4py MPI memory fromaddress389411
Ref: 3e5389411
Ref: reference/mpi4py MPI memory mpi4py MPI memory frombuffer389728
Ref: 3e6389728
Ref: reference/mpi4py MPI memory mpi4py MPI memory release389985
Ref: 3e7389985
Ref: reference/mpi4py MPI memory mpi4py MPI memory tobytes390117
Ref: 3e8390117
Ref: reference/mpi4py MPI memory mpi4py MPI memory toreadonly390326
Ref: 3e9390326
Ref: reference/mpi4py MPI memory mpi4py MPI memory address390520
Ref: 3ea390520
Ref: reference/mpi4py MPI memory mpi4py MPI memory format390575
Ref: 3eb390575
Ref: reference/mpi4py MPI memory mpi4py MPI memory itemsize390655
Ref: 3ec390655
Ref: reference/mpi4py MPI memory mpi4py MPI memory nbytes390730
Ref: 3ed390730
Ref: reference/mpi4py MPI memory mpi4py MPI memory obj390792
Ref: 3ee390792
Ref: reference/mpi4py MPI memory mpi4py MPI memory readonly390864
Ref: 3ef390864
Ref: mpi4py MPI memory-Footnote-1391076
Ref: mpi4py MPI memory-Footnote-2391140
Ref: mpi4py MPI memory-Footnote-3391201
Ref: mpi4py MPI memory-Footnote-4391263
Ref: mpi4py MPI memory-Footnote-5391324
Ref: mpi4py MPI memory-Footnote-6391385
Ref: mpi4py MPI memory-Footnote-7391447
Ref: mpi4py MPI memory-Footnote-8391509
Ref: mpi4py MPI memory-Footnote-9391571
Ref: mpi4py MPI memory-Footnote-10391631
Node: mpi4py MPI Exception391694
Ref: reference/mpi4py MPI Exception doc391825
Ref: 3f0391825
Ref: reference/mpi4py MPI Exception mpi4py-mpi-exception391825
Ref: 3f1391825
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception391882
Ref: 99391882
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception __new__392069
Ref: 3f2392069
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception Get_error_class392833
Ref: 3f3392833
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception Get_error_code392925
Ref: 3f4392925
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception Get_error_string393015
Ref: 3f5393015
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception error_class393170
Ref: 3f6393170
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception error_code393226
Ref: 3f7393226
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception error_string393280
Ref: 3f8393280
Ref: mpi4py MPI Exception-Footnote-1396925
Ref: mpi4py MPI Exception-Footnote-2396996
Ref: mpi4py MPI Exception-Footnote-3397057
Ref: mpi4py MPI Exception-Footnote-4397118
Ref: mpi4py MPI Exception-Footnote-5397179
Ref: mpi4py MPI Exception-Footnote-6397240
Node: mpi4py MPI Add_error_class397300
Ref: reference/mpi4py MPI Add_error_class doc397439
Ref: 3f9397439
Ref: reference/mpi4py MPI Add_error_class mpi4py-mpi-add-error-class397439
Ref: 3fa397439
Ref: reference/mpi4py MPI Add_error_class mpi4py MPI Add_error_class397508
Ref: dc397508
Ref: mpi4py MPI Add_error_class-Footnote-1397670
Node: mpi4py MPI Add_error_code397731
Ref: reference/mpi4py MPI Add_error_code doc397877
Ref: 3fb397877
Ref: reference/mpi4py MPI Add_error_code mpi4py-mpi-add-error-code397877
Ref: 3fc397877
Ref: reference/mpi4py MPI Add_error_code mpi4py MPI Add_error_code397944
Ref: dd397944
Ref: mpi4py MPI Add_error_code-Footnote-1398156
Ref: mpi4py MPI Add_error_code-Footnote-2398217
Node: mpi4py MPI Add_error_string398278
Ref: reference/mpi4py MPI Add_error_string doc398417
Ref: 3fd398417
Ref: reference/mpi4py MPI Add_error_string mpi4py-mpi-add-error-string398417
Ref: 3fe398417
Ref: reference/mpi4py MPI Add_error_string mpi4py MPI Add_error_string398488
Ref: de398488
Ref: mpi4py MPI Add_error_string-Footnote-1398782
Ref: mpi4py MPI Add_error_string-Footnote-2398843
Ref: mpi4py MPI Add_error_string-Footnote-3398903
Node: mpi4py MPI Aint_add398965
Ref: reference/mpi4py MPI Aint_add doc399099
Ref: 3ff399099
Ref: reference/mpi4py MPI Aint_add mpi4py-mpi-aint-add399099
Ref: 400399099
Ref: reference/mpi4py MPI Aint_add mpi4py MPI Aint_add399154
Ref: d8399154
Ref: mpi4py MPI Aint_add-Footnote-1399408
Ref: mpi4py MPI Aint_add-Footnote-2399469
Ref: mpi4py MPI Aint_add-Footnote-3399530
Node: mpi4py MPI Aint_diff399591
Ref: reference/mpi4py MPI Aint_diff doc399718
Ref: 401399718
Ref: reference/mpi4py MPI Aint_diff mpi4py-mpi-aint-diff399718
Ref: 402399718
Ref: reference/mpi4py MPI Aint_diff mpi4py MPI Aint_diff399775
Ref: d9399775
Ref: mpi4py MPI Aint_diff-Footnote-1400035
Ref: mpi4py MPI Aint_diff-Footnote-2400096
Ref: mpi4py MPI Aint_diff-Footnote-3400157
Node: mpi4py MPI Alloc_mem400218
Ref: reference/mpi4py MPI Alloc_mem doc400350
Ref: 403400350
Ref: reference/mpi4py MPI Alloc_mem mpi4py-mpi-alloc-mem400350
Ref: 404400350
Ref: reference/mpi4py MPI Alloc_mem mpi4py MPI Alloc_mem400407
Ref: d5400407
Ref: mpi4py MPI Alloc_mem-Footnote-1400688
Node: mpi4py MPI Attach_buffer400749
Ref: reference/mpi4py MPI Attach_buffer doc400882
Ref: 405400882
Ref: reference/mpi4py MPI Attach_buffer mpi4py-mpi-attach-buffer400882
Ref: 406400882
Ref: reference/mpi4py MPI Attach_buffer mpi4py MPI Attach_buffer400947
Ref: df400947
Ref: mpi4py MPI Attach_buffer-Footnote-1401170
Node: mpi4py MPI Close_port401232
Ref: reference/mpi4py MPI Close_port doc401368
Ref: 407401368
Ref: reference/mpi4py MPI Close_port mpi4py-mpi-close-port401368
Ref: 408401368
Ref: reference/mpi4py MPI Close_port mpi4py MPI Close_port401427
Ref: 70401427
Ref: mpi4py MPI Close_port-Footnote-1401607
Ref: mpi4py MPI Close_port-Footnote-2401667
Node: mpi4py MPI Compute_dims401729
Ref: reference/mpi4py MPI Compute_dims doc401865
Ref: 409401865
Ref: reference/mpi4py MPI Compute_dims mpi4py-mpi-compute-dims401865
Ref: 40a401865
Ref: reference/mpi4py MPI Compute_dims mpi4py MPI Compute_dims401928
Ref: e1401928
Ref: mpi4py MPI Compute_dims-Footnote-1402289
Ref: mpi4py MPI Compute_dims-Footnote-2402350
Ref: mpi4py MPI Compute_dims-Footnote-3402411
Ref: mpi4py MPI Compute_dims-Footnote-4402472
Node: mpi4py MPI Detach_buffer402533
Ref: reference/mpi4py MPI Detach_buffer doc402667
Ref: 40b402667
Ref: reference/mpi4py MPI Detach_buffer mpi4py-mpi-detach-buffer402667
Ref: 40c402667
Ref: reference/mpi4py MPI Detach_buffer mpi4py MPI Detach_buffer402732
Ref: e0402732
Node: mpi4py MPI Finalize402843
Ref: reference/mpi4py MPI Finalize doc402973
Ref: 40d402973
Ref: reference/mpi4py MPI Finalize mpi4py-mpi-finalize402973
Ref: 40e402973
Ref: reference/mpi4py MPI Finalize mpi4py MPI Finalize403028
Ref: 8a403028
Ref: mpi4py MPI Finalize-Footnote-1403176
Node: mpi4py MPI Free_mem403238
Ref: reference/mpi4py MPI Free_mem doc403366
Ref: 40f403366
Ref: reference/mpi4py MPI Free_mem mpi4py-mpi-free-mem403366
Ref: 410403366
Ref: reference/mpi4py MPI Free_mem mpi4py MPI Free_mem403421
Ref: d6403421
Ref: mpi4py MPI Free_mem-Footnote-1403635
Node: mpi4py MPI Get_address403697
Ref: reference/mpi4py MPI Get_address doc403832
Ref: 411403832
Ref: reference/mpi4py MPI Get_address mpi4py-mpi-get-address403832
Ref: 412403832
Ref: reference/mpi4py MPI Get_address mpi4py MPI Get_address403893
Ref: d7403893
Ref: mpi4py MPI Get_address-Footnote-1404149
Node: mpi4py MPI Get_error_class404210
Ref: reference/mpi4py MPI Get_error_class doc404353
Ref: 413404353
Ref: reference/mpi4py MPI Get_error_class mpi4py-mpi-get-error-class404353
Ref: 414404353
Ref: reference/mpi4py MPI Get_error_class mpi4py MPI Get_error_class404422
Ref: da404422
Ref: mpi4py MPI Get_error_class-Footnote-1404639
Ref: mpi4py MPI Get_error_class-Footnote-2404700
Node: mpi4py MPI Get_error_string404761
Ref: reference/mpi4py MPI Get_error_string doc404912
Ref: 415404912
Ref: reference/mpi4py MPI Get_error_string mpi4py-mpi-get-error-string404912
Ref: 416404912
Ref: reference/mpi4py MPI Get_error_string mpi4py MPI Get_error_string404983
Ref: db404983
Ref: mpi4py MPI Get_error_string-Footnote-1405223
Ref: mpi4py MPI Get_error_string-Footnote-2405284
Node: mpi4py MPI Get_library_version405344
Ref: reference/mpi4py MPI Get_library_version doc405498
Ref: 417405498
Ref: reference/mpi4py MPI Get_library_version mpi4py-mpi-get-library-version405498
Ref: 418405498
Ref: reference/mpi4py MPI Get_library_version mpi4py MPI Get_library_version405575
Ref: d2405575
Ref: mpi4py MPI Get_library_version-Footnote-1405738
Node: mpi4py MPI Get_processor_name405798
Ref: reference/mpi4py MPI Get_processor_name doc405947
Ref: 419405947
Ref: reference/mpi4py MPI Get_processor_name mpi4py-mpi-get-processor-name405947
Ref: 41a405947
Ref: reference/mpi4py MPI Get_processor_name mpi4py MPI Get_processor_name406022
Ref: 8f406022
Ref: mpi4py MPI Get_processor_name-Footnote-1406180
Node: mpi4py MPI Get_version406240
Ref: reference/mpi4py MPI Get_version doc406374
Ref: 41b406374
Ref: reference/mpi4py MPI Get_version mpi4py-mpi-get-version406374
Ref: 41c406374
Ref: reference/mpi4py MPI Get_version mpi4py MPI Get_version406435
Ref: 8e406435
Ref: mpi4py MPI Get_version-Footnote-1406682
Ref: mpi4py MPI Get_version-Footnote-2406743
Node: mpi4py MPI Init406804
Ref: reference/mpi4py MPI Init doc406931
Ref: 41d406931
Ref: reference/mpi4py MPI Init mpi4py-mpi-init406931
Ref: 41e406931
Ref: reference/mpi4py MPI Init mpi4py MPI Init406978
Ref: 88406978
Ref: mpi4py MPI Init-Footnote-1407123
Node: mpi4py MPI Init_thread407185
Ref: reference/mpi4py MPI Init_thread doc407313
Ref: 41f407313
Ref: reference/mpi4py MPI Init_thread mpi4py-mpi-init-thread407313
Ref: 420407313
Ref: reference/mpi4py MPI Init_thread mpi4py MPI Init_thread407374
Ref: 89407374
Ref: mpi4py MPI Init_thread-Footnote-1407596
Ref: mpi4py MPI Init_thread-Footnote-2407657
Node: mpi4py MPI Is_finalized407718
Ref: reference/mpi4py MPI Is_finalized doc407856
Ref: 421407856
Ref: reference/mpi4py MPI Is_finalized mpi4py-mpi-is-finalized407856
Ref: 422407856
Ref: reference/mpi4py MPI Is_finalized mpi4py MPI Is_finalized407919
Ref: 8c407919
Ref: mpi4py MPI Is_finalized-Footnote-1408083
Node: mpi4py MPI Is_initialized408145
Ref: reference/mpi4py MPI Is_initialized doc408286
Ref: 423408286
Ref: reference/mpi4py MPI Is_initialized mpi4py-mpi-is-initialized408286
Ref: 424408286
Ref: reference/mpi4py MPI Is_initialized mpi4py MPI Is_initialized408353
Ref: 8b408353
Ref: mpi4py MPI Is_initialized-Footnote-1408517
Node: mpi4py MPI Is_thread_main408579
Ref: reference/mpi4py MPI Is_thread_main doc408719
Ref: 425408719
Ref: reference/mpi4py MPI Is_thread_main mpi4py-mpi-is-thread-main408719
Ref: 426408719
Ref: reference/mpi4py MPI Is_thread_main mpi4py MPI Is_thread_main408786
Ref: d4408786
Ref: mpi4py MPI Is_thread_main-Footnote-1408983
Node: mpi4py MPI Lookup_name409045
Ref: reference/mpi4py MPI Lookup_name doc409180
Ref: 427409180
Ref: reference/mpi4py MPI Lookup_name mpi4py-mpi-lookup-name409180
Ref: 428409180
Ref: reference/mpi4py MPI Lookup_name mpi4py MPI Lookup_name409241
Ref: 6c409241
Ref: mpi4py MPI Lookup_name-Footnote-1409525
Ref: mpi4py MPI Lookup_name-Footnote-2409585
Node: mpi4py MPI Open_port409645
Ref: reference/mpi4py MPI Open_port doc409774
Ref: 429409774
Ref: reference/mpi4py MPI Open_port mpi4py-mpi-open-port409774
Ref: 42a409774
Ref: reference/mpi4py MPI Open_port mpi4py MPI Open_port409831
Ref: 69409831
Ref: mpi4py MPI Open_port-Footnote-1410102
Node: mpi4py MPI Pcontrol410162
Ref: reference/mpi4py MPI Pcontrol doc410292
Ref: 42b410292
Ref: reference/mpi4py MPI Pcontrol mpi4py-mpi-pcontrol410292
Ref: 42c410292
Ref: reference/mpi4py MPI Pcontrol mpi4py MPI Pcontrol410347
Ref: e3410347
Ref: mpi4py MPI Pcontrol-Footnote-1410522
Ref: mpi4py MPI Pcontrol-Footnote-2410583
Node: mpi4py MPI Publish_name410645
Ref: reference/mpi4py MPI Publish_name doc410778
Ref: 42d410778
Ref: reference/mpi4py MPI Publish_name mpi4py-mpi-publish-name410778
Ref: 42e410778
Ref: reference/mpi4py MPI Publish_name mpi4py MPI Publish_name410841
Ref: 6a410841
Ref: mpi4py MPI Publish_name-Footnote-1411171
Ref: mpi4py MPI Publish_name-Footnote-2411231
Ref: mpi4py MPI Publish_name-Footnote-3411291
Node: mpi4py MPI Query_thread411353
Ref: reference/mpi4py MPI Query_thread doc411494
Ref: 42f411494
Ref: reference/mpi4py MPI Query_thread mpi4py-mpi-query-thread411494
Ref: 430411494
Ref: reference/mpi4py MPI Query_thread mpi4py MPI Query_thread411557
Ref: d3411557
Ref: mpi4py MPI Query_thread-Footnote-1411731
Node: mpi4py MPI Register_datarep411792
Ref: reference/mpi4py MPI Register_datarep doc411935
Ref: 431411935
Ref: reference/mpi4py MPI Register_datarep mpi4py-mpi-register-datarep411935
Ref: 432411935
Ref: reference/mpi4py MPI Register_datarep mpi4py MPI Register_datarep412006
Ref: e2412006
Ref: mpi4py MPI Register_datarep-Footnote-1412761
Ref: mpi4py MPI Register_datarep-Footnote-2412821
Ref: mpi4py MPI Register_datarep-Footnote-3412882
Ref: mpi4py MPI Register_datarep-Footnote-4412943
Ref: mpi4py MPI Register_datarep-Footnote-5413005
Ref: mpi4py MPI Register_datarep-Footnote-6413066
Ref: mpi4py MPI Register_datarep-Footnote-7413127
Ref: mpi4py MPI Register_datarep-Footnote-8413189
Ref: mpi4py MPI Register_datarep-Footnote-9413250
Node: mpi4py MPI Unpublish_name413312
Ref: reference/mpi4py MPI Unpublish_name doc413448
Ref: 433413448
Ref: reference/mpi4py MPI Unpublish_name mpi4py-mpi-unpublish-name413448
Ref: 434413448
Ref: reference/mpi4py MPI Unpublish_name mpi4py MPI Unpublish_name413515
Ref: 6f413515
Ref: mpi4py MPI Unpublish_name-Footnote-1413849
Ref: mpi4py MPI Unpublish_name-Footnote-2413909
Ref: mpi4py MPI Unpublish_name-Footnote-3413969
Node: mpi4py MPI Wtick414031
Ref: reference/mpi4py MPI Wtick doc414156
Ref: 435414156
Ref: reference/mpi4py MPI Wtick mpi4py-mpi-wtick414156
Ref: 436414156
Ref: reference/mpi4py MPI Wtick mpi4py MPI Wtick414205
Ref: 93414205
Ref: mpi4py MPI Wtick-Footnote-1414353
Node: mpi4py MPI Wtime414416
Ref: reference/mpi4py MPI Wtime doc414537
Ref: 437414537
Ref: reference/mpi4py MPI Wtime mpi4py-mpi-wtime414537
Ref: 438414537
Ref: reference/mpi4py MPI Wtime mpi4py MPI Wtime414586
Ref: 92414586
Ref: mpi4py MPI Wtime-Footnote-1414740
Node: mpi4py MPI get_vendor414803
Ref: reference/mpi4py MPI get_vendor doc414928
Ref: 439414928
Ref: reference/mpi4py MPI get_vendor mpi4py-mpi-get-vendor414928
Ref: 43a414928
Ref: reference/mpi4py MPI get_vendor mpi4py MPI get_vendor414987
Ref: e4414987
Ref: mpi4py MPI get_vendor-Footnote-1438887
Ref: mpi4py MPI get_vendor-Footnote-2438947
Ref: mpi4py MPI get_vendor-Footnote-3439008
Ref: mpi4py MPI get_vendor-Footnote-4439069
Ref: mpi4py MPI get_vendor-Footnote-5439130
Ref: mpi4py MPI get_vendor-Footnote-6439191
Ref: mpi4py MPI get_vendor-Footnote-7439252
Ref: mpi4py MPI get_vendor-Footnote-8439313
Ref: mpi4py MPI get_vendor-Footnote-9439374
Ref: mpi4py MPI get_vendor-Footnote-10439435
Ref: mpi4py MPI get_vendor-Footnote-11439497
Ref: mpi4py MPI get_vendor-Footnote-12439559
Ref: mpi4py MPI get_vendor-Footnote-13439621
Ref: mpi4py MPI get_vendor-Footnote-14439683
Ref: mpi4py MPI get_vendor-Footnote-15439745
Ref: mpi4py MPI get_vendor-Footnote-16439807
Ref: mpi4py MPI get_vendor-Footnote-17439869
Ref: mpi4py MPI get_vendor-Footnote-18439931
Ref: mpi4py MPI get_vendor-Footnote-19439993
Ref: mpi4py MPI get_vendor-Footnote-20440055
Ref: mpi4py MPI get_vendor-Footnote-21440117
Ref: mpi4py MPI get_vendor-Footnote-22440179
Ref: mpi4py MPI get_vendor-Footnote-23440241
Ref: mpi4py MPI get_vendor-Footnote-24440303
Ref: mpi4py MPI get_vendor-Footnote-25440365
Ref: mpi4py MPI get_vendor-Footnote-26440427
Ref: mpi4py MPI get_vendor-Footnote-27440489
Ref: mpi4py MPI get_vendor-Footnote-28440551
Ref: mpi4py MPI get_vendor-Footnote-29440613
Ref: mpi4py MPI get_vendor-Footnote-30440675
Ref: mpi4py MPI get_vendor-Footnote-31440737
Ref: mpi4py MPI get_vendor-Footnote-32440799
Ref: mpi4py MPI get_vendor-Footnote-33440861
Ref: mpi4py MPI get_vendor-Footnote-34440923
Ref: mpi4py MPI get_vendor-Footnote-35440985
Ref: mpi4py MPI get_vendor-Footnote-36441047
Ref: mpi4py MPI get_vendor-Footnote-37441109
Ref: mpi4py MPI get_vendor-Footnote-38441171
Ref: mpi4py MPI get_vendor-Footnote-39441233
Ref: mpi4py MPI get_vendor-Footnote-40441295
Ref: mpi4py MPI get_vendor-Footnote-41441357
Ref: mpi4py MPI get_vendor-Footnote-42441419
Ref: mpi4py MPI get_vendor-Footnote-43441481
Ref: mpi4py MPI get_vendor-Footnote-44441543
Ref: mpi4py MPI get_vendor-Footnote-45441605
Ref: mpi4py MPI get_vendor-Footnote-46441667
Ref: mpi4py MPI get_vendor-Footnote-47441729
Ref: mpi4py MPI get_vendor-Footnote-48441791
Ref: mpi4py MPI get_vendor-Footnote-49441853
Ref: mpi4py MPI get_vendor-Footnote-50441915
Ref: mpi4py MPI get_vendor-Footnote-51441977
Ref: mpi4py MPI get_vendor-Footnote-52442039
Ref: mpi4py MPI get_vendor-Footnote-53442101
Ref: mpi4py MPI get_vendor-Footnote-54442163
Ref: mpi4py MPI get_vendor-Footnote-55442225
Ref: mpi4py MPI get_vendor-Footnote-56442287
Ref: mpi4py MPI get_vendor-Footnote-57442349
Ref: mpi4py MPI get_vendor-Footnote-58442411
Ref: mpi4py MPI get_vendor-Footnote-59442473
Ref: mpi4py MPI get_vendor-Footnote-60442535
Ref: mpi4py MPI get_vendor-Footnote-61442597
Ref: mpi4py MPI get_vendor-Footnote-62442659
Ref: mpi4py MPI get_vendor-Footnote-63442721
Ref: mpi4py MPI get_vendor-Footnote-64442783
Ref: mpi4py MPI get_vendor-Footnote-65442845
Ref: mpi4py MPI get_vendor-Footnote-66442907
Ref: mpi4py MPI get_vendor-Footnote-67442969
Ref: mpi4py MPI get_vendor-Footnote-68443031
Ref: mpi4py MPI get_vendor-Footnote-69443093
Ref: mpi4py MPI get_vendor-Footnote-70443155
Ref: mpi4py MPI get_vendor-Footnote-71443217
Ref: mpi4py MPI get_vendor-Footnote-72443279
Ref: mpi4py MPI get_vendor-Footnote-73443341
Ref: mpi4py MPI get_vendor-Footnote-74443403
Ref: mpi4py MPI get_vendor-Footnote-75443465
Ref: mpi4py MPI get_vendor-Footnote-76443527
Ref: mpi4py MPI get_vendor-Footnote-77443589
Ref: mpi4py MPI get_vendor-Footnote-78443651
Ref: mpi4py MPI get_vendor-Footnote-79443713
Ref: mpi4py MPI get_vendor-Footnote-80443775
Ref: mpi4py MPI get_vendor-Footnote-81443837
Ref: mpi4py MPI get_vendor-Footnote-82443899
Ref: mpi4py MPI get_vendor-Footnote-83443961
Ref: mpi4py MPI get_vendor-Footnote-84444023
Ref: mpi4py MPI get_vendor-Footnote-85444085
Ref: mpi4py MPI get_vendor-Footnote-86444147
Ref: mpi4py MPI get_vendor-Footnote-87444209
Ref: mpi4py MPI get_vendor-Footnote-88444271
Ref: mpi4py MPI get_vendor-Footnote-89444333
Ref: mpi4py MPI get_vendor-Footnote-90444395
Ref: mpi4py MPI get_vendor-Footnote-91444457
Ref: mpi4py MPI get_vendor-Footnote-92444519
Ref: mpi4py MPI get_vendor-Footnote-93444581
Ref: mpi4py MPI get_vendor-Footnote-94444643
Ref: mpi4py MPI get_vendor-Footnote-95444705
Ref: mpi4py MPI get_vendor-Footnote-96444767
Ref: mpi4py MPI get_vendor-Footnote-97444829
Ref: mpi4py MPI get_vendor-Footnote-98444891
Ref: mpi4py MPI get_vendor-Footnote-99444953
Ref: mpi4py MPI get_vendor-Footnote-100445015
Ref: mpi4py MPI get_vendor-Footnote-101445078
Ref: mpi4py MPI get_vendor-Footnote-102445141
Ref: mpi4py MPI get_vendor-Footnote-103445204
Ref: mpi4py MPI get_vendor-Footnote-104445267
Ref: mpi4py MPI get_vendor-Footnote-105445330
Ref: mpi4py MPI get_vendor-Footnote-106445393
Ref: mpi4py MPI get_vendor-Footnote-107445456
Ref: mpi4py MPI get_vendor-Footnote-108445519
Ref: mpi4py MPI get_vendor-Footnote-109445582
Ref: mpi4py MPI get_vendor-Footnote-110445645
Ref: mpi4py MPI get_vendor-Footnote-111445708
Ref: mpi4py MPI get_vendor-Footnote-112445771
Ref: mpi4py MPI get_vendor-Footnote-113445834
Ref: mpi4py MPI get_vendor-Footnote-114445897
Ref: mpi4py MPI get_vendor-Footnote-115445960
Ref: mpi4py MPI get_vendor-Footnote-116446023
Ref: mpi4py MPI get_vendor-Footnote-117446086
Ref: mpi4py MPI get_vendor-Footnote-118446149
Ref: mpi4py MPI get_vendor-Footnote-119446212
Ref: mpi4py MPI get_vendor-Footnote-120446275
Ref: mpi4py MPI get_vendor-Footnote-121446338
Ref: mpi4py MPI get_vendor-Footnote-122446401
Ref: mpi4py MPI get_vendor-Footnote-123446464
Ref: mpi4py MPI get_vendor-Footnote-124446527
Ref: mpi4py MPI get_vendor-Footnote-125446590
Ref: mpi4py MPI get_vendor-Footnote-126446653
Ref: mpi4py MPI get_vendor-Footnote-127446716
Ref: mpi4py MPI get_vendor-Footnote-128446779
Ref: mpi4py MPI get_vendor-Footnote-129446842
Ref: mpi4py MPI get_vendor-Footnote-130446905
Ref: mpi4py MPI get_vendor-Footnote-131446968
Ref: mpi4py MPI get_vendor-Footnote-132447031
Ref: mpi4py MPI get_vendor-Footnote-133447094
Ref: mpi4py MPI get_vendor-Footnote-134447157
Ref: mpi4py MPI get_vendor-Footnote-135447220
Ref: mpi4py MPI get_vendor-Footnote-136447283
Ref: mpi4py MPI get_vendor-Footnote-137447346
Ref: mpi4py MPI get_vendor-Footnote-138447409
Ref: mpi4py MPI get_vendor-Footnote-139447472
Ref: mpi4py MPI get_vendor-Footnote-140447535
Ref: mpi4py MPI get_vendor-Footnote-141447598
Ref: mpi4py MPI get_vendor-Footnote-142447661
Ref: mpi4py MPI get_vendor-Footnote-143447724
Ref: mpi4py MPI get_vendor-Footnote-144447787
Ref: mpi4py MPI get_vendor-Footnote-145447850
Ref: mpi4py MPI get_vendor-Footnote-146447913
Ref: mpi4py MPI get_vendor-Footnote-147447976
Ref: mpi4py MPI get_vendor-Footnote-148448039
Ref: mpi4py MPI get_vendor-Footnote-149448102
Ref: mpi4py MPI get_vendor-Footnote-150448165
Ref: mpi4py MPI get_vendor-Footnote-151448228
Ref: mpi4py MPI get_vendor-Footnote-152448291
Ref: mpi4py MPI get_vendor-Footnote-153448354
Ref: mpi4py MPI get_vendor-Footnote-154448417
Ref: mpi4py MPI get_vendor-Footnote-155448480
Ref: mpi4py MPI get_vendor-Footnote-156448543
Ref: mpi4py MPI get_vendor-Footnote-157448606
Ref: mpi4py MPI get_vendor-Footnote-158448669
Ref: mpi4py MPI get_vendor-Footnote-159448732
Ref: mpi4py MPI get_vendor-Footnote-160448795
Node: mpi4py MPI UNDEFINED448858
Ref: reference/mpi4py MPI UNDEFINED doc448988
Ref: 43b448988
Ref: reference/mpi4py MPI UNDEFINED mpi4py-mpi-undefined448988
Ref: 43c448988
Ref: reference/mpi4py MPI UNDEFINED mpi4py MPI UNDEFINED449045
Ref: e6449045
Ref: mpi4py MPI UNDEFINED-Footnote-1449162
Ref: mpi4py MPI UNDEFINED-Footnote-2449223
Node: mpi4py MPI ANY_SOURCE449284
Ref: reference/mpi4py MPI ANY_SOURCE doc449411
Ref: 43d449411
Ref: reference/mpi4py MPI ANY_SOURCE mpi4py-mpi-any-source449411
Ref: 43e449411
Ref: reference/mpi4py MPI ANY_SOURCE mpi4py MPI ANY_SOURCE449470
Ref: e7449470
Ref: mpi4py MPI ANY_SOURCE-Footnote-1449590
Ref: mpi4py MPI ANY_SOURCE-Footnote-2449651
Node: mpi4py MPI ANY_TAG449712
Ref: reference/mpi4py MPI ANY_TAG doc449839
Ref: 43f449839
Ref: reference/mpi4py MPI ANY_TAG mpi4py-mpi-any-tag449839
Ref: 440449839
Ref: reference/mpi4py MPI ANY_TAG mpi4py MPI ANY_TAG449892
Ref: e8449892
Ref: mpi4py MPI ANY_TAG-Footnote-1450003
Ref: mpi4py MPI ANY_TAG-Footnote-2450064
Node: mpi4py MPI PROC_NULL450125
Ref: reference/mpi4py MPI PROC_NULL doc450246
Ref: 441450246
Ref: reference/mpi4py MPI PROC_NULL mpi4py-mpi-proc-null450246
Ref: 442450246
Ref: reference/mpi4py MPI PROC_NULL mpi4py MPI PROC_NULL450303
Ref: e9450303
Ref: mpi4py MPI PROC_NULL-Footnote-1450420
Ref: mpi4py MPI PROC_NULL-Footnote-2450481
Node: mpi4py MPI ROOT450542
Ref: reference/mpi4py MPI ROOT doc450662
Ref: 443450662
Ref: reference/mpi4py MPI ROOT mpi4py-mpi-root450662
Ref: 444450662
Ref: reference/mpi4py MPI ROOT mpi4py MPI ROOT450709
Ref: ea450709
Ref: mpi4py MPI ROOT-Footnote-1450811
Ref: mpi4py MPI ROOT-Footnote-2450872
Node: mpi4py MPI BOTTOM450933
Ref: reference/mpi4py MPI BOTTOM doc451052
Ref: 445451052
Ref: reference/mpi4py MPI BOTTOM mpi4py-mpi-bottom451052
Ref: 446451052
Ref: reference/mpi4py MPI BOTTOM mpi4py MPI BOTTOM451103
Ref: eb451103
Node: mpi4py MPI IN_PLACE451181
Ref: reference/mpi4py MPI IN_PLACE doc451310
Ref: 447451310
Ref: reference/mpi4py MPI IN_PLACE mpi4py-mpi-in-place451310
Ref: 448451310
Ref: reference/mpi4py MPI IN_PLACE mpi4py MPI IN_PLACE451365
Ref: ec451365
Node: mpi4py MPI KEYVAL_INVALID451451
Ref: reference/mpi4py MPI KEYVAL_INVALID doc451580
Ref: 449451580
Ref: reference/mpi4py MPI KEYVAL_INVALID mpi4py-mpi-keyval-invalid451580
Ref: 44a451580
Ref: reference/mpi4py MPI KEYVAL_INVALID mpi4py MPI KEYVAL_INVALID451647
Ref: ed451647
Ref: mpi4py MPI KEYVAL_INVALID-Footnote-1451779
Ref: mpi4py MPI KEYVAL_INVALID-Footnote-2451840
Node: mpi4py MPI TAG_UB451901
Ref: reference/mpi4py MPI TAG_UB doc452026
Ref: 44b452026
Ref: reference/mpi4py MPI TAG_UB mpi4py-mpi-tag-ub452026
Ref: 44c452026
Ref: reference/mpi4py MPI TAG_UB mpi4py MPI TAG_UB452077
Ref: ee452077
Ref: mpi4py MPI TAG_UB-Footnote-1452185
Ref: mpi4py MPI TAG_UB-Footnote-2452246
Node: mpi4py MPI HOST452307
Ref: reference/mpi4py MPI HOST doc452420
Ref: 44d452420
Ref: reference/mpi4py MPI HOST mpi4py-mpi-host452420
Ref: 44e452420
Ref: reference/mpi4py MPI HOST mpi4py MPI HOST452467
Ref: ef452467
Ref: mpi4py MPI HOST-Footnote-1452569
Ref: mpi4py MPI HOST-Footnote-2452630
Node: mpi4py MPI IO452691
Ref: reference/mpi4py MPI IO doc452813
Ref: 44f452813
Ref: reference/mpi4py MPI IO mpi4py-mpi-io452813
Ref: 450452813
Ref: reference/mpi4py MPI IO mpi4py MPI IO452856
Ref: f0452856
Ref: mpi4py MPI IO-Footnote-1452952
Ref: mpi4py MPI IO-Footnote-2453013
Node: mpi4py MPI WTIME_IS_GLOBAL453074
Ref: reference/mpi4py MPI WTIME_IS_GLOBAL doc453205
Ref: 451453205
Ref: reference/mpi4py MPI WTIME_IS_GLOBAL mpi4py-mpi-wtime-is-global453205
Ref: 452453205
Ref: reference/mpi4py MPI WTIME_IS_GLOBAL mpi4py MPI WTIME_IS_GLOBAL453274
Ref: f1453274
Ref: mpi4py MPI WTIME_IS_GLOBAL-Footnote-1453409
Ref: mpi4py MPI WTIME_IS_GLOBAL-Footnote-2453470
Node: mpi4py MPI UNIVERSE_SIZE453531
Ref: reference/mpi4py MPI UNIVERSE_SIZE doc453666
Ref: 453453666
Ref: reference/mpi4py MPI UNIVERSE_SIZE mpi4py-mpi-universe-size453666
Ref: 454453666
Ref: reference/mpi4py MPI UNIVERSE_SIZE mpi4py MPI UNIVERSE_SIZE453731
Ref: f2453731
Ref: mpi4py MPI UNIVERSE_SIZE-Footnote-1453860
Ref: mpi4py MPI UNIVERSE_SIZE-Footnote-2453921
Node: mpi4py MPI APPNUM453982
Ref: reference/mpi4py MPI APPNUM doc454114
Ref: 455454114
Ref: reference/mpi4py MPI APPNUM mpi4py-mpi-appnum454114
Ref: 456454114
Ref: reference/mpi4py MPI APPNUM mpi4py MPI APPNUM454165
Ref: f3454165
Ref: mpi4py MPI APPNUM-Footnote-1454273
Ref: mpi4py MPI APPNUM-Footnote-2454334
Node: mpi4py MPI LASTUSEDCODE454395
Ref: reference/mpi4py MPI LASTUSEDCODE doc454522
Ref: 457454522
Ref: reference/mpi4py MPI LASTUSEDCODE mpi4py-mpi-lastusedcode454522
Ref: 458454522
Ref: reference/mpi4py MPI LASTUSEDCODE mpi4py MPI LASTUSEDCODE454585
Ref: f4454585
Ref: mpi4py MPI LASTUSEDCODE-Footnote-1454711
Ref: mpi4py MPI LASTUSEDCODE-Footnote-2454772
Node: mpi4py MPI WIN_BASE454833
Ref: reference/mpi4py MPI WIN_BASE doc454962
Ref: 459454962
Ref: reference/mpi4py MPI WIN_BASE mpi4py-mpi-win-base454962
Ref: 45a454962
Ref: reference/mpi4py MPI WIN_BASE mpi4py MPI WIN_BASE455017
Ref: f5455017
Ref: mpi4py MPI WIN_BASE-Footnote-1455131
Ref: mpi4py MPI WIN_BASE-Footnote-2455192
Node: mpi4py MPI WIN_SIZE455253
Ref: reference/mpi4py MPI WIN_SIZE doc455383
Ref: 45b455383
Ref: reference/mpi4py MPI WIN_SIZE mpi4py-mpi-win-size455383
Ref: 45c455383
Ref: reference/mpi4py MPI WIN_SIZE mpi4py MPI WIN_SIZE455438
Ref: f6455438
Ref: mpi4py MPI WIN_SIZE-Footnote-1455552
Ref: mpi4py MPI WIN_SIZE-Footnote-2455613
Node: mpi4py MPI WIN_DISP_UNIT455674
Ref: reference/mpi4py MPI WIN_DISP_UNIT doc455813
Ref: 45d455813
Ref: reference/mpi4py MPI WIN_DISP_UNIT mpi4py-mpi-win-disp-unit455813
Ref: 45e455813
Ref: reference/mpi4py MPI WIN_DISP_UNIT mpi4py MPI WIN_DISP_UNIT455878
Ref: f7455878
Ref: mpi4py MPI WIN_DISP_UNIT-Footnote-1456007
Ref: mpi4py MPI WIN_DISP_UNIT-Footnote-2456068
Node: mpi4py MPI WIN_CREATE_FLAVOR456129
Ref: reference/mpi4py MPI WIN_CREATE_FLAVOR doc456270
Ref: 45f456270
Ref: reference/mpi4py MPI WIN_CREATE_FLAVOR mpi4py-mpi-win-create-flavor456270
Ref: 460456270
Ref: reference/mpi4py MPI WIN_CREATE_FLAVOR mpi4py MPI WIN_CREATE_FLAVOR456343
Ref: f8456343
Ref: mpi4py MPI WIN_CREATE_FLAVOR-Footnote-1456484
Ref: mpi4py MPI WIN_CREATE_FLAVOR-Footnote-2456545
Node: mpi4py MPI WIN_FLAVOR456606
Ref: reference/mpi4py MPI WIN_FLAVOR doc456743
Ref: 461456743
Ref: reference/mpi4py MPI WIN_FLAVOR mpi4py-mpi-win-flavor456743
Ref: 462456743
Ref: reference/mpi4py MPI WIN_FLAVOR mpi4py MPI WIN_FLAVOR456802
Ref: f9456802
Ref: mpi4py MPI WIN_FLAVOR-Footnote-1456922
Ref: mpi4py MPI WIN_FLAVOR-Footnote-2456983
Node: mpi4py MPI WIN_MODEL457044
Ref: reference/mpi4py MPI WIN_MODEL doc457171
Ref: 463457171
Ref: reference/mpi4py MPI WIN_MODEL mpi4py-mpi-win-model457171
Ref: 464457171
Ref: reference/mpi4py MPI WIN_MODEL mpi4py MPI WIN_MODEL457228
Ref: fa457228
Ref: mpi4py MPI WIN_MODEL-Footnote-1457345
Ref: mpi4py MPI WIN_MODEL-Footnote-2457406
Node: mpi4py MPI SUCCESS457467
Ref: reference/mpi4py MPI SUCCESS doc457596
Ref: 465457596
Ref: reference/mpi4py MPI SUCCESS mpi4py-mpi-success457596
Ref: 466457596
Ref: reference/mpi4py MPI SUCCESS mpi4py MPI SUCCESS457649
Ref: fb457649
Ref: mpi4py MPI SUCCESS-Footnote-1457760
Ref: mpi4py MPI SUCCESS-Footnote-2457821
Node: mpi4py MPI ERR_LASTCODE457882
Ref: reference/mpi4py MPI ERR_LASTCODE doc458010
Ref: 467458010
Ref: reference/mpi4py MPI ERR_LASTCODE mpi4py-mpi-err-lastcode458010
Ref: 468458010
Ref: reference/mpi4py MPI ERR_LASTCODE mpi4py MPI ERR_LASTCODE458073
Ref: fc458073
Ref: mpi4py MPI ERR_LASTCODE-Footnote-1458199
Ref: mpi4py MPI ERR_LASTCODE-Footnote-2458260
Node: mpi4py MPI ERR_COMM458321
Ref: reference/mpi4py MPI ERR_COMM doc458451
Ref: 469458451
Ref: reference/mpi4py MPI ERR_COMM mpi4py-mpi-err-comm458451
Ref: 46a458451
Ref: reference/mpi4py MPI ERR_COMM mpi4py MPI ERR_COMM458506
Ref: fd458506
Ref: mpi4py MPI ERR_COMM-Footnote-1458620
Ref: mpi4py MPI ERR_COMM-Footnote-2458681
Node: mpi4py MPI ERR_GROUP458742
Ref: reference/mpi4py MPI ERR_GROUP doc458868
Ref: 46b458868
Ref: reference/mpi4py MPI ERR_GROUP mpi4py-mpi-err-group458868
Ref: 46c458868
Ref: reference/mpi4py MPI ERR_GROUP mpi4py MPI ERR_GROUP458925
Ref: fe458925
Ref: mpi4py MPI ERR_GROUP-Footnote-1459042
Ref: mpi4py MPI ERR_GROUP-Footnote-2459103
Node: mpi4py MPI ERR_TYPE459164
Ref: reference/mpi4py MPI ERR_TYPE doc459293
Ref: 46d459293
Ref: reference/mpi4py MPI ERR_TYPE mpi4py-mpi-err-type459293
Ref: 46e459293
Ref: reference/mpi4py MPI ERR_TYPE mpi4py MPI ERR_TYPE459348
Ref: ff459348
Ref: mpi4py MPI ERR_TYPE-Footnote-1459462
Ref: mpi4py MPI ERR_TYPE-Footnote-2459523
Node: mpi4py MPI ERR_REQUEST459584
Ref: reference/mpi4py MPI ERR_REQUEST doc459710
Ref: 46f459710
Ref: reference/mpi4py MPI ERR_REQUEST mpi4py-mpi-err-request459710
Ref: 470459710
Ref: reference/mpi4py MPI ERR_REQUEST mpi4py MPI ERR_REQUEST459771
Ref: 100459771
Ref: mpi4py MPI ERR_REQUEST-Footnote-1459894
Ref: mpi4py MPI ERR_REQUEST-Footnote-2459955
Node: mpi4py MPI ERR_OP460016
Ref: reference/mpi4py MPI ERR_OP doc460144
Ref: 471460144
Ref: reference/mpi4py MPI ERR_OP mpi4py-mpi-err-op460144
Ref: 472460144
Ref: reference/mpi4py MPI ERR_OP mpi4py MPI ERR_OP460195
Ref: 101460195
Ref: mpi4py MPI ERR_OP-Footnote-1460303
Ref: mpi4py MPI ERR_OP-Footnote-2460364
Node: mpi4py MPI ERR_BUFFER460425
Ref: reference/mpi4py MPI ERR_BUFFER doc460551
Ref: 473460551
Ref: reference/mpi4py MPI ERR_BUFFER mpi4py-mpi-err-buffer460551
Ref: 474460551
Ref: reference/mpi4py MPI ERR_BUFFER mpi4py MPI ERR_BUFFER460610
Ref: 102460610
Ref: mpi4py MPI ERR_BUFFER-Footnote-1460730
Ref: mpi4py MPI ERR_BUFFER-Footnote-2460791
Node: mpi4py MPI ERR_COUNT460852
Ref: reference/mpi4py MPI ERR_COUNT doc460979
Ref: 475460979
Ref: reference/mpi4py MPI ERR_COUNT mpi4py-mpi-err-count460979
Ref: 476460979
Ref: reference/mpi4py MPI ERR_COUNT mpi4py MPI ERR_COUNT461036
Ref: 103461036
Ref: mpi4py MPI ERR_COUNT-Footnote-1461153
Ref: mpi4py MPI ERR_COUNT-Footnote-2461214
Node: mpi4py MPI ERR_TAG461275
Ref: reference/mpi4py MPI ERR_TAG doc461400
Ref: 477461400
Ref: reference/mpi4py MPI ERR_TAG mpi4py-mpi-err-tag461400
Ref: 478461400
Ref: reference/mpi4py MPI ERR_TAG mpi4py MPI ERR_TAG461453
Ref: 104461453
Ref: mpi4py MPI ERR_TAG-Footnote-1461564
Ref: mpi4py MPI ERR_TAG-Footnote-2461625
Node: mpi4py MPI ERR_RANK461686
Ref: reference/mpi4py MPI ERR_RANK doc461810
Ref: 479461810
Ref: reference/mpi4py MPI ERR_RANK mpi4py-mpi-err-rank461810
Ref: 47a461810
Ref: reference/mpi4py MPI ERR_RANK mpi4py MPI ERR_RANK461865
Ref: 105461865
Ref: mpi4py MPI ERR_RANK-Footnote-1461979
Ref: mpi4py MPI ERR_RANK-Footnote-2462040
Node: mpi4py MPI ERR_ROOT462101
Ref: reference/mpi4py MPI ERR_ROOT doc462230
Ref: 47b462230
Ref: reference/mpi4py MPI ERR_ROOT mpi4py-mpi-err-root462230
Ref: 47c462230
Ref: reference/mpi4py MPI ERR_ROOT mpi4py MPI ERR_ROOT462285
Ref: 106462285
Ref: mpi4py MPI ERR_ROOT-Footnote-1462399
Ref: mpi4py MPI ERR_ROOT-Footnote-2462460
Node: mpi4py MPI ERR_TRUNCATE462521
Ref: reference/mpi4py MPI ERR_TRUNCATE doc462655
Ref: 47d462655
Ref: reference/mpi4py MPI ERR_TRUNCATE mpi4py-mpi-err-truncate462655
Ref: 47e462655
Ref: reference/mpi4py MPI ERR_TRUNCATE mpi4py MPI ERR_TRUNCATE462718
Ref: 107462718
Ref: mpi4py MPI ERR_TRUNCATE-Footnote-1462844
Ref: mpi4py MPI ERR_TRUNCATE-Footnote-2462905
Node: mpi4py MPI ERR_IN_STATUS462966
Ref: reference/mpi4py MPI ERR_IN_STATUS doc463103
Ref: 47f463103
Ref: reference/mpi4py MPI ERR_IN_STATUS mpi4py-mpi-err-in-status463103
Ref: 480463103
Ref: reference/mpi4py MPI ERR_IN_STATUS mpi4py MPI ERR_IN_STATUS463168
Ref: 108463168
Ref: mpi4py MPI ERR_IN_STATUS-Footnote-1463297
Ref: mpi4py MPI ERR_IN_STATUS-Footnote-2463358
Node: mpi4py MPI ERR_PENDING463419
Ref: reference/mpi4py MPI ERR_PENDING doc463556
Ref: 481463556
Ref: reference/mpi4py MPI ERR_PENDING mpi4py-mpi-err-pending463556
Ref: 482463556
Ref: reference/mpi4py MPI ERR_PENDING mpi4py MPI ERR_PENDING463617
Ref: 109463617
Ref: mpi4py MPI ERR_PENDING-Footnote-1463740
Ref: mpi4py MPI ERR_PENDING-Footnote-2463801
Node: mpi4py MPI ERR_TOPOLOGY463862
Ref: reference/mpi4py MPI ERR_TOPOLOGY doc463994
Ref: 483463994
Ref: reference/mpi4py MPI ERR_TOPOLOGY mpi4py-mpi-err-topology463994
Ref: 484463994
Ref: reference/mpi4py MPI ERR_TOPOLOGY mpi4py MPI ERR_TOPOLOGY464057
Ref: 10a464057
Ref: mpi4py MPI ERR_TOPOLOGY-Footnote-1464183
Ref: mpi4py MPI ERR_TOPOLOGY-Footnote-2464244
Node: mpi4py MPI ERR_DIMS464305
Ref: reference/mpi4py MPI ERR_DIMS doc464433
Ref: 485464433
Ref: reference/mpi4py MPI ERR_DIMS mpi4py-mpi-err-dims464433
Ref: 486464433
Ref: reference/mpi4py MPI ERR_DIMS mpi4py MPI ERR_DIMS464488
Ref: 10b464488
Ref: mpi4py MPI ERR_DIMS-Footnote-1464602
Ref: mpi4py MPI ERR_DIMS-Footnote-2464663
Node: mpi4py MPI ERR_ARG464724
Ref: reference/mpi4py MPI ERR_ARG doc464849
Ref: 487464849
Ref: reference/mpi4py MPI ERR_ARG mpi4py-mpi-err-arg464849
Ref: 488464849
Ref: reference/mpi4py MPI ERR_ARG mpi4py MPI ERR_ARG464902
Ref: 10c464902
Ref: mpi4py MPI ERR_ARG-Footnote-1465013
Ref: mpi4py MPI ERR_ARG-Footnote-2465074
Node: mpi4py MPI ERR_OTHER465135
Ref: reference/mpi4py MPI ERR_OTHER doc465263
Ref: 489465263
Ref: reference/mpi4py MPI ERR_OTHER mpi4py-mpi-err-other465263
Ref: 48a465263
Ref: reference/mpi4py MPI ERR_OTHER mpi4py MPI ERR_OTHER465320
Ref: 10d465320
Ref: mpi4py MPI ERR_OTHER-Footnote-1465437
Ref: mpi4py MPI ERR_OTHER-Footnote-2465498
Node: mpi4py MPI ERR_UNKNOWN465559
Ref: reference/mpi4py MPI ERR_UNKNOWN doc465690
Ref: 48b465690
Ref: reference/mpi4py MPI ERR_UNKNOWN mpi4py-mpi-err-unknown465690
Ref: 48c465690
Ref: reference/mpi4py MPI ERR_UNKNOWN mpi4py MPI ERR_UNKNOWN465751
Ref: 10e465751
Ref: mpi4py MPI ERR_UNKNOWN-Footnote-1465874
Ref: mpi4py MPI ERR_UNKNOWN-Footnote-2465935
Node: mpi4py MPI ERR_INTERN465996
Ref: reference/mpi4py MPI ERR_INTERN doc466126
Ref: 48d466126
Ref: reference/mpi4py MPI ERR_INTERN mpi4py-mpi-err-intern466126
Ref: 48e466126
Ref: reference/mpi4py MPI ERR_INTERN mpi4py MPI ERR_INTERN466185
Ref: 10f466185
Ref: mpi4py MPI ERR_INTERN-Footnote-1466305
Ref: mpi4py MPI ERR_INTERN-Footnote-2466366
Node: mpi4py MPI ERR_INFO466427
Ref: reference/mpi4py MPI ERR_INFO doc466554
Ref: 48f466554
Ref: reference/mpi4py MPI ERR_INFO mpi4py-mpi-err-info466554
Ref: 490466554
Ref: reference/mpi4py MPI ERR_INFO mpi4py MPI ERR_INFO466609
Ref: 110466609
Ref: mpi4py MPI ERR_INFO-Footnote-1466723
Ref: mpi4py MPI ERR_INFO-Footnote-2466784
Node: mpi4py MPI ERR_FILE466845
Ref: reference/mpi4py MPI ERR_FILE doc466969
Ref: 491466969
Ref: reference/mpi4py MPI ERR_FILE mpi4py-mpi-err-file466969
Ref: 492466969
Ref: reference/mpi4py MPI ERR_FILE mpi4py MPI ERR_FILE467024
Ref: 111467024
Ref: mpi4py MPI ERR_FILE-Footnote-1467138
Ref: mpi4py MPI ERR_FILE-Footnote-2467199
Node: mpi4py MPI ERR_WIN467260
Ref: reference/mpi4py MPI ERR_WIN doc467386
Ref: 493467386
Ref: reference/mpi4py MPI ERR_WIN mpi4py-mpi-err-win467386
Ref: 494467386
Ref: reference/mpi4py MPI ERR_WIN mpi4py MPI ERR_WIN467441
Ref: 112467441
Ref: mpi4py MPI ERR_WIN-Footnote-1467552
Ref: mpi4py MPI ERR_WIN-Footnote-2467613
Node: mpi4py MPI ERR_KEYVAL467674
Ref: reference/mpi4py MPI ERR_KEYVAL doc467804
Ref: 495467804
Ref: reference/mpi4py MPI ERR_KEYVAL mpi4py-mpi-err-keyval467804
Ref: 496467804
Ref: reference/mpi4py MPI ERR_KEYVAL mpi4py MPI ERR_KEYVAL467865
Ref: 113467865
Ref: mpi4py MPI ERR_KEYVAL-Footnote-1467985
Ref: mpi4py MPI ERR_KEYVAL-Footnote-2468046
Node: mpi4py MPI ERR_INFO_KEY468107
Ref: reference/mpi4py MPI ERR_INFO_KEY doc468244
Ref: 497468244
Ref: reference/mpi4py MPI ERR_INFO_KEY mpi4py-mpi-err-info-key468244
Ref: 498468244
Ref: reference/mpi4py MPI ERR_INFO_KEY mpi4py MPI ERR_INFO_KEY468309
Ref: 114468309
Ref: mpi4py MPI ERR_INFO_KEY-Footnote-1468435
Ref: mpi4py MPI ERR_INFO_KEY-Footnote-2468496
Node: mpi4py MPI ERR_INFO_VALUE468557
Ref: reference/mpi4py MPI ERR_INFO_VALUE doc468698
Ref: 499468698
Ref: reference/mpi4py MPI ERR_INFO_VALUE mpi4py-mpi-err-info-value468698
Ref: 49a468698
Ref: reference/mpi4py MPI ERR_INFO_VALUE mpi4py MPI ERR_INFO_VALUE468767
Ref: 115468767
Ref: mpi4py MPI ERR_INFO_VALUE-Footnote-1468899
Ref: mpi4py MPI ERR_INFO_VALUE-Footnote-2468960
Node: mpi4py MPI ERR_INFO_NOKEY469021
Ref: reference/mpi4py MPI ERR_INFO_NOKEY doc469160
Ref: 49b469160
Ref: reference/mpi4py MPI ERR_INFO_NOKEY mpi4py-mpi-err-info-nokey469160
Ref: 49c469160
Ref: reference/mpi4py MPI ERR_INFO_NOKEY mpi4py MPI ERR_INFO_NOKEY469229
Ref: 116469229
Ref: mpi4py MPI ERR_INFO_NOKEY-Footnote-1469361
Ref: mpi4py MPI ERR_INFO_NOKEY-Footnote-2469422
Node: mpi4py MPI ERR_ACCESS469483
Ref: reference/mpi4py MPI ERR_ACCESS doc469617
Ref: 49d469617
Ref: reference/mpi4py MPI ERR_ACCESS mpi4py-mpi-err-access469617
Ref: 49e469617
Ref: reference/mpi4py MPI ERR_ACCESS mpi4py MPI ERR_ACCESS469678
Ref: 117469678
Ref: mpi4py MPI ERR_ACCESS-Footnote-1469798
Ref: mpi4py MPI ERR_ACCESS-Footnote-2469859
Node: mpi4py MPI ERR_AMODE469920
Ref: reference/mpi4py MPI ERR_AMODE doc470052
Ref: 49f470052
Ref: reference/mpi4py MPI ERR_AMODE mpi4py-mpi-err-amode470052
Ref: 4a0470052
Ref: reference/mpi4py MPI ERR_AMODE mpi4py MPI ERR_AMODE470111
Ref: 118470111
Ref: mpi4py MPI ERR_AMODE-Footnote-1470228
Ref: mpi4py MPI ERR_AMODE-Footnote-2470289
Node: mpi4py MPI ERR_BAD_FILE470350
Ref: reference/mpi4py MPI ERR_BAD_FILE doc470487
Ref: 4a1470487
Ref: reference/mpi4py MPI ERR_BAD_FILE mpi4py-mpi-err-bad-file470487
Ref: 4a2470487
Ref: reference/mpi4py MPI ERR_BAD_FILE mpi4py MPI ERR_BAD_FILE470552
Ref: 119470552
Ref: mpi4py MPI ERR_BAD_FILE-Footnote-1470678
Ref: mpi4py MPI ERR_BAD_FILE-Footnote-2470739
Node: mpi4py MPI ERR_FILE_EXISTS470800
Ref: reference/mpi4py MPI ERR_FILE_EXISTS doc470943
Ref: 4a3470943
Ref: reference/mpi4py MPI ERR_FILE_EXISTS mpi4py-mpi-err-file-exists470943
Ref: 4a4470943
Ref: reference/mpi4py MPI ERR_FILE_EXISTS mpi4py MPI ERR_FILE_EXISTS471014
Ref: 11a471014
Ref: mpi4py MPI ERR_FILE_EXISTS-Footnote-1471149
Ref: mpi4py MPI ERR_FILE_EXISTS-Footnote-2471210
Node: mpi4py MPI ERR_FILE_IN_USE471271
Ref: reference/mpi4py MPI ERR_FILE_IN_USE doc471414
Ref: 4a5471414
Ref: reference/mpi4py MPI ERR_FILE_IN_USE mpi4py-mpi-err-file-in-use471414
Ref: 4a6471414
Ref: reference/mpi4py MPI ERR_FILE_IN_USE mpi4py MPI ERR_FILE_IN_USE471485
Ref: 11b471485
Ref: mpi4py MPI ERR_FILE_IN_USE-Footnote-1471620
Ref: mpi4py MPI ERR_FILE_IN_USE-Footnote-2471681
Node: mpi4py MPI ERR_NO_SPACE471742
Ref: reference/mpi4py MPI ERR_NO_SPACE doc471886
Ref: 4a7471886
Ref: reference/mpi4py MPI ERR_NO_SPACE mpi4py-mpi-err-no-space471886
Ref: 4a8471886
Ref: reference/mpi4py MPI ERR_NO_SPACE mpi4py MPI ERR_NO_SPACE471951
Ref: 11c471951
Ref: mpi4py MPI ERR_NO_SPACE-Footnote-1472077
Ref: mpi4py MPI ERR_NO_SPACE-Footnote-2472138
Node: mpi4py MPI ERR_NO_SUCH_FILE472199
Ref: reference/mpi4py MPI ERR_NO_SUCH_FILE doc472334
Ref: 4a9472334
Ref: reference/mpi4py MPI ERR_NO_SUCH_FILE mpi4py-mpi-err-no-such-file472334
Ref: 4aa472334
Ref: reference/mpi4py MPI ERR_NO_SUCH_FILE mpi4py MPI ERR_NO_SUCH_FILE472407
Ref: 11d472407
Ref: mpi4py MPI ERR_NO_SUCH_FILE-Footnote-1472545
Ref: mpi4py MPI ERR_NO_SUCH_FILE-Footnote-2472606
Node: mpi4py MPI ERR_IO472667
Ref: reference/mpi4py MPI ERR_IO doc472803
Ref: 4ab472803
Ref: reference/mpi4py MPI ERR_IO mpi4py-mpi-err-io472803
Ref: 4ac472803
Ref: reference/mpi4py MPI ERR_IO mpi4py MPI ERR_IO472856
Ref: 11e472856
Ref: mpi4py MPI ERR_IO-Footnote-1472964
Ref: mpi4py MPI ERR_IO-Footnote-2473025
Node: mpi4py MPI ERR_READ_ONLY473086
Ref: reference/mpi4py MPI ERR_READ_ONLY doc473220
Ref: 4ad473220
Ref: reference/mpi4py MPI ERR_READ_ONLY mpi4py-mpi-err-read-only473220
Ref: 4ae473220
Ref: reference/mpi4py MPI ERR_READ_ONLY mpi4py MPI ERR_READ_ONLY473287
Ref: 11f473287
Ref: mpi4py MPI ERR_READ_ONLY-Footnote-1473416
Ref: mpi4py MPI ERR_READ_ONLY-Footnote-2473477
Node: mpi4py MPI ERR_CONVERSION473538
Ref: reference/mpi4py MPI ERR_CONVERSION doc473681
Ref: 4af473681
Ref: reference/mpi4py MPI ERR_CONVERSION mpi4py-mpi-err-conversion473681
Ref: 4b0473681
Ref: reference/mpi4py MPI ERR_CONVERSION mpi4py MPI ERR_CONVERSION473750
Ref: 120473750
Ref: mpi4py MPI ERR_CONVERSION-Footnote-1473882
Ref: mpi4py MPI ERR_CONVERSION-Footnote-2473943
Node: mpi4py MPI ERR_DUP_DATAREP474004
Ref: reference/mpi4py MPI ERR_DUP_DATAREP doc474157
Ref: 4b1474157
Ref: reference/mpi4py MPI ERR_DUP_DATAREP mpi4py-mpi-err-dup-datarep474157
Ref: 4b2474157
Ref: reference/mpi4py MPI ERR_DUP_DATAREP mpi4py MPI ERR_DUP_DATAREP474228
Ref: 121474228
Ref: mpi4py MPI ERR_DUP_DATAREP-Footnote-1474363
Ref: mpi4py MPI ERR_DUP_DATAREP-Footnote-2474424
Node: mpi4py MPI ERR_UNSUPPORTED_DATAREP474485
Ref: reference/mpi4py MPI ERR_UNSUPPORTED_DATAREP doc474649
Ref: 4b3474649
Ref: reference/mpi4py MPI ERR_UNSUPPORTED_DATAREP mpi4py-mpi-err-unsupported-datarep474649
Ref: 4b4474649
Ref: reference/mpi4py MPI ERR_UNSUPPORTED_DATAREP mpi4py MPI ERR_UNSUPPORTED_DATAREP474736
Ref: 122474736
Ref: mpi4py MPI ERR_UNSUPPORTED_DATAREP-Footnote-1474905
Ref: mpi4py MPI ERR_UNSUPPORTED_DATAREP-Footnote-2474966
Node: mpi4py MPI ERR_UNSUPPORTED_OPERATION475027
Ref: reference/mpi4py MPI ERR_UNSUPPORTED_OPERATION doc475184
Ref: 4b5475184
Ref: reference/mpi4py MPI ERR_UNSUPPORTED_OPERATION mpi4py-mpi-err-unsupported-operation475184
Ref: 4b6475184
Ref: reference/mpi4py MPI ERR_UNSUPPORTED_OPERATION mpi4py MPI ERR_UNSUPPORTED_OPERATION475275
Ref: 123475275
Ref: mpi4py MPI ERR_UNSUPPORTED_OPERATION-Footnote-1475450
Ref: mpi4py MPI ERR_UNSUPPORTED_OPERATION-Footnote-2475511
Node: mpi4py MPI ERR_NAME475572
Ref: reference/mpi4py MPI ERR_NAME doc475716
Ref: 4b7475716
Ref: reference/mpi4py MPI ERR_NAME mpi4py-mpi-err-name475716
Ref: 4b8475716
Ref: reference/mpi4py MPI ERR_NAME mpi4py MPI ERR_NAME475773
Ref: 124475773
Ref: mpi4py MPI ERR_NAME-Footnote-1475887
Ref: mpi4py MPI ERR_NAME-Footnote-2475948
Node: mpi4py MPI ERR_NO_MEM476009
Ref: reference/mpi4py MPI ERR_NO_MEM doc476140
Ref: 4b9476140
Ref: reference/mpi4py MPI ERR_NO_MEM mpi4py-mpi-err-no-mem476140
Ref: 4ba476140
Ref: reference/mpi4py MPI ERR_NO_MEM mpi4py MPI ERR_NO_MEM476201
Ref: 125476201
Ref: mpi4py MPI ERR_NO_MEM-Footnote-1476321
Ref: mpi4py MPI ERR_NO_MEM-Footnote-2476382
Node: mpi4py MPI ERR_NOT_SAME476443
Ref: reference/mpi4py MPI ERR_NOT_SAME doc476574
Ref: 4bb476574
Ref: reference/mpi4py MPI ERR_NOT_SAME mpi4py-mpi-err-not-same476574
Ref: 4bc476574
Ref: reference/mpi4py MPI ERR_NOT_SAME mpi4py MPI ERR_NOT_SAME476639
Ref: 126476639
Ref: mpi4py MPI ERR_NOT_SAME-Footnote-1476765
Ref: mpi4py MPI ERR_NOT_SAME-Footnote-2476826
Node: mpi4py MPI ERR_PORT476887
Ref: reference/mpi4py MPI ERR_PORT doc477017
Ref: 4bd477017
Ref: reference/mpi4py MPI ERR_PORT mpi4py-mpi-err-port477017
Ref: 4be477017
Ref: reference/mpi4py MPI ERR_PORT mpi4py MPI ERR_PORT477074
Ref: 127477074
Ref: mpi4py MPI ERR_PORT-Footnote-1477188
Ref: mpi4py MPI ERR_PORT-Footnote-2477249
Node: mpi4py MPI ERR_QUOTA477310
Ref: reference/mpi4py MPI ERR_QUOTA doc477439
Ref: 4bf477439
Ref: reference/mpi4py MPI ERR_QUOTA mpi4py-mpi-err-quota477439
Ref: 4c0477439
Ref: reference/mpi4py MPI ERR_QUOTA mpi4py MPI ERR_QUOTA477498
Ref: 128477498
Ref: mpi4py MPI ERR_QUOTA-Footnote-1477615
Ref: mpi4py MPI ERR_QUOTA-Footnote-2477676
Node: mpi4py MPI ERR_SERVICE477737
Ref: reference/mpi4py MPI ERR_SERVICE doc477867
Ref: 4c1477867
Ref: reference/mpi4py MPI ERR_SERVICE mpi4py-mpi-err-service477867
Ref: 4c2477867
Ref: reference/mpi4py MPI ERR_SERVICE mpi4py MPI ERR_SERVICE477930
Ref: 129477930
Ref: mpi4py MPI ERR_SERVICE-Footnote-1478053
Ref: mpi4py MPI ERR_SERVICE-Footnote-2478114
Node: mpi4py MPI ERR_SPAWN478175
Ref: reference/mpi4py MPI ERR_SPAWN doc478304
Ref: 4c3478304
Ref: reference/mpi4py MPI ERR_SPAWN mpi4py-mpi-err-spawn478304
Ref: 4c4478304
Ref: reference/mpi4py MPI ERR_SPAWN mpi4py MPI ERR_SPAWN478363
Ref: 12a478363
Ref: mpi4py MPI ERR_SPAWN-Footnote-1478480
Ref: mpi4py MPI ERR_SPAWN-Footnote-2478541
Node: mpi4py MPI ERR_BASE478602
Ref: reference/mpi4py MPI ERR_BASE doc478728
Ref: 4c5478728
Ref: reference/mpi4py MPI ERR_BASE mpi4py-mpi-err-base478728
Ref: 4c6478728
Ref: reference/mpi4py MPI ERR_BASE mpi4py MPI ERR_BASE478785
Ref: 12b478785
Ref: mpi4py MPI ERR_BASE-Footnote-1478899
Ref: mpi4py MPI ERR_BASE-Footnote-2478960
Node: mpi4py MPI ERR_SIZE479021
Ref: reference/mpi4py MPI ERR_SIZE doc479146
Ref: 4c7479146
Ref: reference/mpi4py MPI ERR_SIZE mpi4py-mpi-err-size479146
Ref: 4c8479146
Ref: reference/mpi4py MPI ERR_SIZE mpi4py MPI ERR_SIZE479203
Ref: 12c479203
Ref: mpi4py MPI ERR_SIZE-Footnote-1479317
Ref: mpi4py MPI ERR_SIZE-Footnote-2479378
Node: mpi4py MPI ERR_DISP479439
Ref: reference/mpi4py MPI ERR_DISP doc479566
Ref: 4c9479566
Ref: reference/mpi4py MPI ERR_DISP mpi4py-mpi-err-disp479566
Ref: 4ca479566
Ref: reference/mpi4py MPI ERR_DISP mpi4py MPI ERR_DISP479623
Ref: 12d479623
Ref: mpi4py MPI ERR_DISP-Footnote-1479737
Ref: mpi4py MPI ERR_DISP-Footnote-2479798
Node: mpi4py MPI ERR_ASSERT479859
Ref: reference/mpi4py MPI ERR_ASSERT doc479990
Ref: 4cb479990
Ref: reference/mpi4py MPI ERR_ASSERT mpi4py-mpi-err-assert479990
Ref: 4cc479990
Ref: reference/mpi4py MPI ERR_ASSERT mpi4py MPI ERR_ASSERT480051
Ref: 12e480051
Ref: mpi4py MPI ERR_ASSERT-Footnote-1480171
Ref: mpi4py MPI ERR_ASSERT-Footnote-2480232
Node: mpi4py MPI ERR_LOCKTYPE480293
Ref: reference/mpi4py MPI ERR_LOCKTYPE doc480432
Ref: 4cd480432
Ref: reference/mpi4py MPI ERR_LOCKTYPE mpi4py-mpi-err-locktype480432
Ref: 4ce480432
Ref: reference/mpi4py MPI ERR_LOCKTYPE mpi4py MPI ERR_LOCKTYPE480497
Ref: 12f480497
Ref: mpi4py MPI ERR_LOCKTYPE-Footnote-1480623
Ref: mpi4py MPI ERR_LOCKTYPE-Footnote-2480684
Node: mpi4py MPI ERR_RMA_CONFLICT480745
Ref: reference/mpi4py MPI ERR_RMA_CONFLICT doc480886
Ref: 4cf480886
Ref: reference/mpi4py MPI ERR_RMA_CONFLICT mpi4py-mpi-err-rma-conflict480886
Ref: 4d0480886
Ref: reference/mpi4py MPI ERR_RMA_CONFLICT mpi4py MPI ERR_RMA_CONFLICT480959
Ref: 130480959
Ref: mpi4py MPI ERR_RMA_CONFLICT-Footnote-1481097
Ref: mpi4py MPI ERR_RMA_CONFLICT-Footnote-2481158
Node: mpi4py MPI ERR_RMA_SYNC481219
Ref: reference/mpi4py MPI ERR_RMA_SYNC doc481361
Ref: 4d1481361
Ref: reference/mpi4py MPI ERR_RMA_SYNC mpi4py-mpi-err-rma-sync481361
Ref: 4d2481361
Ref: reference/mpi4py MPI ERR_RMA_SYNC mpi4py MPI ERR_RMA_SYNC481426
Ref: 131481426
Ref: mpi4py MPI ERR_RMA_SYNC-Footnote-1481552
Ref: mpi4py MPI ERR_RMA_SYNC-Footnote-2481613
Node: mpi4py MPI ERR_RMA_RANGE481674
Ref: reference/mpi4py MPI ERR_RMA_RANGE doc481814
Ref: 4d3481814
Ref: reference/mpi4py MPI ERR_RMA_RANGE mpi4py-mpi-err-rma-range481814
Ref: 4d4481814
Ref: reference/mpi4py MPI ERR_RMA_RANGE mpi4py MPI ERR_RMA_RANGE481881
Ref: 132481881
Ref: mpi4py MPI ERR_RMA_RANGE-Footnote-1482010
Ref: mpi4py MPI ERR_RMA_RANGE-Footnote-2482071
Node: mpi4py MPI ERR_RMA_ATTACH482132
Ref: reference/mpi4py MPI ERR_RMA_ATTACH doc482274
Ref: 4d5482274
Ref: reference/mpi4py MPI ERR_RMA_ATTACH mpi4py-mpi-err-rma-attach482274
Ref: 4d6482274
Ref: reference/mpi4py MPI ERR_RMA_ATTACH mpi4py MPI ERR_RMA_ATTACH482343
Ref: 133482343
Ref: mpi4py MPI ERR_RMA_ATTACH-Footnote-1482475
Ref: mpi4py MPI ERR_RMA_ATTACH-Footnote-2482536
Node: mpi4py MPI ERR_RMA_SHARED482597
Ref: reference/mpi4py MPI ERR_RMA_SHARED doc482740
Ref: 4d7482740
Ref: reference/mpi4py MPI ERR_RMA_SHARED mpi4py-mpi-err-rma-shared482740
Ref: 4d8482740
Ref: reference/mpi4py MPI ERR_RMA_SHARED mpi4py MPI ERR_RMA_SHARED482809
Ref: 134482809
Ref: mpi4py MPI ERR_RMA_SHARED-Footnote-1482941
Ref: mpi4py MPI ERR_RMA_SHARED-Footnote-2483002
Node: mpi4py MPI ERR_RMA_FLAVOR483063
Ref: reference/mpi4py MPI ERR_RMA_FLAVOR doc483199
Ref: 4d9483199
Ref: reference/mpi4py MPI ERR_RMA_FLAVOR mpi4py-mpi-err-rma-flavor483199
Ref: 4da483199
Ref: reference/mpi4py MPI ERR_RMA_FLAVOR mpi4py MPI ERR_RMA_FLAVOR483268
Ref: 135483268
Ref: mpi4py MPI ERR_RMA_FLAVOR-Footnote-1483400
Ref: mpi4py MPI ERR_RMA_FLAVOR-Footnote-2483461
Node: mpi4py MPI ORDER_C483522
Ref: reference/mpi4py MPI ORDER_C doc483657
Ref: 4db483657
Ref: reference/mpi4py MPI ORDER_C mpi4py-mpi-order-c483657
Ref: 4dc483657
Ref: reference/mpi4py MPI ORDER_C mpi4py MPI ORDER_C483712
Ref: 136483712
Ref: mpi4py MPI ORDER_C-Footnote-1483823
Ref: mpi4py MPI ORDER_C-Footnote-2483884
Node: mpi4py MPI ORDER_FORTRAN483945
Ref: reference/mpi4py MPI ORDER_FORTRAN doc484073
Ref: 4dd484073
Ref: reference/mpi4py MPI ORDER_FORTRAN mpi4py-mpi-order-fortran484073
Ref: 4de484073
Ref: reference/mpi4py MPI ORDER_FORTRAN mpi4py MPI ORDER_FORTRAN484140
Ref: 138484140
Ref: mpi4py MPI ORDER_FORTRAN-Footnote-1484269
Ref: mpi4py MPI ORDER_FORTRAN-Footnote-2484330
Node: mpi4py MPI ORDER_F484391
Ref: reference/mpi4py MPI ORDER_F doc484529
Ref: 4df484529
Ref: reference/mpi4py MPI ORDER_F mpi4py-mpi-order-f484529
Ref: 4e0484529
Ref: reference/mpi4py MPI ORDER_F mpi4py MPI ORDER_F484584
Ref: 137484584
Ref: mpi4py MPI ORDER_F-Footnote-1484695
Ref: mpi4py MPI ORDER_F-Footnote-2484756
Node: mpi4py MPI TYPECLASS_INTEGER484817
Ref: reference/mpi4py MPI TYPECLASS_INTEGER doc484956
Ref: 4e1484956
Ref: reference/mpi4py MPI TYPECLASS_INTEGER mpi4py-mpi-typeclass-integer484956
Ref: 4e2484956
Ref: reference/mpi4py MPI TYPECLASS_INTEGER mpi4py MPI TYPECLASS_INTEGER485031
Ref: 139485031
Ref: mpi4py MPI TYPECLASS_INTEGER-Footnote-1485172
Ref: mpi4py MPI TYPECLASS_INTEGER-Footnote-2485233
Node: mpi4py MPI TYPECLASS_REAL485294
Ref: reference/mpi4py MPI TYPECLASS_REAL doc485443
Ref: 4e3485443
Ref: reference/mpi4py MPI TYPECLASS_REAL mpi4py-mpi-typeclass-real485443
Ref: 4e4485443
Ref: reference/mpi4py MPI TYPECLASS_REAL mpi4py MPI TYPECLASS_REAL485512
Ref: 13a485512
Ref: mpi4py MPI TYPECLASS_REAL-Footnote-1485644
Ref: mpi4py MPI TYPECLASS_REAL-Footnote-2485705
Node: mpi4py MPI TYPECLASS_COMPLEX485766
Ref: reference/mpi4py MPI TYPECLASS_COMPLEX doc485913
Ref: 4e5485913
Ref: reference/mpi4py MPI TYPECLASS_COMPLEX mpi4py-mpi-typeclass-complex485913
Ref: 4e6485913
Ref: reference/mpi4py MPI TYPECLASS_COMPLEX mpi4py MPI TYPECLASS_COMPLEX485988
Ref: 13b485988
Ref: mpi4py MPI TYPECLASS_COMPLEX-Footnote-1486129
Ref: mpi4py MPI TYPECLASS_COMPLEX-Footnote-2486190
Node: mpi4py MPI DISTRIBUTE_NONE486251
Ref: reference/mpi4py MPI DISTRIBUTE_NONE doc486400
Ref: 4e7486400
Ref: reference/mpi4py MPI DISTRIBUTE_NONE mpi4py-mpi-distribute-none486400
Ref: 4e8486400
Ref: reference/mpi4py MPI DISTRIBUTE_NONE mpi4py MPI DISTRIBUTE_NONE486471
Ref: 13c486471
Ref: mpi4py MPI DISTRIBUTE_NONE-Footnote-1486606
Ref: mpi4py MPI DISTRIBUTE_NONE-Footnote-2486667
Node: mpi4py MPI DISTRIBUTE_BLOCK486728
Ref: reference/mpi4py MPI DISTRIBUTE_BLOCK doc486877
Ref: 4e9486877
Ref: reference/mpi4py MPI DISTRIBUTE_BLOCK mpi4py-mpi-distribute-block486877
Ref: 4ea486877
Ref: reference/mpi4py MPI DISTRIBUTE_BLOCK mpi4py MPI DISTRIBUTE_BLOCK486950
Ref: 13d486950
Ref: mpi4py MPI DISTRIBUTE_BLOCK-Footnote-1487088
Ref: mpi4py MPI DISTRIBUTE_BLOCK-Footnote-2487149
Node: mpi4py MPI DISTRIBUTE_CYCLIC487210
Ref: reference/mpi4py MPI DISTRIBUTE_CYCLIC doc487364
Ref: 4eb487364
Ref: reference/mpi4py MPI DISTRIBUTE_CYCLIC mpi4py-mpi-distribute-cyclic487364
Ref: 4ec487364
Ref: reference/mpi4py MPI DISTRIBUTE_CYCLIC mpi4py MPI DISTRIBUTE_CYCLIC487439
Ref: 13e487439
Ref: mpi4py MPI DISTRIBUTE_CYCLIC-Footnote-1487580
Ref: mpi4py MPI DISTRIBUTE_CYCLIC-Footnote-2487641
Node: mpi4py MPI DISTRIBUTE_DFLT_DARG487702
Ref: reference/mpi4py MPI DISTRIBUTE_DFLT_DARG doc487854
Ref: 4ed487854
Ref: reference/mpi4py MPI DISTRIBUTE_DFLT_DARG mpi4py-mpi-distribute-dflt-darg487854
Ref: 4ee487854
Ref: reference/mpi4py MPI DISTRIBUTE_DFLT_DARG mpi4py MPI DISTRIBUTE_DFLT_DARG487935
Ref: 13f487935
Ref: mpi4py MPI DISTRIBUTE_DFLT_DARG-Footnote-1488085
Ref: mpi4py MPI DISTRIBUTE_DFLT_DARG-Footnote-2488146
Node: mpi4py MPI COMBINER_NAMED488207
Ref: reference/mpi4py MPI COMBINER_NAMED doc488354
Ref: 4ef488354
Ref: reference/mpi4py MPI COMBINER_NAMED mpi4py-mpi-combiner-named488354
Ref: 4f0488354
Ref: reference/mpi4py MPI COMBINER_NAMED mpi4py MPI COMBINER_NAMED488423
Ref: 140488423
Ref: mpi4py MPI COMBINER_NAMED-Footnote-1488555
Ref: mpi4py MPI COMBINER_NAMED-Footnote-2488616
Node: mpi4py MPI COMBINER_DUP488677
Ref: reference/mpi4py MPI COMBINER_DUP doc488823
Ref: 4f1488823
Ref: reference/mpi4py MPI COMBINER_DUP mpi4py-mpi-combiner-dup488823
Ref: 4f2488823
Ref: reference/mpi4py MPI COMBINER_DUP mpi4py MPI COMBINER_DUP488888
Ref: 141488888
Ref: mpi4py MPI COMBINER_DUP-Footnote-1489014
Ref: mpi4py MPI COMBINER_DUP-Footnote-2489075
Node: mpi4py MPI COMBINER_CONTIGUOUS489136
Ref: reference/mpi4py MPI COMBINER_CONTIGUOUS doc489283
Ref: 4f3489283
Ref: reference/mpi4py MPI COMBINER_CONTIGUOUS mpi4py-mpi-combiner-contiguous489283
Ref: 4f4489283
Ref: reference/mpi4py MPI COMBINER_CONTIGUOUS mpi4py MPI COMBINER_CONTIGUOUS489362
Ref: 142489362
Ref: mpi4py MPI COMBINER_CONTIGUOUS-Footnote-1489509
Ref: mpi4py MPI COMBINER_CONTIGUOUS-Footnote-2489570
Node: mpi4py MPI COMBINER_VECTOR489631
Ref: reference/mpi4py MPI COMBINER_VECTOR doc489782
Ref: 4f5489782
Ref: reference/mpi4py MPI COMBINER_VECTOR mpi4py-mpi-combiner-vector489782
Ref: 4f6489782
Ref: reference/mpi4py MPI COMBINER_VECTOR mpi4py MPI COMBINER_VECTOR489853
Ref: 143489853
Ref: mpi4py MPI COMBINER_VECTOR-Footnote-1489988
Ref: mpi4py MPI COMBINER_VECTOR-Footnote-2490049
Node: mpi4py MPI COMBINER_HVECTOR490110
Ref: reference/mpi4py MPI COMBINER_HVECTOR doc490258
Ref: 4f7490258
Ref: reference/mpi4py MPI COMBINER_HVECTOR mpi4py-mpi-combiner-hvector490258
Ref: 4f8490258
Ref: reference/mpi4py MPI COMBINER_HVECTOR mpi4py MPI COMBINER_HVECTOR490331
Ref: 144490331
Ref: mpi4py MPI COMBINER_HVECTOR-Footnote-1490469
Ref: mpi4py MPI COMBINER_HVECTOR-Footnote-2490530
Node: mpi4py MPI COMBINER_INDEXED490591
Ref: reference/mpi4py MPI COMBINER_INDEXED doc490741
Ref: 4f9490741
Ref: reference/mpi4py MPI COMBINER_INDEXED mpi4py-mpi-combiner-indexed490741
Ref: 4fa490741
Ref: reference/mpi4py MPI COMBINER_INDEXED mpi4py MPI COMBINER_INDEXED490814
Ref: 145490814
Ref: mpi4py MPI COMBINER_INDEXED-Footnote-1490952
Ref: mpi4py MPI COMBINER_INDEXED-Footnote-2491013
Node: mpi4py MPI COMBINER_HINDEXED491074
Ref: reference/mpi4py MPI COMBINER_HINDEXED doc491230
Ref: 4fb491230
Ref: reference/mpi4py MPI COMBINER_HINDEXED mpi4py-mpi-combiner-hindexed491230
Ref: 4fc491230
Ref: reference/mpi4py MPI COMBINER_HINDEXED mpi4py MPI COMBINER_HINDEXED491305
Ref: 146491305
Ref: mpi4py MPI COMBINER_HINDEXED-Footnote-1491446
Ref: mpi4py MPI COMBINER_HINDEXED-Footnote-2491507
Node: mpi4py MPI COMBINER_INDEXED_BLOCK491568
Ref: reference/mpi4py MPI COMBINER_INDEXED_BLOCK doc491731
Ref: 4fd491731
Ref: reference/mpi4py MPI COMBINER_INDEXED_BLOCK mpi4py-mpi-combiner-indexed-block491731
Ref: 4fe491731
Ref: reference/mpi4py MPI COMBINER_INDEXED_BLOCK mpi4py MPI COMBINER_INDEXED_BLOCK491816
Ref: 147491816
Ref: mpi4py MPI COMBINER_INDEXED_BLOCK-Footnote-1491982
Ref: mpi4py MPI COMBINER_INDEXED_BLOCK-Footnote-2492043
Node: mpi4py MPI COMBINER_HINDEXED_BLOCK492104
Ref: reference/mpi4py MPI COMBINER_HINDEXED_BLOCK doc492265
Ref: 4ff492265
Ref: reference/mpi4py MPI COMBINER_HINDEXED_BLOCK mpi4py-mpi-combiner-hindexed-block492265
Ref: 500492265
Ref: reference/mpi4py MPI COMBINER_HINDEXED_BLOCK mpi4py MPI COMBINER_HINDEXED_BLOCK492352
Ref: 148492352
Ref: mpi4py MPI COMBINER_HINDEXED_BLOCK-Footnote-1492521
Ref: mpi4py MPI COMBINER_HINDEXED_BLOCK-Footnote-2492582
Node: mpi4py MPI COMBINER_STRUCT492643
Ref: reference/mpi4py MPI COMBINER_STRUCT doc492799
Ref: 501492799
Ref: reference/mpi4py MPI COMBINER_STRUCT mpi4py-mpi-combiner-struct492799
Ref: 502492799
Ref: reference/mpi4py MPI COMBINER_STRUCT mpi4py MPI COMBINER_STRUCT492870
Ref: 149492870
Ref: mpi4py MPI COMBINER_STRUCT-Footnote-1493005
Ref: mpi4py MPI COMBINER_STRUCT-Footnote-2493066
Node: mpi4py MPI COMBINER_SUBARRAY493127
Ref: reference/mpi4py MPI COMBINER_SUBARRAY doc493275
Ref: 503493275
Ref: reference/mpi4py MPI COMBINER_SUBARRAY mpi4py-mpi-combiner-subarray493275
Ref: 504493275
Ref: reference/mpi4py MPI COMBINER_SUBARRAY mpi4py MPI COMBINER_SUBARRAY493350
Ref: 14a493350
Ref: mpi4py MPI COMBINER_SUBARRAY-Footnote-1493491
Ref: mpi4py MPI COMBINER_SUBARRAY-Footnote-2493552
Node: mpi4py MPI COMBINER_DARRAY493613
Ref: reference/mpi4py MPI COMBINER_DARRAY doc493762
Ref: 505493762
Ref: reference/mpi4py MPI COMBINER_DARRAY mpi4py-mpi-combiner-darray493762
Ref: 506493762
Ref: reference/mpi4py MPI COMBINER_DARRAY mpi4py MPI COMBINER_DARRAY493833
Ref: 14b493833
Ref: mpi4py MPI COMBINER_DARRAY-Footnote-1493968
Ref: mpi4py MPI COMBINER_DARRAY-Footnote-2494029
Node: mpi4py MPI COMBINER_RESIZED494090
Ref: reference/mpi4py MPI COMBINER_RESIZED doc494239
Ref: 507494239
Ref: reference/mpi4py MPI COMBINER_RESIZED mpi4py-mpi-combiner-resized494239
Ref: 508494239
Ref: reference/mpi4py MPI COMBINER_RESIZED mpi4py MPI COMBINER_RESIZED494312
Ref: 14c494312
Ref: mpi4py MPI COMBINER_RESIZED-Footnote-1494450
Ref: mpi4py MPI COMBINER_RESIZED-Footnote-2494511
Node: mpi4py MPI COMBINER_F90_REAL494572
Ref: reference/mpi4py MPI COMBINER_F90_REAL doc494726
Ref: 509494726
Ref: reference/mpi4py MPI COMBINER_F90_REAL mpi4py-mpi-combiner-f90-real494726
Ref: 50a494726
Ref: reference/mpi4py MPI COMBINER_F90_REAL mpi4py MPI COMBINER_F90_REAL494801
Ref: 14d494801
Ref: mpi4py MPI COMBINER_F90_REAL-Footnote-1494942
Ref: mpi4py MPI COMBINER_F90_REAL-Footnote-2495003
Node: mpi4py MPI COMBINER_F90_COMPLEX495064
Ref: reference/mpi4py MPI COMBINER_F90_COMPLEX doc495222
Ref: 50b495222
Ref: reference/mpi4py MPI COMBINER_F90_COMPLEX mpi4py-mpi-combiner-f90-complex495222
Ref: 50c495222
Ref: reference/mpi4py MPI COMBINER_F90_COMPLEX mpi4py MPI COMBINER_F90_COMPLEX495303
Ref: 14e495303
Ref: mpi4py MPI COMBINER_F90_COMPLEX-Footnote-1495453
Ref: mpi4py MPI COMBINER_F90_COMPLEX-Footnote-2495514
Node: mpi4py MPI COMBINER_F90_INTEGER495575
Ref: reference/mpi4py MPI COMBINER_F90_INTEGER doc495721
Ref: 50d495721
Ref: reference/mpi4py MPI COMBINER_F90_INTEGER mpi4py-mpi-combiner-f90-integer495721
Ref: 50e495721
Ref: reference/mpi4py MPI COMBINER_F90_INTEGER mpi4py MPI COMBINER_F90_INTEGER495802
Ref: 14f495802
Ref: mpi4py MPI COMBINER_F90_INTEGER-Footnote-1495952
Ref: mpi4py MPI COMBINER_F90_INTEGER-Footnote-2496013
Node: mpi4py MPI IDENT496074
Ref: reference/mpi4py MPI IDENT doc496209
Ref: 50f496209
Ref: reference/mpi4py MPI IDENT mpi4py-mpi-ident496209
Ref: 510496209
Ref: reference/mpi4py MPI IDENT mpi4py MPI IDENT496260
Ref: 150496260
Ref: mpi4py MPI IDENT-Footnote-1496365
Ref: mpi4py MPI IDENT-Footnote-2496426
Node: mpi4py MPI CONGRUENT496487
Ref: reference/mpi4py MPI CONGRUENT doc496609
Ref: 511496609
Ref: reference/mpi4py MPI CONGRUENT mpi4py-mpi-congruent496609
Ref: 512496609
Ref: reference/mpi4py MPI CONGRUENT mpi4py MPI CONGRUENT496668
Ref: 151496668
Ref: mpi4py MPI CONGRUENT-Footnote-1496785
Ref: mpi4py MPI CONGRUENT-Footnote-2496846
Node: mpi4py MPI SIMILAR496907
Ref: reference/mpi4py MPI SIMILAR doc497031
Ref: 513497031
Ref: reference/mpi4py MPI SIMILAR mpi4py-mpi-similar497031
Ref: 514497031
Ref: reference/mpi4py MPI SIMILAR mpi4py MPI SIMILAR497086
Ref: 152497086
Ref: mpi4py MPI SIMILAR-Footnote-1497197
Ref: mpi4py MPI SIMILAR-Footnote-2497258
Node: mpi4py MPI UNEQUAL497319
Ref: reference/mpi4py MPI UNEQUAL doc497438
Ref: 515497438
Ref: reference/mpi4py MPI UNEQUAL mpi4py-mpi-unequal497438
Ref: 516497438
Ref: reference/mpi4py MPI UNEQUAL mpi4py MPI UNEQUAL497493
Ref: 153497493
Ref: mpi4py MPI UNEQUAL-Footnote-1497604
Ref: mpi4py MPI UNEQUAL-Footnote-2497665
Node: mpi4py MPI CART497726
Ref: reference/mpi4py MPI CART doc497843
Ref: 517497843
Ref: reference/mpi4py MPI CART mpi4py-mpi-cart497843
Ref: 518497843
Ref: reference/mpi4py MPI CART mpi4py MPI CART497892
Ref: 154497892
Ref: mpi4py MPI CART-Footnote-1497994
Ref: mpi4py MPI CART-Footnote-2498055
Node: mpi4py MPI GRAPH498116
Ref: reference/mpi4py MPI GRAPH doc498236
Ref: 519498236
Ref: reference/mpi4py MPI GRAPH mpi4py-mpi-graph498236
Ref: 51a498236
Ref: reference/mpi4py MPI GRAPH mpi4py MPI GRAPH498287
Ref: 155498287
Ref: mpi4py MPI GRAPH-Footnote-1498392
Ref: mpi4py MPI GRAPH-Footnote-2498453
Node: mpi4py MPI DIST_GRAPH498514
Ref: reference/mpi4py MPI DIST_GRAPH doc498640
Ref: 51b498640
Ref: reference/mpi4py MPI DIST_GRAPH mpi4py-mpi-dist-graph498640
Ref: 51c498640
Ref: reference/mpi4py MPI DIST_GRAPH mpi4py MPI DIST_GRAPH498701
Ref: 156498701
Ref: mpi4py MPI DIST_GRAPH-Footnote-1498821
Ref: mpi4py MPI DIST_GRAPH-Footnote-2498882
Node: mpi4py MPI UNWEIGHTED498943
Ref: reference/mpi4py MPI UNWEIGHTED doc499077
Ref: 51d499077
Ref: reference/mpi4py MPI UNWEIGHTED mpi4py-mpi-unweighted499077
Ref: 51e499077
Ref: reference/mpi4py MPI UNWEIGHTED mpi4py MPI UNWEIGHTED499138
Ref: 157499138
Ref: mpi4py MPI UNWEIGHTED-Footnote-1499258
Ref: mpi4py MPI UNWEIGHTED-Footnote-2499319
Node: mpi4py MPI WEIGHTS_EMPTY499380
Ref: reference/mpi4py MPI WEIGHTS_EMPTY doc499520
Ref: 51f499520
Ref: reference/mpi4py MPI WEIGHTS_EMPTY mpi4py-mpi-weights-empty499520
Ref: 520499520
Ref: reference/mpi4py MPI WEIGHTS_EMPTY mpi4py MPI WEIGHTS_EMPTY499587
Ref: 158499587
Ref: mpi4py MPI WEIGHTS_EMPTY-Footnote-1499716
Ref: mpi4py MPI WEIGHTS_EMPTY-Footnote-2499777
Node: mpi4py MPI COMM_TYPE_SHARED499838
Ref: reference/mpi4py MPI COMM_TYPE_SHARED doc499982
Ref: 521499982
Ref: reference/mpi4py MPI COMM_TYPE_SHARED mpi4py-mpi-comm-type-shared499982
Ref: 522499982
Ref: reference/mpi4py MPI COMM_TYPE_SHARED mpi4py MPI COMM_TYPE_SHARED500055
Ref: 159500055
Ref: mpi4py MPI COMM_TYPE_SHARED-Footnote-1500193
Ref: mpi4py MPI COMM_TYPE_SHARED-Footnote-2500254
Node: mpi4py MPI BSEND_OVERHEAD500315
Ref: reference/mpi4py MPI BSEND_OVERHEAD doc500463
Ref: 523500463
Ref: reference/mpi4py MPI BSEND_OVERHEAD mpi4py-mpi-bsend-overhead500463
Ref: 524500463
Ref: reference/mpi4py MPI BSEND_OVERHEAD mpi4py MPI BSEND_OVERHEAD500532
Ref: 15a500532
Ref: mpi4py MPI BSEND_OVERHEAD-Footnote-1500664
Ref: mpi4py MPI BSEND_OVERHEAD-Footnote-2500725
Node: mpi4py MPI WIN_FLAVOR_CREATE500786
Ref: reference/mpi4py MPI WIN_FLAVOR_CREATE doc500937
Ref: 525500937
Ref: reference/mpi4py MPI WIN_FLAVOR_CREATE mpi4py-mpi-win-flavor-create500937
Ref: 526500937
Ref: reference/mpi4py MPI WIN_FLAVOR_CREATE mpi4py MPI WIN_FLAVOR_CREATE501012
Ref: 15b501012
Ref: mpi4py MPI WIN_FLAVOR_CREATE-Footnote-1501153
Ref: mpi4py MPI WIN_FLAVOR_CREATE-Footnote-2501214
Node: mpi4py MPI WIN_FLAVOR_ALLOCATE501275
Ref: reference/mpi4py MPI WIN_FLAVOR_ALLOCATE doc501430
Ref: 527501430
Ref: reference/mpi4py MPI WIN_FLAVOR_ALLOCATE mpi4py-mpi-win-flavor-allocate501430
Ref: 528501430
Ref: reference/mpi4py MPI WIN_FLAVOR_ALLOCATE mpi4py MPI WIN_FLAVOR_ALLOCATE501509
Ref: 15c501509
Ref: mpi4py MPI WIN_FLAVOR_ALLOCATE-Footnote-1501656
Ref: mpi4py MPI WIN_FLAVOR_ALLOCATE-Footnote-2501717
Node: mpi4py MPI WIN_FLAVOR_DYNAMIC501778
Ref: reference/mpi4py MPI WIN_FLAVOR_DYNAMIC doc501933
Ref: 529501933
Ref: reference/mpi4py MPI WIN_FLAVOR_DYNAMIC mpi4py-mpi-win-flavor-dynamic501933
Ref: 52a501933
Ref: reference/mpi4py MPI WIN_FLAVOR_DYNAMIC mpi4py MPI WIN_FLAVOR_DYNAMIC502010
Ref: 15d502010
Ref: mpi4py MPI WIN_FLAVOR_DYNAMIC-Footnote-1502154
Ref: mpi4py MPI WIN_FLAVOR_DYNAMIC-Footnote-2502215
Node: mpi4py MPI WIN_FLAVOR_SHARED502276
Ref: reference/mpi4py MPI WIN_FLAVOR_SHARED doc502424
Ref: 52b502424
Ref: reference/mpi4py MPI WIN_FLAVOR_SHARED mpi4py-mpi-win-flavor-shared502424
Ref: 52c502424
Ref: reference/mpi4py MPI WIN_FLAVOR_SHARED mpi4py MPI WIN_FLAVOR_SHARED502499
Ref: 15e502499
Ref: mpi4py MPI WIN_FLAVOR_SHARED-Footnote-1502640
Ref: mpi4py MPI WIN_FLAVOR_SHARED-Footnote-2502701
Node: mpi4py MPI WIN_SEPARATE502762
Ref: reference/mpi4py MPI WIN_SEPARATE doc502903
Ref: 52d502903
Ref: reference/mpi4py MPI WIN_SEPARATE mpi4py-mpi-win-separate502903
Ref: 52e502903
Ref: reference/mpi4py MPI WIN_SEPARATE mpi4py MPI WIN_SEPARATE502968
Ref: 15f502968
Ref: mpi4py MPI WIN_SEPARATE-Footnote-1503094
Ref: mpi4py MPI WIN_SEPARATE-Footnote-2503155
Node: mpi4py MPI WIN_UNIFIED503216
Ref: reference/mpi4py MPI WIN_UNIFIED doc503352
Ref: 52f503352
Ref: reference/mpi4py MPI WIN_UNIFIED mpi4py-mpi-win-unified503352
Ref: 530503352
Ref: reference/mpi4py MPI WIN_UNIFIED mpi4py MPI WIN_UNIFIED503415
Ref: 160503415
Ref: mpi4py MPI WIN_UNIFIED-Footnote-1503538
Ref: mpi4py MPI WIN_UNIFIED-Footnote-2503599
Node: mpi4py MPI MODE_NOCHECK503660
Ref: reference/mpi4py MPI MODE_NOCHECK doc503796
Ref: 531503796
Ref: reference/mpi4py MPI MODE_NOCHECK mpi4py-mpi-mode-nocheck503796
Ref: 532503796
Ref: reference/mpi4py MPI MODE_NOCHECK mpi4py MPI MODE_NOCHECK503861
Ref: 161503861
Ref: mpi4py MPI MODE_NOCHECK-Footnote-1503987
Ref: mpi4py MPI MODE_NOCHECK-Footnote-2504048
Node: mpi4py MPI MODE_NOSTORE504109
Ref: reference/mpi4py MPI MODE_NOSTORE doc504244
Ref: 533504244
Ref: reference/mpi4py MPI MODE_NOSTORE mpi4py-mpi-mode-nostore504244
Ref: 534504244
Ref: reference/mpi4py MPI MODE_NOSTORE mpi4py MPI MODE_NOSTORE504309
Ref: 162504309
Ref: mpi4py MPI MODE_NOSTORE-Footnote-1504435
Ref: mpi4py MPI MODE_NOSTORE-Footnote-2504496
Node: mpi4py MPI MODE_NOPUT504557
Ref: reference/mpi4py MPI MODE_NOPUT doc504694
Ref: 535504694
Ref: reference/mpi4py MPI MODE_NOPUT mpi4py-mpi-mode-noput504694
Ref: 536504694
Ref: reference/mpi4py MPI MODE_NOPUT mpi4py MPI MODE_NOPUT504755
Ref: 163504755
Ref: mpi4py MPI MODE_NOPUT-Footnote-1504875
Ref: mpi4py MPI MODE_NOPUT-Footnote-2504936
Node: mpi4py MPI MODE_NOPRECEDE504997
Ref: reference/mpi4py MPI MODE_NOPRECEDE doc505136
Ref: 537505136
Ref: reference/mpi4py MPI MODE_NOPRECEDE mpi4py-mpi-mode-noprecede505136
Ref: 538505136
Ref: reference/mpi4py MPI MODE_NOPRECEDE mpi4py MPI MODE_NOPRECEDE505205
Ref: 164505205
Ref: mpi4py MPI MODE_NOPRECEDE-Footnote-1505337
Ref: mpi4py MPI MODE_NOPRECEDE-Footnote-2505398
Node: mpi4py MPI MODE_NOSUCCEED505459
Ref: reference/mpi4py MPI MODE_NOSUCCEED doc505602
Ref: 539505602
Ref: reference/mpi4py MPI MODE_NOSUCCEED mpi4py-mpi-mode-nosucceed505602
Ref: 53a505602
Ref: reference/mpi4py MPI MODE_NOSUCCEED mpi4py MPI MODE_NOSUCCEED505671
Ref: 165505671
Ref: mpi4py MPI MODE_NOSUCCEED-Footnote-1505803
Ref: mpi4py MPI MODE_NOSUCCEED-Footnote-2505864
Node: mpi4py MPI LOCK_EXCLUSIVE505925
Ref: reference/mpi4py MPI LOCK_EXCLUSIVE doc506065
Ref: 53b506065
Ref: reference/mpi4py MPI LOCK_EXCLUSIVE mpi4py-mpi-lock-exclusive506065
Ref: 53c506065
Ref: reference/mpi4py MPI LOCK_EXCLUSIVE mpi4py MPI LOCK_EXCLUSIVE506134
Ref: 166506134
Ref: mpi4py MPI LOCK_EXCLUSIVE-Footnote-1506266
Ref: mpi4py MPI LOCK_EXCLUSIVE-Footnote-2506327
Node: mpi4py MPI LOCK_SHARED506388
Ref: reference/mpi4py MPI LOCK_SHARED doc506525
Ref: 53d506525
Ref: reference/mpi4py MPI LOCK_SHARED mpi4py-mpi-lock-shared506525
Ref: 53e506525
Ref: reference/mpi4py MPI LOCK_SHARED mpi4py MPI LOCK_SHARED506588
Ref: 167506588
Ref: mpi4py MPI LOCK_SHARED-Footnote-1506711
Ref: mpi4py MPI LOCK_SHARED-Footnote-2506772
Node: mpi4py MPI MODE_RDONLY506833
Ref: reference/mpi4py MPI MODE_RDONLY doc506967
Ref: 53f506967
Ref: reference/mpi4py MPI MODE_RDONLY mpi4py-mpi-mode-rdonly506967
Ref: 540506967
Ref: reference/mpi4py MPI MODE_RDONLY mpi4py MPI MODE_RDONLY507030
Ref: 168507030
Ref: mpi4py MPI MODE_RDONLY-Footnote-1507153
Ref: mpi4py MPI MODE_RDONLY-Footnote-2507214
Node: mpi4py MPI MODE_WRONLY507275
Ref: reference/mpi4py MPI MODE_WRONLY doc507407
Ref: 541507407
Ref: reference/mpi4py MPI MODE_WRONLY mpi4py-mpi-mode-wronly507407
Ref: 542507407
Ref: reference/mpi4py MPI MODE_WRONLY mpi4py MPI MODE_WRONLY507470
Ref: 169507470
Ref: mpi4py MPI MODE_WRONLY-Footnote-1507593
Ref: mpi4py MPI MODE_WRONLY-Footnote-2507654
Node: mpi4py MPI MODE_RDWR507715
Ref: reference/mpi4py MPI MODE_RDWR doc507847
Ref: 543507847
Ref: reference/mpi4py MPI MODE_RDWR mpi4py-mpi-mode-rdwr507847
Ref: 544507847
Ref: reference/mpi4py MPI MODE_RDWR mpi4py MPI MODE_RDWR507906
Ref: 16a507906
Ref: mpi4py MPI MODE_RDWR-Footnote-1508023
Ref: mpi4py MPI MODE_RDWR-Footnote-2508084
Node: mpi4py MPI MODE_CREATE508145
Ref: reference/mpi4py MPI MODE_CREATE doc508275
Ref: 545508275
Ref: reference/mpi4py MPI MODE_CREATE mpi4py-mpi-mode-create508275
Ref: 546508275
Ref: reference/mpi4py MPI MODE_CREATE mpi4py MPI MODE_CREATE508338
Ref: 16b508338
Ref: mpi4py MPI MODE_CREATE-Footnote-1508461
Ref: mpi4py MPI MODE_CREATE-Footnote-2508522
Node: mpi4py MPI MODE_EXCL508583
Ref: reference/mpi4py MPI MODE_EXCL doc508724
Ref: 547508724
Ref: reference/mpi4py MPI MODE_EXCL mpi4py-mpi-mode-excl508724
Ref: 548508724
Ref: reference/mpi4py MPI MODE_EXCL mpi4py MPI MODE_EXCL508783
Ref: 16c508783
Ref: mpi4py MPI MODE_EXCL-Footnote-1508900
Ref: mpi4py MPI MODE_EXCL-Footnote-2508961
Node: mpi4py MPI MODE_DELETE_ON_CLOSE509022
Ref: reference/mpi4py MPI MODE_DELETE_ON_CLOSE doc509168
Ref: 549509168
Ref: reference/mpi4py MPI MODE_DELETE_ON_CLOSE mpi4py-mpi-mode-delete-on-close509168
Ref: 54a509168
Ref: reference/mpi4py MPI MODE_DELETE_ON_CLOSE mpi4py MPI MODE_DELETE_ON_CLOSE509249
Ref: 16d509249
Ref: mpi4py MPI MODE_DELETE_ON_CLOSE-Footnote-1509399
Ref: mpi4py MPI MODE_DELETE_ON_CLOSE-Footnote-2509460
Node: mpi4py MPI MODE_UNIQUE_OPEN509521
Ref: reference/mpi4py MPI MODE_UNIQUE_OPEN doc509673
Ref: 54b509673
Ref: reference/mpi4py MPI MODE_UNIQUE_OPEN mpi4py-mpi-mode-unique-open509673
Ref: 54c509673
Ref: reference/mpi4py MPI MODE_UNIQUE_OPEN mpi4py MPI MODE_UNIQUE_OPEN509746
Ref: 16e509746
Ref: mpi4py MPI MODE_UNIQUE_OPEN-Footnote-1509884
Ref: mpi4py MPI MODE_UNIQUE_OPEN-Footnote-2509945
Node: mpi4py MPI MODE_SEQUENTIAL510006
Ref: reference/mpi4py MPI MODE_SEQUENTIAL doc510149
Ref: 54d510149
Ref: reference/mpi4py MPI MODE_SEQUENTIAL mpi4py-mpi-mode-sequential510149
Ref: 54e510149
Ref: reference/mpi4py MPI MODE_SEQUENTIAL mpi4py MPI MODE_SEQUENTIAL510220
Ref: 16f510220
Ref: mpi4py MPI MODE_SEQUENTIAL-Footnote-1510355
Ref: mpi4py MPI MODE_SEQUENTIAL-Footnote-2510416
Node: mpi4py MPI MODE_APPEND510477
Ref: reference/mpi4py MPI MODE_APPEND doc510612
Ref: 54f510612
Ref: reference/mpi4py MPI MODE_APPEND mpi4py-mpi-mode-append510612
Ref: 550510612
Ref: reference/mpi4py MPI MODE_APPEND mpi4py MPI MODE_APPEND510675
Ref: 170510675
Ref: mpi4py MPI MODE_APPEND-Footnote-1510798
Ref: mpi4py MPI MODE_APPEND-Footnote-2510859
Node: mpi4py MPI SEEK_SET510920
Ref: reference/mpi4py MPI SEEK_SET doc511048
Ref: 551511048
Ref: reference/mpi4py MPI SEEK_SET mpi4py-mpi-seek-set511048
Ref: 552511048
Ref: reference/mpi4py MPI SEEK_SET mpi4py MPI SEEK_SET511105
Ref: 171511105
Ref: mpi4py MPI SEEK_SET-Footnote-1511219
Ref: mpi4py MPI SEEK_SET-Footnote-2511280
Node: mpi4py MPI SEEK_CUR511341
Ref: reference/mpi4py MPI SEEK_CUR doc511466
Ref: 553511466
Ref: reference/mpi4py MPI SEEK_CUR mpi4py-mpi-seek-cur511466
Ref: 554511466
Ref: reference/mpi4py MPI SEEK_CUR mpi4py MPI SEEK_CUR511523
Ref: 172511523
Ref: mpi4py MPI SEEK_CUR-Footnote-1511637
Ref: mpi4py MPI SEEK_CUR-Footnote-2511698
Node: mpi4py MPI SEEK_END511759
Ref: reference/mpi4py MPI SEEK_END doc511896
Ref: 555511896
Ref: reference/mpi4py MPI SEEK_END mpi4py-mpi-seek-end511896
Ref: 556511896
Ref: reference/mpi4py MPI SEEK_END mpi4py MPI SEEK_END511953
Ref: 173511953
Ref: mpi4py MPI SEEK_END-Footnote-1512067
Ref: mpi4py MPI SEEK_END-Footnote-2512128
Node: mpi4py MPI DISPLACEMENT_CURRENT512189
Ref: reference/mpi4py MPI DISPLACEMENT_CURRENT doc512326
Ref: 557512326
Ref: reference/mpi4py MPI DISPLACEMENT_CURRENT mpi4py-mpi-displacement-current512326
Ref: 558512326
Ref: reference/mpi4py MPI DISPLACEMENT_CURRENT mpi4py MPI DISPLACEMENT_CURRENT512407
Ref: 174512407
Ref: mpi4py MPI DISPLACEMENT_CURRENT-Footnote-1512557
Ref: mpi4py MPI DISPLACEMENT_CURRENT-Footnote-2512618
Node: mpi4py MPI DISP_CUR512679
Ref: reference/mpi4py MPI DISP_CUR doc512821
Ref: 559512821
Ref: reference/mpi4py MPI DISP_CUR mpi4py-mpi-disp-cur512821
Ref: 55a512821
Ref: reference/mpi4py MPI DISP_CUR mpi4py MPI DISP_CUR512878
Ref: 175512878
Ref: mpi4py MPI DISP_CUR-Footnote-1512992
Ref: mpi4py MPI DISP_CUR-Footnote-2513053
Node: mpi4py MPI THREAD_SINGLE513114
Ref: reference/mpi4py MPI THREAD_SINGLE doc513251
Ref: 55b513251
Ref: reference/mpi4py MPI THREAD_SINGLE mpi4py-mpi-thread-single513251
Ref: 55c513251
Ref: reference/mpi4py MPI THREAD_SINGLE mpi4py MPI THREAD_SINGLE513318
Ref: 176513318
Ref: mpi4py MPI THREAD_SINGLE-Footnote-1513447
Ref: mpi4py MPI THREAD_SINGLE-Footnote-2513508
Node: mpi4py MPI THREAD_FUNNELED513569
Ref: reference/mpi4py MPI THREAD_FUNNELED doc513715
Ref: 55d513715
Ref: reference/mpi4py MPI THREAD_FUNNELED mpi4py-mpi-thread-funneled513715
Ref: 55e513715
Ref: reference/mpi4py MPI THREAD_FUNNELED mpi4py MPI THREAD_FUNNELED513786
Ref: 177513786
Ref: mpi4py MPI THREAD_FUNNELED-Footnote-1513921
Ref: mpi4py MPI THREAD_FUNNELED-Footnote-2513982
Node: mpi4py MPI THREAD_SERIALIZED514043
Ref: reference/mpi4py MPI THREAD_SERIALIZED doc514191
Ref: 55f514191
Ref: reference/mpi4py MPI THREAD_SERIALIZED mpi4py-mpi-thread-serialized514191
Ref: 560514191
Ref: reference/mpi4py MPI THREAD_SERIALIZED mpi4py MPI THREAD_SERIALIZED514266
Ref: 178514266
Ref: mpi4py MPI THREAD_SERIALIZED-Footnote-1514407
Ref: mpi4py MPI THREAD_SERIALIZED-Footnote-2514468
Node: mpi4py MPI THREAD_MULTIPLE514529
Ref: reference/mpi4py MPI THREAD_MULTIPLE doc514669
Ref: 561514669
Ref: reference/mpi4py MPI THREAD_MULTIPLE mpi4py-mpi-thread-multiple514669
Ref: 562514669
Ref: reference/mpi4py MPI THREAD_MULTIPLE mpi4py MPI THREAD_MULTIPLE514740
Ref: 179514740
Ref: mpi4py MPI THREAD_MULTIPLE-Footnote-1514875
Ref: mpi4py MPI THREAD_MULTIPLE-Footnote-2514936
Node: mpi4py MPI VERSION514997
Ref: reference/mpi4py MPI VERSION doc515130
Ref: 563515130
Ref: reference/mpi4py MPI VERSION mpi4py-mpi-version515130
Ref: 564515130
Ref: reference/mpi4py MPI VERSION mpi4py MPI VERSION515185
Ref: 17a515185
Ref: mpi4py MPI VERSION-Footnote-1515296
Ref: mpi4py MPI VERSION-Footnote-2515357
Node: mpi4py MPI SUBVERSION515418
Ref: reference/mpi4py MPI SUBVERSION doc515554
Ref: 565515554
Ref: reference/mpi4py MPI SUBVERSION mpi4py-mpi-subversion515554
Ref: 566515554
Ref: reference/mpi4py MPI SUBVERSION mpi4py MPI SUBVERSION515615
Ref: 17b515615
Ref: mpi4py MPI SUBVERSION-Footnote-1515735
Ref: mpi4py MPI SUBVERSION-Footnote-2515796
Node: mpi4py MPI MAX_PROCESSOR_NAME515857
Ref: reference/mpi4py MPI MAX_PROCESSOR_NAME doc516002
Ref: 567516002
Ref: reference/mpi4py MPI MAX_PROCESSOR_NAME mpi4py-mpi-max-processor-name516002
Ref: 568516002
Ref: reference/mpi4py MPI MAX_PROCESSOR_NAME mpi4py MPI MAX_PROCESSOR_NAME516079
Ref: 17c516079
Ref: mpi4py MPI MAX_PROCESSOR_NAME-Footnote-1516223
Ref: mpi4py MPI MAX_PROCESSOR_NAME-Footnote-2516284
Node: mpi4py MPI MAX_ERROR_STRING516345
Ref: reference/mpi4py MPI MAX_ERROR_STRING doc516493
Ref: 569516493
Ref: reference/mpi4py MPI MAX_ERROR_STRING mpi4py-mpi-max-error-string516493
Ref: 56a516493
Ref: reference/mpi4py MPI MAX_ERROR_STRING mpi4py MPI MAX_ERROR_STRING516566
Ref: 17d516566
Ref: mpi4py MPI MAX_ERROR_STRING-Footnote-1516704
Ref: mpi4py MPI MAX_ERROR_STRING-Footnote-2516765
Node: mpi4py MPI MAX_PORT_NAME516826
Ref: reference/mpi4py MPI MAX_PORT_NAME doc516968
Ref: 56b516968
Ref: reference/mpi4py MPI MAX_PORT_NAME mpi4py-mpi-max-port-name516968
Ref: 56c516968
Ref: reference/mpi4py MPI MAX_PORT_NAME mpi4py MPI MAX_PORT_NAME517035
Ref: 17e517035
Ref: mpi4py MPI MAX_PORT_NAME-Footnote-1517164
Ref: mpi4py MPI MAX_PORT_NAME-Footnote-2517225
Node: mpi4py MPI MAX_INFO_KEY517286
Ref: reference/mpi4py MPI MAX_INFO_KEY doc517424
Ref: 56d517424
Ref: reference/mpi4py MPI MAX_INFO_KEY mpi4py-mpi-max-info-key517424
Ref: 56e517424
Ref: reference/mpi4py MPI MAX_INFO_KEY mpi4py MPI MAX_INFO_KEY517489
Ref: 17f517489
Ref: mpi4py MPI MAX_INFO_KEY-Footnote-1517615
Ref: mpi4py MPI MAX_INFO_KEY-Footnote-2517676
Node: mpi4py MPI MAX_INFO_VAL517737
Ref: reference/mpi4py MPI MAX_INFO_VAL doc517877
Ref: 56f517877
Ref: reference/mpi4py MPI MAX_INFO_VAL mpi4py-mpi-max-info-val517877
Ref: 570517877
Ref: reference/mpi4py MPI MAX_INFO_VAL mpi4py MPI MAX_INFO_VAL517942
Ref: 180517942
Ref: mpi4py MPI MAX_INFO_VAL-Footnote-1518068
Ref: mpi4py MPI MAX_INFO_VAL-Footnote-2518129
Node: mpi4py MPI MAX_OBJECT_NAME518190
Ref: reference/mpi4py MPI MAX_OBJECT_NAME doc518336
Ref: 571518336
Ref: reference/mpi4py MPI MAX_OBJECT_NAME mpi4py-mpi-max-object-name518336
Ref: 572518336
Ref: reference/mpi4py MPI MAX_OBJECT_NAME mpi4py MPI MAX_OBJECT_NAME518407
Ref: 181518407
Ref: mpi4py MPI MAX_OBJECT_NAME-Footnote-1518542
Ref: mpi4py MPI MAX_OBJECT_NAME-Footnote-2518603
Node: mpi4py MPI MAX_DATAREP_STRING518664
Ref: reference/mpi4py MPI MAX_DATAREP_STRING doc518824
Ref: 573518824
Ref: reference/mpi4py MPI MAX_DATAREP_STRING mpi4py-mpi-max-datarep-string518824
Ref: 574518824
Ref: reference/mpi4py MPI MAX_DATAREP_STRING mpi4py MPI MAX_DATAREP_STRING518901
Ref: 182518901
Ref: mpi4py MPI MAX_DATAREP_STRING-Footnote-1519045
Ref: mpi4py MPI MAX_DATAREP_STRING-Footnote-2519106
Node: mpi4py MPI MAX_LIBRARY_VERSION_STRING519167
Ref: reference/mpi4py MPI MAX_LIBRARY_VERSION_STRING doc519325
Ref: 575519325
Ref: reference/mpi4py MPI MAX_LIBRARY_VERSION_STRING mpi4py-mpi-max-library-version-string519325
Ref: 576519325
Ref: reference/mpi4py MPI MAX_LIBRARY_VERSION_STRING mpi4py MPI MAX_LIBRARY_VERSION_STRING519418
Ref: 183519418
Ref: mpi4py MPI MAX_LIBRARY_VERSION_STRING-Footnote-1519596
Ref: mpi4py MPI MAX_LIBRARY_VERSION_STRING-Footnote-2519657
Node: mpi4py MPI DATATYPE_NULL519718
Ref: reference/mpi4py MPI DATATYPE_NULL doc519860
Ref: 577519860
Ref: reference/mpi4py MPI DATATYPE_NULL mpi4py-mpi-datatype-null519860
Ref: 578519860
Ref: reference/mpi4py MPI DATATYPE_NULL mpi4py MPI DATATYPE_NULL519927
Ref: 184519927
Node: mpi4py MPI UB520046
Ref: reference/mpi4py MPI UB doc520164
Ref: 579520164
Ref: reference/mpi4py MPI UB mpi4py-mpi-ub520164
Ref: 57a520164
Ref: reference/mpi4py MPI UB mpi4py MPI UB520209
Ref: 185520209
Node: mpi4py MPI LB520295
Ref: reference/mpi4py MPI LB doc520406
Ref: 57b520406
Ref: reference/mpi4py MPI LB mpi4py-mpi-lb520406
Ref: 57c520406
Ref: reference/mpi4py MPI LB mpi4py MPI LB520451
Ref: 186520451
Node: mpi4py MPI PACKED520537
Ref: reference/mpi4py MPI PACKED doc520650
Ref: 57d520650
Ref: reference/mpi4py MPI PACKED mpi4py-mpi-packed520650
Ref: 57e520650
Ref: reference/mpi4py MPI PACKED mpi4py MPI PACKED520703
Ref: 187520703
Node: mpi4py MPI BYTE520801
Ref: reference/mpi4py MPI BYTE doc520916
Ref: 57f520916
Ref: reference/mpi4py MPI BYTE mpi4py-mpi-byte520916
Ref: 580520916
Ref: reference/mpi4py MPI BYTE mpi4py MPI BYTE520965
Ref: 188520965
Node: mpi4py MPI AINT521057
Ref: reference/mpi4py MPI AINT doc521172
Ref: 581521172
Ref: reference/mpi4py MPI AINT mpi4py-mpi-aint521172
Ref: 582521172
Ref: reference/mpi4py MPI AINT mpi4py MPI AINT521221
Ref: 189521221
Node: mpi4py MPI OFFSET521313
Ref: reference/mpi4py MPI OFFSET doc521429
Ref: 583521429
Ref: reference/mpi4py MPI OFFSET mpi4py-mpi-offset521429
Ref: 584521429
Ref: reference/mpi4py MPI OFFSET mpi4py MPI OFFSET521482
Ref: 18a521482
Node: mpi4py MPI COUNT521580
Ref: reference/mpi4py MPI COUNT doc521696
Ref: 585521696
Ref: reference/mpi4py MPI COUNT mpi4py-mpi-count521696
Ref: 586521696
Ref: reference/mpi4py MPI COUNT mpi4py MPI COUNT521747
Ref: 18b521747
Node: mpi4py MPI CHAR521842
Ref: reference/mpi4py MPI CHAR doc521957
Ref: 587521957
Ref: reference/mpi4py MPI CHAR mpi4py-mpi-char521957
Ref: 588521957
Ref: reference/mpi4py MPI CHAR mpi4py MPI CHAR522006
Ref: 18c522006
Node: mpi4py MPI WCHAR522098
Ref: reference/mpi4py MPI WCHAR doc522219
Ref: 589522219
Ref: reference/mpi4py MPI WCHAR mpi4py-mpi-wchar522219
Ref: 58a522219
Ref: reference/mpi4py MPI WCHAR mpi4py MPI WCHAR522270
Ref: 18d522270
Node: mpi4py MPI SIGNED_CHAR522365
Ref: reference/mpi4py MPI SIGNED_CHAR doc522487
Ref: 58b522487
Ref: reference/mpi4py MPI SIGNED_CHAR mpi4py-mpi-signed-char522487
Ref: 58c522487
Ref: reference/mpi4py MPI SIGNED_CHAR mpi4py MPI SIGNED_CHAR522550
Ref: 18e522550
Node: mpi4py MPI SHORT522663
Ref: reference/mpi4py MPI SHORT doc522783
Ref: 58d522783
Ref: reference/mpi4py MPI SHORT mpi4py-mpi-short522783
Ref: 58e522783
Ref: reference/mpi4py MPI SHORT mpi4py MPI SHORT522834
Ref: 18f522834
Node: mpi4py MPI INT522929
Ref: reference/mpi4py MPI INT doc523042
Ref: 58f523042
Ref: reference/mpi4py MPI INT mpi4py-mpi-int523042
Ref: 590523042
Ref: reference/mpi4py MPI INT mpi4py MPI INT523089
Ref: 190523089
Node: mpi4py MPI LONG523178
Ref: reference/mpi4py MPI LONG doc523295
Ref: 591523295
Ref: reference/mpi4py MPI LONG mpi4py-mpi-long523295
Ref: 592523295
Ref: reference/mpi4py MPI LONG mpi4py MPI LONG523344
Ref: 191523344
Node: mpi4py MPI LONG_LONG523436
Ref: reference/mpi4py MPI LONG_LONG doc523563
Ref: 593523563
Ref: reference/mpi4py MPI LONG_LONG mpi4py-mpi-long-long523563
Ref: 594523563
Ref: reference/mpi4py MPI LONG_LONG mpi4py MPI LONG_LONG523622
Ref: 192523622
Node: mpi4py MPI UNSIGNED_CHAR523729
Ref: reference/mpi4py MPI UNSIGNED_CHAR doc523866
Ref: 595523866
Ref: reference/mpi4py MPI UNSIGNED_CHAR mpi4py-mpi-unsigned-char523866
Ref: 596523866
Ref: reference/mpi4py MPI UNSIGNED_CHAR mpi4py MPI UNSIGNED_CHAR523933
Ref: 193523933
Node: mpi4py MPI UNSIGNED_SHORT524052
Ref: reference/mpi4py MPI UNSIGNED_SHORT doc524188
Ref: 597524188
Ref: reference/mpi4py MPI UNSIGNED_SHORT mpi4py-mpi-unsigned-short524188
Ref: 598524188
Ref: reference/mpi4py MPI UNSIGNED_SHORT mpi4py MPI UNSIGNED_SHORT524257
Ref: 194524257
Node: mpi4py MPI UNSIGNED524389
Ref: reference/mpi4py MPI UNSIGNED doc524525
Ref: 599524525
Ref: reference/mpi4py MPI UNSIGNED mpi4py-mpi-unsigned524525
Ref: 59a524525
Ref: reference/mpi4py MPI UNSIGNED mpi4py MPI UNSIGNED524582
Ref: 195524582
Node: mpi4py MPI UNSIGNED_LONG524686
Ref: reference/mpi4py MPI UNSIGNED_LONG doc524826
Ref: 59b524826
Ref: reference/mpi4py MPI UNSIGNED_LONG mpi4py-mpi-unsigned-long524826
Ref: 59c524826
Ref: reference/mpi4py MPI UNSIGNED_LONG mpi4py MPI UNSIGNED_LONG524893
Ref: 196524893
Node: mpi4py MPI UNSIGNED_LONG_LONG525012
Ref: reference/mpi4py MPI UNSIGNED_LONG_LONG doc525149
Ref: 59d525149
Ref: reference/mpi4py MPI UNSIGNED_LONG_LONG mpi4py-mpi-unsigned-long-long525149
Ref: 59e525149
Ref: reference/mpi4py MPI UNSIGNED_LONG_LONG mpi4py MPI UNSIGNED_LONG_LONG525226
Ref: 197525226
Node: mpi4py MPI FLOAT525370
Ref: reference/mpi4py MPI FLOAT doc525500
Ref: 59f525500
Ref: reference/mpi4py MPI FLOAT mpi4py-mpi-float525500
Ref: 5a0525500
Ref: reference/mpi4py MPI FLOAT mpi4py MPI FLOAT525551
Ref: 198525551
Node: mpi4py MPI DOUBLE525646
Ref: reference/mpi4py MPI DOUBLE doc525769
Ref: 5a1525769
Ref: reference/mpi4py MPI DOUBLE mpi4py-mpi-double525769
Ref: 5a2525769
Ref: reference/mpi4py MPI DOUBLE mpi4py MPI DOUBLE525822
Ref: 199525822
Node: mpi4py MPI LONG_DOUBLE525920
Ref: reference/mpi4py MPI LONG_DOUBLE doc526044
Ref: 5a3526044
Ref: reference/mpi4py MPI LONG_DOUBLE mpi4py-mpi-long-double526044
Ref: 5a4526044
Ref: reference/mpi4py MPI LONG_DOUBLE mpi4py MPI LONG_DOUBLE526107
Ref: 19a526107
Node: mpi4py MPI C_BOOL526220
Ref: reference/mpi4py MPI C_BOOL doc526344
Ref: 5a5526344
Ref: reference/mpi4py MPI C_BOOL mpi4py-mpi-c-bool526344
Ref: 5a6526344
Ref: reference/mpi4py MPI C_BOOL mpi4py MPI C_BOOL526397
Ref: 19b526397
Node: mpi4py MPI INT8_T526495
Ref: reference/mpi4py MPI INT8_T doc526615
Ref: 5a7526615
Ref: reference/mpi4py MPI INT8_T mpi4py-mpi-int8-t526615
Ref: 5a8526615
Ref: reference/mpi4py MPI INT8_T mpi4py MPI INT8_T526668
Ref: 19c526668
Node: mpi4py MPI INT16_T526766
Ref: reference/mpi4py MPI INT16_T doc526887
Ref: 5a9526887
Ref: reference/mpi4py MPI INT16_T mpi4py-mpi-int16-t526887
Ref: 5aa526887
Ref: reference/mpi4py MPI INT16_T mpi4py MPI INT16_T526942
Ref: 19d526942
Node: mpi4py MPI INT32_T527043
Ref: reference/mpi4py MPI INT32_T doc527165
Ref: 5ab527165
Ref: reference/mpi4py MPI INT32_T mpi4py-mpi-int32-t527165
Ref: 5ac527165
Ref: reference/mpi4py MPI INT32_T mpi4py MPI INT32_T527220
Ref: 19e527220
Node: mpi4py MPI INT64_T527321
Ref: reference/mpi4py MPI INT64_T doc527443
Ref: 5ad527443
Ref: reference/mpi4py MPI INT64_T mpi4py-mpi-int64-t527443
Ref: 5ae527443
Ref: reference/mpi4py MPI INT64_T mpi4py MPI INT64_T527498
Ref: 19f527498
Node: mpi4py MPI UINT8_T527599
Ref: reference/mpi4py MPI UINT8_T doc527722
Ref: 5af527722
Ref: reference/mpi4py MPI UINT8_T mpi4py-mpi-uint8-t527722
Ref: 5b0527722
Ref: reference/mpi4py MPI UINT8_T mpi4py MPI UINT8_T527777
Ref: 1a0527777
Node: mpi4py MPI UINT16_T527878
Ref: reference/mpi4py MPI UINT16_T doc528002
Ref: 5b1528002
Ref: reference/mpi4py MPI UINT16_T mpi4py-mpi-uint16-t528002
Ref: 5b2528002
Ref: reference/mpi4py MPI UINT16_T mpi4py MPI UINT16_T528059
Ref: 1a1528059
Node: mpi4py MPI UINT32_T528163
Ref: reference/mpi4py MPI UINT32_T doc528288
Ref: 5b3528288
Ref: reference/mpi4py MPI UINT32_T mpi4py-mpi-uint32-t528288
Ref: 5b4528288
Ref: reference/mpi4py MPI UINT32_T mpi4py MPI UINT32_T528345
Ref: 1a2528345
Node: mpi4py MPI UINT64_T528449
Ref: reference/mpi4py MPI UINT64_T doc528575
Ref: 5b5528575
Ref: reference/mpi4py MPI UINT64_T mpi4py-mpi-uint64-t528575
Ref: 5b6528575
Ref: reference/mpi4py MPI UINT64_T mpi4py MPI UINT64_T528632
Ref: 1a3528632
Node: mpi4py MPI C_COMPLEX528736
Ref: reference/mpi4py MPI C_COMPLEX doc528869
Ref: 5b7528869
Ref: reference/mpi4py MPI C_COMPLEX mpi4py-mpi-c-complex528869
Ref: 5b8528869
Ref: reference/mpi4py MPI C_COMPLEX mpi4py MPI C_COMPLEX528928
Ref: 1a4528928
Node: mpi4py MPI C_FLOAT_COMPLEX529035
Ref: reference/mpi4py MPI C_FLOAT_COMPLEX doc529176
Ref: 5b9529176
Ref: reference/mpi4py MPI C_FLOAT_COMPLEX mpi4py-mpi-c-float-complex529176
Ref: 5ba529176
Ref: reference/mpi4py MPI C_FLOAT_COMPLEX mpi4py MPI C_FLOAT_COMPLEX529247
Ref: 1a5529247
Node: mpi4py MPI C_DOUBLE_COMPLEX529382
Ref: reference/mpi4py MPI C_DOUBLE_COMPLEX doc529535
Ref: 5bb529535
Ref: reference/mpi4py MPI C_DOUBLE_COMPLEX mpi4py-mpi-c-double-complex529535
Ref: 5bc529535
Ref: reference/mpi4py MPI C_DOUBLE_COMPLEX mpi4py MPI C_DOUBLE_COMPLEX529608
Ref: 1a6529608
Node: mpi4py MPI C_LONG_DOUBLE_COMPLEX529746
Ref: reference/mpi4py MPI C_LONG_DOUBLE_COMPLEX doc529892
Ref: 5bd529892
Ref: reference/mpi4py MPI C_LONG_DOUBLE_COMPLEX mpi4py-mpi-c-long-double-complex529892
Ref: 5be529892
Ref: reference/mpi4py MPI C_LONG_DOUBLE_COMPLEX mpi4py MPI C_LONG_DOUBLE_COMPLEX529975
Ref: 1a7529975
Node: mpi4py MPI CXX_BOOL530128
Ref: reference/mpi4py MPI CXX_BOOL doc530275
Ref: 5bf530275
Ref: reference/mpi4py MPI CXX_BOOL mpi4py-mpi-cxx-bool530275
Ref: 5c0530275
Ref: reference/mpi4py MPI CXX_BOOL mpi4py MPI CXX_BOOL530332
Ref: 1a8530332
Node: mpi4py MPI CXX_FLOAT_COMPLEX530436
Ref: reference/mpi4py MPI CXX_FLOAT_COMPLEX doc530580
Ref: 5c1530580
Ref: reference/mpi4py MPI CXX_FLOAT_COMPLEX mpi4py-mpi-cxx-float-complex530580
Ref: 5c2530580
Ref: reference/mpi4py MPI CXX_FLOAT_COMPLEX mpi4py MPI CXX_FLOAT_COMPLEX530655
Ref: 1a9530655
Node: mpi4py MPI CXX_DOUBLE_COMPLEX530796
Ref: reference/mpi4py MPI CXX_DOUBLE_COMPLEX doc530955
Ref: 5c3530955
Ref: reference/mpi4py MPI CXX_DOUBLE_COMPLEX mpi4py-mpi-cxx-double-complex530955
Ref: 5c4530955
Ref: reference/mpi4py MPI CXX_DOUBLE_COMPLEX mpi4py MPI CXX_DOUBLE_COMPLEX531032
Ref: 1aa531032
Node: mpi4py MPI CXX_LONG_DOUBLE_COMPLEX531176
Ref: reference/mpi4py MPI CXX_LONG_DOUBLE_COMPLEX doc531327
Ref: 5c5531327
Ref: reference/mpi4py MPI CXX_LONG_DOUBLE_COMPLEX mpi4py-mpi-cxx-long-double-complex531327
Ref: 5c6531327
Ref: reference/mpi4py MPI CXX_LONG_DOUBLE_COMPLEX mpi4py MPI CXX_LONG_DOUBLE_COMPLEX531414
Ref: 1ab531414
Node: mpi4py MPI SHORT_INT531573
Ref: reference/mpi4py MPI SHORT_INT doc531713
Ref: 5c7531713
Ref: reference/mpi4py MPI SHORT_INT mpi4py-mpi-short-int531713
Ref: 5c8531713
Ref: reference/mpi4py MPI SHORT_INT mpi4py MPI SHORT_INT531772
Ref: 1ac531772
Node: mpi4py MPI INT_INT531879
Ref: reference/mpi4py MPI INT_INT doc532002
Ref: 5c9532002
Ref: reference/mpi4py MPI INT_INT mpi4py-mpi-int-int532002
Ref: 5ca532002
Ref: reference/mpi4py MPI INT_INT mpi4py MPI INT_INT532057
Ref: 1ad532057
Node: mpi4py MPI TWOINT532158
Ref: reference/mpi4py MPI TWOINT doc532280
Ref: 5cb532280
Ref: reference/mpi4py MPI TWOINT mpi4py-mpi-twoint532280
Ref: 5cc532280
Ref: reference/mpi4py MPI TWOINT mpi4py MPI TWOINT532333
Ref: 1ae532333
Node: mpi4py MPI LONG_INT532431
Ref: reference/mpi4py MPI LONG_INT doc532555
Ref: 5cd532555
Ref: reference/mpi4py MPI LONG_INT mpi4py-mpi-long-int532555
Ref: 5ce532555
Ref: reference/mpi4py MPI LONG_INT mpi4py MPI LONG_INT532612
Ref: 1af532612
Node: mpi4py MPI FLOAT_INT532716
Ref: reference/mpi4py MPI FLOAT_INT doc532844
Ref: 5cf532844
Ref: reference/mpi4py MPI FLOAT_INT mpi4py-mpi-float-int532844
Ref: 5d0532844
Ref: reference/mpi4py MPI FLOAT_INT mpi4py MPI FLOAT_INT532903
Ref: 1b0532903
Node: mpi4py MPI DOUBLE_INT533010
Ref: reference/mpi4py MPI DOUBLE_INT doc533145
Ref: 5d1533145
Ref: reference/mpi4py MPI DOUBLE_INT mpi4py-mpi-double-int533145
Ref: 5d2533145
Ref: reference/mpi4py MPI DOUBLE_INT mpi4py MPI DOUBLE_INT533206
Ref: 1b1533206
Node: mpi4py MPI LONG_DOUBLE_INT533316
Ref: reference/mpi4py MPI LONG_DOUBLE_INT doc533451
Ref: 5d3533451
Ref: reference/mpi4py MPI LONG_DOUBLE_INT mpi4py-mpi-long-double-int533451
Ref: 5d4533451
Ref: reference/mpi4py MPI LONG_DOUBLE_INT mpi4py MPI LONG_DOUBLE_INT533522
Ref: 1b2533522
Node: mpi4py MPI CHARACTER533657
Ref: reference/mpi4py MPI CHARACTER doc533789
Ref: 5d5533789
Ref: reference/mpi4py MPI CHARACTER mpi4py-mpi-character533789
Ref: 5d6533789
Ref: reference/mpi4py MPI CHARACTER mpi4py MPI CHARACTER533848
Ref: 1b3533848
Node: mpi4py MPI LOGICAL533955
Ref: reference/mpi4py MPI LOGICAL doc534079
Ref: 5d7534079
Ref: reference/mpi4py MPI LOGICAL mpi4py-mpi-logical534079
Ref: 5d8534079
Ref: reference/mpi4py MPI LOGICAL mpi4py MPI LOGICAL534134
Ref: 1b4534134
Node: mpi4py MPI INTEGER534235
Ref: reference/mpi4py MPI INTEGER doc534354
Ref: 5d9534354
Ref: reference/mpi4py MPI INTEGER mpi4py-mpi-integer534354
Ref: 5da534354
Ref: reference/mpi4py MPI INTEGER mpi4py MPI INTEGER534409
Ref: 1b5534409
Node: mpi4py MPI REAL534510
Ref: reference/mpi4py MPI REAL doc534638
Ref: 5db534638
Ref: reference/mpi4py MPI REAL mpi4py-mpi-real534638
Ref: 5dc534638
Ref: reference/mpi4py MPI REAL mpi4py MPI REAL534687
Ref: 1b6534687
Node: mpi4py MPI DOUBLE_PRECISION534779
Ref: reference/mpi4py MPI DOUBLE_PRECISION doc534907
Ref: 5dd534907
Ref: reference/mpi4py MPI DOUBLE_PRECISION mpi4py-mpi-double-precision534907
Ref: 5de534907
Ref: reference/mpi4py MPI DOUBLE_PRECISION mpi4py MPI DOUBLE_PRECISION534980
Ref: 1b7534980
Node: mpi4py MPI COMPLEX535118
Ref: reference/mpi4py MPI COMPLEX doc535256
Ref: 5df535256
Ref: reference/mpi4py MPI COMPLEX mpi4py-mpi-complex535256
Ref: 5e0535256
Ref: reference/mpi4py MPI COMPLEX mpi4py MPI COMPLEX535311
Ref: 1b8535311
Node: mpi4py MPI DOUBLE_COMPLEX535412
Ref: reference/mpi4py MPI DOUBLE_COMPLEX doc535542
Ref: 5e1535542
Ref: reference/mpi4py MPI DOUBLE_COMPLEX mpi4py-mpi-double-complex535542
Ref: 5e2535542
Ref: reference/mpi4py MPI DOUBLE_COMPLEX mpi4py MPI DOUBLE_COMPLEX535611
Ref: 1b9535611
Node: mpi4py MPI LOGICAL1535743
Ref: reference/mpi4py MPI LOGICAL1 doc535874
Ref: 5e3535874
Ref: reference/mpi4py MPI LOGICAL1 mpi4py-mpi-logical1535874
Ref: 5e4535874
Ref: reference/mpi4py MPI LOGICAL1 mpi4py MPI LOGICAL1535931
Ref: 1ba535931
Node: mpi4py MPI LOGICAL2536035
Ref: reference/mpi4py MPI LOGICAL2 doc536160
Ref: 5e5536160
Ref: reference/mpi4py MPI LOGICAL2 mpi4py-mpi-logical2536160
Ref: 5e6536160
Ref: reference/mpi4py MPI LOGICAL2 mpi4py MPI LOGICAL2536217
Ref: 1bb536217
Node: mpi4py MPI LOGICAL4536321
Ref: reference/mpi4py MPI LOGICAL4 doc536446
Ref: 5e7536446
Ref: reference/mpi4py MPI LOGICAL4 mpi4py-mpi-logical4536446
Ref: 5e8536446
Ref: reference/mpi4py MPI LOGICAL4 mpi4py MPI LOGICAL4536503
Ref: 1bc536503
Node: mpi4py MPI LOGICAL8536607
Ref: reference/mpi4py MPI LOGICAL8 doc536732
Ref: 5e9536732
Ref: reference/mpi4py MPI LOGICAL8 mpi4py-mpi-logical8536732
Ref: 5ea536732
Ref: reference/mpi4py MPI LOGICAL8 mpi4py MPI LOGICAL8536789
Ref: 1bd536789
Node: mpi4py MPI INTEGER1536893
Ref: reference/mpi4py MPI INTEGER1 doc537018
Ref: 5eb537018
Ref: reference/mpi4py MPI INTEGER1 mpi4py-mpi-integer1537018
Ref: 5ec537018
Ref: reference/mpi4py MPI INTEGER1 mpi4py MPI INTEGER1537075
Ref: 1be537075
Node: mpi4py MPI INTEGER2537179
Ref: reference/mpi4py MPI INTEGER2 doc537304
Ref: 5ed537304
Ref: reference/mpi4py MPI INTEGER2 mpi4py-mpi-integer2537304
Ref: 5ee537304
Ref: reference/mpi4py MPI INTEGER2 mpi4py MPI INTEGER2537361
Ref: 1bf537361
Node: mpi4py MPI INTEGER4537465
Ref: reference/mpi4py MPI INTEGER4 doc537590
Ref: 5ef537590
Ref: reference/mpi4py MPI INTEGER4 mpi4py-mpi-integer4537590
Ref: 5f0537590
Ref: reference/mpi4py MPI INTEGER4 mpi4py MPI INTEGER4537647
Ref: 1c0537647
Node: mpi4py MPI INTEGER8537751
Ref: reference/mpi4py MPI INTEGER8 doc537877
Ref: 5f1537877
Ref: reference/mpi4py MPI INTEGER8 mpi4py-mpi-integer8537877
Ref: 5f2537877
Ref: reference/mpi4py MPI INTEGER8 mpi4py MPI INTEGER8537934
Ref: 1c1537934
Node: mpi4py MPI INTEGER16538038
Ref: reference/mpi4py MPI INTEGER16 doc538161
Ref: 5f3538161
Ref: reference/mpi4py MPI INTEGER16 mpi4py-mpi-integer16538161
Ref: 5f4538161
Ref: reference/mpi4py MPI INTEGER16 mpi4py MPI INTEGER16538220
Ref: 1c2538220
Node: mpi4py MPI REAL2538327
Ref: reference/mpi4py MPI REAL2 doc538447
Ref: 5f5538447
Ref: reference/mpi4py MPI REAL2 mpi4py-mpi-real2538447
Ref: 5f6538447
Ref: reference/mpi4py MPI REAL2 mpi4py MPI REAL2538498
Ref: 1c3538498
Node: mpi4py MPI REAL4538593
Ref: reference/mpi4py MPI REAL4 doc538709
Ref: 5f7538709
Ref: reference/mpi4py MPI REAL4 mpi4py-mpi-real4538709
Ref: 5f8538709
Ref: reference/mpi4py MPI REAL4 mpi4py MPI REAL4538760
Ref: 1c4538760
Node: mpi4py MPI REAL8538855
Ref: reference/mpi4py MPI REAL8 doc538972
Ref: 5f9538972
Ref: reference/mpi4py MPI REAL8 mpi4py-mpi-real8538972
Ref: 5fa538972
Ref: reference/mpi4py MPI REAL8 mpi4py MPI REAL8539023
Ref: 1c5539023
Node: mpi4py MPI REAL16539118
Ref: reference/mpi4py MPI REAL16 doc539238
Ref: 5fb539238
Ref: reference/mpi4py MPI REAL16 mpi4py-mpi-real16539238
Ref: 5fc539238
Ref: reference/mpi4py MPI REAL16 mpi4py MPI REAL16539291
Ref: 1c6539291
Node: mpi4py MPI COMPLEX4539389
Ref: reference/mpi4py MPI COMPLEX4 doc539512
Ref: 5fd539512
Ref: reference/mpi4py MPI COMPLEX4 mpi4py-mpi-complex4539512
Ref: 5fe539512
Ref: reference/mpi4py MPI COMPLEX4 mpi4py MPI COMPLEX4539569
Ref: 1c7539569
Node: mpi4py MPI COMPLEX8539673
Ref: reference/mpi4py MPI COMPLEX8 doc539799
Ref: 5ff539799
Ref: reference/mpi4py MPI COMPLEX8 mpi4py-mpi-complex8539799
Ref: 600539799
Ref: reference/mpi4py MPI COMPLEX8 mpi4py MPI COMPLEX8539856
Ref: 1c8539856
Node: mpi4py MPI COMPLEX16539960
Ref: reference/mpi4py MPI COMPLEX16 doc540087
Ref: 601540087
Ref: reference/mpi4py MPI COMPLEX16 mpi4py-mpi-complex16540087
Ref: 602540087
Ref: reference/mpi4py MPI COMPLEX16 mpi4py MPI COMPLEX16540146
Ref: 1c9540146
Node: mpi4py MPI COMPLEX32540253
Ref: reference/mpi4py MPI COMPLEX32 doc540384
Ref: 603540384
Ref: reference/mpi4py MPI COMPLEX32 mpi4py-mpi-complex32540384
Ref: 604540384
Ref: reference/mpi4py MPI COMPLEX32 mpi4py MPI COMPLEX32540443
Ref: 1ca540443
Node: mpi4py MPI UNSIGNED_INT540550
Ref: reference/mpi4py MPI UNSIGNED_INT doc540684
Ref: 605540684
Ref: reference/mpi4py MPI UNSIGNED_INT mpi4py-mpi-unsigned-int540684
Ref: 606540684
Ref: reference/mpi4py MPI UNSIGNED_INT mpi4py MPI UNSIGNED_INT540749
Ref: 1cb540749
Node: mpi4py MPI SIGNED_SHORT540865
Ref: reference/mpi4py MPI SIGNED_SHORT doc541000
Ref: 607541000
Ref: reference/mpi4py MPI SIGNED_SHORT mpi4py-mpi-signed-short541000
Ref: 608541000
Ref: reference/mpi4py MPI SIGNED_SHORT mpi4py MPI SIGNED_SHORT541065
Ref: 1cc541065
Node: mpi4py MPI SIGNED_INT541181
Ref: reference/mpi4py MPI SIGNED_INT doc541315
Ref: 609541315
Ref: reference/mpi4py MPI SIGNED_INT mpi4py-mpi-signed-int541315
Ref: 60a541315
Ref: reference/mpi4py MPI SIGNED_INT mpi4py MPI SIGNED_INT541376
Ref: 1cd541376
Node: mpi4py MPI SIGNED_LONG541486
Ref: reference/mpi4py MPI SIGNED_LONG doc541624
Ref: 60b541624
Ref: reference/mpi4py MPI SIGNED_LONG mpi4py-mpi-signed-long541624
Ref: 60c541624
Ref: reference/mpi4py MPI SIGNED_LONG mpi4py MPI SIGNED_LONG541687
Ref: 1ce541687
Node: mpi4py MPI SIGNED_LONG_LONG541800
Ref: reference/mpi4py MPI SIGNED_LONG_LONG doc541932
Ref: 60d541932
Ref: reference/mpi4py MPI SIGNED_LONG_LONG mpi4py-mpi-signed-long-long541932
Ref: 60e541932
Ref: reference/mpi4py MPI SIGNED_LONG_LONG mpi4py MPI SIGNED_LONG_LONG542005
Ref: 1cf542005
Node: mpi4py MPI BOOL542143
Ref: reference/mpi4py MPI BOOL doc542271
Ref: 60f542271
Ref: reference/mpi4py MPI BOOL mpi4py-mpi-bool542271
Ref: 610542271
Ref: reference/mpi4py MPI BOOL mpi4py MPI BOOL542320
Ref: 1d0542320
Node: mpi4py MPI SINT8_T542412
Ref: reference/mpi4py MPI SINT8_T doc542532
Ref: 611542532
Ref: reference/mpi4py MPI SINT8_T mpi4py-mpi-sint8-t542532
Ref: 612542532
Ref: reference/mpi4py MPI SINT8_T mpi4py MPI SINT8_T542587
Ref: 1d1542587
Node: mpi4py MPI SINT16_T542688
Ref: reference/mpi4py MPI SINT16_T doc542812
Ref: 613542812
Ref: reference/mpi4py MPI SINT16_T mpi4py-mpi-sint16-t542812
Ref: 614542812
Ref: reference/mpi4py MPI SINT16_T mpi4py MPI SINT16_T542869
Ref: 1d2542869
Node: mpi4py MPI SINT32_T542973
Ref: reference/mpi4py MPI SINT32_T doc543098
Ref: 615543098
Ref: reference/mpi4py MPI SINT32_T mpi4py-mpi-sint32-t543098
Ref: 616543098
Ref: reference/mpi4py MPI SINT32_T mpi4py MPI SINT32_T543155
Ref: 1d3543155
Node: mpi4py MPI SINT64_T543259
Ref: reference/mpi4py MPI SINT64_T doc543382
Ref: 617543382
Ref: reference/mpi4py MPI SINT64_T mpi4py-mpi-sint64-t543382
Ref: 618543382
Ref: reference/mpi4py MPI SINT64_T mpi4py MPI SINT64_T543439
Ref: 1d4543439
Node: mpi4py MPI F_BOOL543543
Ref: reference/mpi4py MPI F_BOOL doc543663
Ref: 619543663
Ref: reference/mpi4py MPI F_BOOL mpi4py-mpi-f-bool543663
Ref: 61a543663
Ref: reference/mpi4py MPI F_BOOL mpi4py MPI F_BOOL543716
Ref: 1d5543716
Node: mpi4py MPI F_INT543814
Ref: reference/mpi4py MPI F_INT doc543933
Ref: 61b543933
Ref: reference/mpi4py MPI F_INT mpi4py-mpi-f-int543933
Ref: 61c543933
Ref: reference/mpi4py MPI F_INT mpi4py MPI F_INT543984
Ref: 1d6543984
Node: mpi4py MPI F_FLOAT544079
Ref: reference/mpi4py MPI F_FLOAT doc544200
Ref: 61d544200
Ref: reference/mpi4py MPI F_FLOAT mpi4py-mpi-f-float544200
Ref: 61e544200
Ref: reference/mpi4py MPI F_FLOAT mpi4py MPI F_FLOAT544255
Ref: 1d7544255
Node: mpi4py MPI F_DOUBLE544356
Ref: reference/mpi4py MPI F_DOUBLE doc544481
Ref: 61f544481
Ref: reference/mpi4py MPI F_DOUBLE mpi4py-mpi-f-double544481
Ref: 620544481
Ref: reference/mpi4py MPI F_DOUBLE mpi4py MPI F_DOUBLE544538
Ref: 1d8544538
Node: mpi4py MPI F_COMPLEX544642
Ref: reference/mpi4py MPI F_COMPLEX doc544775
Ref: 621544775
Ref: reference/mpi4py MPI F_COMPLEX mpi4py-mpi-f-complex544775
Ref: 622544775
Ref: reference/mpi4py MPI F_COMPLEX mpi4py MPI F_COMPLEX544834
Ref: 1d9544834
Node: mpi4py MPI F_FLOAT_COMPLEX544941
Ref: reference/mpi4py MPI F_FLOAT_COMPLEX doc545082
Ref: 623545082
Ref: reference/mpi4py MPI F_FLOAT_COMPLEX mpi4py-mpi-f-float-complex545082
Ref: 624545082
Ref: reference/mpi4py MPI F_FLOAT_COMPLEX mpi4py MPI F_FLOAT_COMPLEX545153
Ref: 1da545153
Node: mpi4py MPI F_DOUBLE_COMPLEX545288
Ref: reference/mpi4py MPI F_DOUBLE_COMPLEX doc545432
Ref: 625545432
Ref: reference/mpi4py MPI F_DOUBLE_COMPLEX mpi4py-mpi-f-double-complex545432
Ref: 626545432
Ref: reference/mpi4py MPI F_DOUBLE_COMPLEX mpi4py MPI F_DOUBLE_COMPLEX545505
Ref: 1db545505
Node: mpi4py MPI REQUEST_NULL545643
Ref: reference/mpi4py MPI REQUEST_NULL doc545784
Ref: 627545784
Ref: reference/mpi4py MPI REQUEST_NULL mpi4py-mpi-request-null545784
Ref: 628545784
Ref: reference/mpi4py MPI REQUEST_NULL mpi4py MPI REQUEST_NULL545849
Ref: 1dc545849
Node: mpi4py MPI MESSAGE_NULL545963
Ref: reference/mpi4py MPI MESSAGE_NULL doc546103
Ref: 629546103
Ref: reference/mpi4py MPI MESSAGE_NULL mpi4py-mpi-message-null546103
Ref: 62a546103
Ref: reference/mpi4py MPI MESSAGE_NULL mpi4py MPI MESSAGE_NULL546168
Ref: 1dd546168
Node: mpi4py MPI MESSAGE_NO_PROC546282
Ref: reference/mpi4py MPI MESSAGE_NO_PROC doc546417
Ref: 62b546417
Ref: reference/mpi4py MPI MESSAGE_NO_PROC mpi4py-mpi-message-no-proc546417
Ref: 62c546417
Ref: reference/mpi4py MPI MESSAGE_NO_PROC mpi4py MPI MESSAGE_NO_PROC546488
Ref: 1de546488
Node: mpi4py MPI OP_NULL546621
Ref: reference/mpi4py MPI OP_NULL doc546747
Ref: 62d546747
Ref: reference/mpi4py MPI OP_NULL mpi4py-mpi-op-null546747
Ref: 62e546747
Ref: reference/mpi4py MPI OP_NULL mpi4py MPI OP_NULL546802
Ref: 1df546802
Node: mpi4py MPI MAX547004
Ref: reference/mpi4py MPI MAX doc547118
Ref: 62f547118
Ref: reference/mpi4py MPI MAX mpi4py-mpi-max547118
Ref: 630547118
Ref: reference/mpi4py MPI MAX mpi4py MPI MAX547165
Ref: 63547165
Node: mpi4py MPI MIN547355
Ref: reference/mpi4py MPI MIN doc547465
Ref: 631547465
Ref: reference/mpi4py MPI MIN mpi4py-mpi-min547465
Ref: 632547465
Ref: reference/mpi4py MPI MIN mpi4py MPI MIN547512
Ref: 1e0547512
Node: mpi4py MPI SUM547702
Ref: reference/mpi4py MPI SUM doc547813
Ref: 633547813
Ref: reference/mpi4py MPI SUM mpi4py-mpi-sum547813
Ref: 634547813
Ref: reference/mpi4py MPI SUM mpi4py MPI SUM547860
Ref: 61547860
Node: mpi4py MPI PROD548050
Ref: reference/mpi4py MPI PROD doc548162
Ref: 635548162
Ref: reference/mpi4py MPI PROD mpi4py-mpi-prod548162
Ref: 636548162
Ref: reference/mpi4py MPI PROD mpi4py MPI PROD548211
Ref: 62548211
Node: mpi4py MPI LAND548404
Ref: reference/mpi4py MPI LAND doc548517
Ref: 637548517
Ref: reference/mpi4py MPI LAND mpi4py-mpi-land548517
Ref: 638548517
Ref: reference/mpi4py MPI LAND mpi4py MPI LAND548566
Ref: 1e1548566
Node: mpi4py MPI BAND548759
Ref: reference/mpi4py MPI BAND doc548871
Ref: 639548871
Ref: reference/mpi4py MPI BAND mpi4py-mpi-band548871
Ref: 63a548871
Ref: reference/mpi4py MPI BAND mpi4py MPI BAND548920
Ref: 1e2548920
Node: mpi4py MPI LOR549113
Ref: reference/mpi4py MPI LOR doc549224
Ref: 63b549224
Ref: reference/mpi4py MPI LOR mpi4py-mpi-lor549224
Ref: 63c549224
Ref: reference/mpi4py MPI LOR mpi4py MPI LOR549271
Ref: 1e3549271
Node: mpi4py MPI BOR549461
Ref: reference/mpi4py MPI BOR doc549572
Ref: 63d549572
Ref: reference/mpi4py MPI BOR mpi4py-mpi-bor549572
Ref: 63e549572
Ref: reference/mpi4py MPI BOR mpi4py MPI BOR549619
Ref: 1e4549619
Node: mpi4py MPI LXOR549809
Ref: reference/mpi4py MPI LXOR doc549921
Ref: 63f549921
Ref: reference/mpi4py MPI LXOR mpi4py-mpi-lxor549921
Ref: 640549921
Ref: reference/mpi4py MPI LXOR mpi4py MPI LXOR549970
Ref: 1e5549970
Node: mpi4py MPI BXOR550163
Ref: reference/mpi4py MPI BXOR doc550278
Ref: 641550278
Ref: reference/mpi4py MPI BXOR mpi4py-mpi-bxor550278
Ref: 642550278
Ref: reference/mpi4py MPI BXOR mpi4py MPI BXOR550327
Ref: 1e6550327
Node: mpi4py MPI MAXLOC550520
Ref: reference/mpi4py MPI MAXLOC doc550637
Ref: 643550637
Ref: reference/mpi4py MPI MAXLOC mpi4py-mpi-maxloc550637
Ref: 644550637
Ref: reference/mpi4py MPI MAXLOC mpi4py MPI MAXLOC550690
Ref: 1e7550690
Node: mpi4py MPI MINLOC550889
Ref: reference/mpi4py MPI MINLOC doc551009
Ref: 645551009
Ref: reference/mpi4py MPI MINLOC mpi4py-mpi-minloc551009
Ref: 646551009
Ref: reference/mpi4py MPI MINLOC mpi4py MPI MINLOC551062
Ref: 1e8551062
Node: mpi4py MPI REPLACE551261
Ref: reference/mpi4py MPI REPLACE doc551380
Ref: 647551380
Ref: reference/mpi4py MPI REPLACE mpi4py-mpi-replace551380
Ref: 648551380
Ref: reference/mpi4py MPI REPLACE mpi4py MPI REPLACE551435
Ref: 1e9551435
Node: mpi4py MPI NO_OP551637
Ref: reference/mpi4py MPI NO_OP doc551760
Ref: 649551760
Ref: reference/mpi4py MPI NO_OP mpi4py-mpi-no-op551760
Ref: 64a551760
Ref: reference/mpi4py MPI NO_OP mpi4py MPI NO_OP551811
Ref: 1ea551811
Node: mpi4py MPI GROUP_NULL552007
Ref: reference/mpi4py MPI GROUP_NULL doc552134
Ref: 64b552134
Ref: reference/mpi4py MPI GROUP_NULL mpi4py-mpi-group-null552134
Ref: 64c552134
Ref: reference/mpi4py MPI GROUP_NULL mpi4py MPI GROUP_NULL552195
Ref: 1eb552195
Node: mpi4py MPI GROUP_EMPTY552299
Ref: reference/mpi4py MPI GROUP_EMPTY doc552430
Ref: 64d552430
Ref: reference/mpi4py MPI GROUP_EMPTY mpi4py-mpi-group-empty552430
Ref: 64e552430
Ref: reference/mpi4py MPI GROUP_EMPTY mpi4py MPI GROUP_EMPTY552493
Ref: 1ec552493
Node: mpi4py MPI INFO_NULL552600
Ref: reference/mpi4py MPI INFO_NULL doc552729
Ref: 64f552729
Ref: reference/mpi4py MPI INFO_NULL mpi4py-mpi-info-null552729
Ref: 650552729
Ref: reference/mpi4py MPI INFO_NULL mpi4py MPI INFO_NULL552788
Ref: 1ed552788
Node: mpi4py MPI INFO_ENV552887
Ref: reference/mpi4py MPI INFO_ENV doc553020
Ref: 651553020
Ref: reference/mpi4py MPI INFO_ENV mpi4py-mpi-info-env553020
Ref: 652553020
Ref: reference/mpi4py MPI INFO_ENV mpi4py MPI INFO_ENV553077
Ref: 1ee553077
Node: mpi4py MPI ERRHANDLER_NULL553173
Ref: reference/mpi4py MPI ERRHANDLER_NULL doc553310
Ref: 653553310
Ref: reference/mpi4py MPI ERRHANDLER_NULL mpi4py-mpi-errhandler-null553310
Ref: 654553310
Ref: reference/mpi4py MPI ERRHANDLER_NULL mpi4py MPI ERRHANDLER_NULL553381
Ref: 1ef553381
Node: mpi4py MPI ERRORS_RETURN553520
Ref: reference/mpi4py MPI ERRORS_RETURN doc553665
Ref: 655553665
Ref: reference/mpi4py MPI ERRORS_RETURN mpi4py-mpi-errors-return553665
Ref: 656553665
Ref: reference/mpi4py MPI ERRORS_RETURN mpi4py MPI ERRORS_RETURN553732
Ref: 95553732
Node: mpi4py MPI ERRORS_ARE_FATAL553865
Ref: reference/mpi4py MPI ERRORS_ARE_FATAL doc554004
Ref: 657554004
Ref: reference/mpi4py MPI ERRORS_ARE_FATAL mpi4py-mpi-errors-are-fatal554004
Ref: 658554004
Ref: reference/mpi4py MPI ERRORS_ARE_FATAL mpi4py MPI ERRORS_ARE_FATAL554077
Ref: 96554077
Node: mpi4py MPI COMM_NULL554219
Ref: reference/mpi4py MPI COMM_NULL doc554354
Ref: 659554354
Ref: reference/mpi4py MPI COMM_NULL mpi4py-mpi-comm-null554354
Ref: 65a554354
Ref: reference/mpi4py MPI COMM_NULL mpi4py MPI COMM_NULL554413
Ref: 1f0554413
Node: mpi4py MPI COMM_SELF554512
Ref: reference/mpi4py MPI COMM_SELF doc554641
Ref: 65b554641
Ref: reference/mpi4py MPI COMM_SELF mpi4py-mpi-comm-self554641
Ref: 65c554641
Ref: reference/mpi4py MPI COMM_SELF mpi4py MPI COMM_SELF554700
Ref: 1f554700
Node: mpi4py MPI COMM_WORLD554809
Ref: reference/mpi4py MPI COMM_WORLD doc554937
Ref: 65d554937
Ref: reference/mpi4py MPI COMM_WORLD mpi4py-mpi-comm-world554937
Ref: 65e554937
Ref: reference/mpi4py MPI COMM_WORLD mpi4py MPI COMM_WORLD554998
Ref: 20554998
Node: mpi4py MPI WIN_NULL555110
Ref: reference/mpi4py MPI WIN_NULL doc555238
Ref: 65f555238
Ref: reference/mpi4py MPI WIN_NULL mpi4py-mpi-win-null555238
Ref: 660555238
Ref: reference/mpi4py MPI WIN_NULL mpi4py MPI WIN_NULL555295
Ref: 1f1555295
Node: mpi4py MPI FILE_NULL555389
Ref: reference/mpi4py MPI FILE_NULL doc555513
Ref: 661555513
Ref: reference/mpi4py MPI FILE_NULL mpi4py-mpi-file-null555513
Ref: 662555513
Ref: reference/mpi4py MPI FILE_NULL mpi4py MPI FILE_NULL555572
Ref: 1f2555572
Node: mpi4py MPI pickle555671
Ref: reference/mpi4py MPI pickle doc555767
Ref: 663555767
Ref: reference/mpi4py MPI pickle mpi4py-mpi-pickle555767
Ref: 664555767
Ref: reference/mpi4py MPI pickle mpi4py MPI pickle555820
Ref: a3555820
Node: Citation555944
Ref: citing doc556031
Ref: 665556031
Ref: citing citation556031
Ref: 666556031
Node: Installation557054
Ref: install doc557140
Ref: 667557140
Ref: install installation557140
Ref: 668557140
Node: Requirements557246
Ref: install requirements557325
Ref: 669557325
Node: Using pip558201
Ref: install using-pip558304
Ref: 66c558304
Node: Using distutils559350
Ref: install using-distutils559448
Ref: 66d559448
Ref: install cmdoption-mpicc560180
Ref: 66e560180
Ref: install cmdoption-mpi560303
Ref: 66f560303
Ref: install cmdoption-configure560426
Ref: 670560426
Node: Testing562645
Ref: install testing562725
Ref: 671562725
Ref: Testing-Footnote-1563778
Ref: Testing-Footnote-2563815
Node: Appendix563848
Ref: appendix doc563945
Ref: 672563945
Ref: appendix appendix563945
Ref: 673563945
Ref: appendix py-test563945
Ref: 674563945
Node: MPI-enabled Python interpreter564045
Ref: appendix mpi-enabled-python-interpreter564154
Ref: 675564154
Ref: appendix python-mpi564154
Ref: 66b564154
Node: Building MPI from sources566426
Ref: appendix building-mpi566535
Ref: 66a566535
Ref: appendix building-mpi-from-sources566535
Ref: 676566535
Node: Python Module Index568398
Node: Index568930

End Tag Table


Local Variables:
coding: utf-8
End:
